{"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\",\"filename\":\"C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\\\\wdio.conf.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.23.2:test":{"value":{"code":"\"use strict\";\n\nconst path = require('path');\nexports.config = {\n  //\n  // ====================\n  // Runner Configuration\n  // ====================\n  // WebdriverIO supports running e2e tests as well as unit and component tests.\n  runner: 'local',\n  port: 4723,\n  //\n  // ==================\n  // Specify Test Files\n  // ==================\n  // Define which test specs should run. The pattern is relative to the directory\n  // of the configuration file being run.\n  //\n  // The specs are defined as an array of spec files (optionally using wildcards\n  // that will be expanded). The test for each spec file will be run in a separate\n  // worker process. In order to have a group of spec files run in the same worker\n  // process simply enclose them in an array within the specs array.\n  //\n  // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n  // then the current working directory is where your `package.json` resides, so `wdio`\n  // will be called from there.\n  //\n  specs: [\n  // ToDo: define location for spec files here\n  //  './test/specs/**/*.js'\n  //'./test/specs/**/android-native*.js'\n  // './test/specs/android/*.js'\n  './test/specs/android/edit-note-screen.spec.js'],\n  // Patterns to exclude.\n  exclude: [\n    // 'path/to/excluded/files'\n  ],\n  //\n  // ============\n  // Capabilities\n  // ============\n  // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n  // time. Depending on the number of capabilities, WebdriverIO launches several test\n  // sessions. Within your capabilities you can overwrite the spec and exclude options in\n  // order to group specific specs to a specific capability.\n  //\n  // First, you can define how many instances should be started at the same time. Let's\n  // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n  // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n  // files and you set maxInstances to 10, all spec files will get tested at the same time\n  // and 30 processes will get spawned. The property handles how many capabilities\n  // from the same test should run tests.\n  //\n  maxInstances: 10,\n  //\n  // If you have trouble getting all important capabilities together, check out the\n  // Sauce Labs platform configurator - a great tool to configure your capabilities:\n  // https://saucelabs.com/platform/platform-configurator\n  //\n  capabilities: [{\n    'appium:platformName': 'Android',\n    'appium:platformVersion': '11.0',\n    'appium:deviceName': 'Pixel 3',\n    'appium:automationName': 'UIAutomator2',\n    //'appium:app' : path.join(process.cwd(), '.\\android\\ApiDemos-debug.apk')\n    'appium:app': 'C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\\\\app\\\\android\\\\ColorNote+Notepad.apk',\n    'appium:autoGrantPermissions': true\n  }],\n  //capabilities: [{\n  //   'appium:platformName' : 'Android',\n  //   'appium:platformVersion' : '10.0',\n  //  'appium:deviceName' : 'Nexus S',\n  //  'appium:automationName' : 'UIAutomator2',\n  //'appium:app' : path.join(process.cwd(), 'app\\android\\ApiDemos-debug.apk')\n  // 'appium:app' : 'C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\\\\app\\\\android\\\\ApiDemos-debug.apk'\n  //  }],\n  // capabilities for local Appium web tests on an Android Emulator\n  ////platformName: 'Android',\n  //browserName: 'Chrome',\n  //'appium:deviceName': 'Android GoogleAPI Emulator',\n  // 'appium:platformVersion': '12.0',\n  //'appium:automationName': 'UiAutomator2'\n\n  //\n  // ===================\n  // Test Configurations\n  // ===================\n  // Define all options that are relevant for the WebdriverIO instance here\n  //\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  logLevel: 'info',\n  //\n  // Set specific log levels per logger\n  // loggers:\n  // - webdriver, webdriverio\n  // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n  // - @wdio/mocha-framework, @wdio/jasmine-framework\n  // - @wdio/local-runner\n  // - @wdio/sumologic-reporter\n  // - @wdio/cli, @wdio/config, @wdio/utils\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  // logLevels: {\n  //     webdriver: 'info',\n  //     '@wdio/appium-service': 'info'\n  // },\n  //\n  // If you only want to run your tests until a specific amount of tests have failed use\n  // bail (default is 0 - don't bail, run all tests).\n  bail: 0,\n  //\n  // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n  // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n  // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n  // gets prepended directly.\n  baseUrl: '',\n  //\n  // Default timeout for all waitFor* commands.\n  waitforTimeout: 10000,\n  //\n  // Default timeout in milliseconds for request\n  // if browser driver or grid doesn't send response\n  connectionRetryTimeout: 120000,\n  //\n  // Default request retries count\n  connectionRetryCount: 3,\n  //\n  // Test runner services\n  // Services take over a specific job you don't want to take care of. They enhance\n  // your test setup with almost no effort. Unlike plugins, they don't add new\n  // commands. Instead, they hook themselves up into the test process.\n  services: ['appium'],\n  // Framework you want to run your specs with.\n  // The following are supported: Mocha, Jasmine, and Cucumber\n  // see also: https://webdriver.io/docs/frameworks\n  //\n  // Make sure you have the wdio adapter package for the specific framework installed\n  // before running any tests.\n  framework: 'mocha',\n  //\n  // The number of times to retry the entire specfile when it fails as a whole\n  // specFileRetries: 1,\n  //\n  // Delay in seconds between the spec file retry attempts\n  // specFileRetriesDelay: 0,\n  //\n  // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n  // specFileRetriesDeferred: false,\n  //\n  // Test reporter for stdout.\n  // The only one supported by default is 'dot'\n  // see also: https://webdriver.io/docs/dot-reporter\n  reporters: ['spec'],\n  //\n  // Options to be passed to Mocha.\n  // See the full list at http://mochajs.org/\n  mochaOpts: {\n    ui: 'bdd',\n    timeout: 60000\n  }\n  //\n  // =====\n  // Hooks\n  // =====\n  // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n  // it and to build services around it. You can either apply a single function or an array of\n  // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n  // resolved to continue.\n  /**\n   * Gets executed once before all workers get launched.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   */\n  // onPrepare: function (config, capabilities) {\n  //},\n  /**\n   * Gets executed before a worker process is spawned and can be used to initialise specific service\n   * for that worker as well as modify runtime environments in an async fashion.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n   * @param  {object} execArgv list of string arguments passed to the worker process\n   */\n  // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n  // },\n  /**\n   * Gets executed just after a worker process has exited.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {number} exitCode 0 - success, 1 - fail\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {number} retries  number of retries used\n   */\n  // onWorkerEnd: function (cid, exitCode, specs, retries) {\n  // },\n  /**\n   * Gets executed just before initialising the webdriver session and test framework. It allows you\n   * to manipulate configurations depending on the capability or spec.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that are to be run\n   * @param {string} cid worker id (e.g. 0-0)\n   */\n  // beforeSession: function (config, capabilities, specs, cid) {\n  // },\n  /**\n   * Gets executed before test execution begins. At this point you can access to all global\n   * variables like `browser`. It is the perfect place to define custom commands.\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs        List of spec file paths that are to be run\n   * @param {object}         browser      instance of created browser/device session\n   */\n  // before: function (capabilities, specs) {\n  // },\n  /**\n   * Runs before a WebdriverIO command gets executed.\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   */\n  // beforeCommand: function (commandName, args) {\n  // },\n  /**\n   * Hook that gets executed before the suite starts\n   * @param {object} suite suite details\n   */\n  // beforeSuite: function (suite) {\n  // },\n  /**\n   * Function to be executed before a test (in Mocha/Jasmine) starts.\n   */\n  // beforeTest: function (test, context) {\n  // },\n  /**\n   * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n   * beforeEach in Mocha)\n   */\n  // beforeHook: function (test, context) {\n  // },\n  /**\n   * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n   * afterEach in Mocha)\n   */\n  // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n  // },\n  /**\n   * Function to be executed after a test (in Mocha/Jasmine only)\n   * @param {object}  test             test object\n   * @param {object}  context          scope object the test was executed with\n   * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n   * @param {*}       result.result    return object of test function\n   * @param {number}  result.duration  duration of test\n   * @param {boolean} result.passed    true if test has passed, otherwise false\n   * @param {object}  result.retries   information about spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n   */\n  // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n  // },\n\n  /**\n   * Hook that gets executed after the suite has ended\n   * @param {object} suite suite details\n   */\n  // afterSuite: function (suite) {\n  // },\n  /**\n   * Runs after a WebdriverIO command gets executed\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   * @param {number} result 0 - command success, 1 - command error\n   * @param {object} error error object if any\n   */\n  // afterCommand: function (commandName, args, result, error) {\n  // },\n  /**\n   * Gets executed after all tests are done. You still have access to all global variables from\n   * the test.\n   * @param {number} result 0 - test pass, 1 - test fail\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // after: function (result, capabilities, specs) {\n  // },\n  /**\n   * Gets executed right after terminating the webdriver session.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // afterSession: function (config, capabilities, specs) {\n  // },\n  /**\n   * Gets executed after all workers got shut down and the process is about to exit. An error\n   * thrown in the onComplete hook will result in the test run failing.\n   * @param {object} exitCode 0 - success, 1 - fail\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {<Object>} results object containing test results\n   */\n  // onComplete: function(exitCode, config, capabilities, results) {\n  // },\n  /**\n  * Gets executed when a refresh happens.\n  * @param {string} oldSessionId session ID of the old session\n  * @param {string} newSessionId session ID of the new session\n  */\n  // onReload: function(oldSessionId, newSessionId) {\n  // }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["path","require","exports","config","runner","port","specs","exclude","maxInstances","capabilities","logLevel","bail","baseUrl","waitforTimeout","connectionRetryTimeout","connectionRetryCount","services","framework","reporters","mochaOpts","ui","timeout"],"sourceRoot":"C:\\Users\\rajee\\Appium\\webdriver-appium-v8\\","sources":["wdio.conf.js"],"sourcesContent":["const path = require('path');\n\nexports.config = {\n    //\n    // ====================\n    // Runner Configuration\n    // ====================\n    // WebdriverIO supports running e2e tests as well as unit and component tests.\n    runner: 'local',\n    port: 4723,\n    //\n    // ==================\n    // Specify Test Files\n    // ==================\n    // Define which test specs should run. The pattern is relative to the directory\n    // of the configuration file being run.\n    //\n    // The specs are defined as an array of spec files (optionally using wildcards\n    // that will be expanded). The test for each spec file will be run in a separate\n    // worker process. In order to have a group of spec files run in the same worker\n    // process simply enclose them in an array within the specs array.\n    //\n    // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n    // then the current working directory is where your `package.json` resides, so `wdio`\n    // will be called from there.\n    //\n    specs: [\n        // ToDo: define location for spec files here\n      //  './test/specs/**/*.js'\n      //'./test/specs/**/android-native*.js'\n     // './test/specs/android/*.js'\n      './test/specs/android/edit-note-screen.spec.js'\n    ],\n    // Patterns to exclude.\n    exclude: [\n        // 'path/to/excluded/files'\n    ],\n    //\n    // ============\n    // Capabilities\n    // ============\n    // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n    // time. Depending on the number of capabilities, WebdriverIO launches several test\n    // sessions. Within your capabilities you can overwrite the spec and exclude options in\n    // order to group specific specs to a specific capability.\n    //\n    // First, you can define how many instances should be started at the same time. Let's\n    // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n    // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n    // files and you set maxInstances to 10, all spec files will get tested at the same time\n    // and 30 processes will get spawned. The property handles how many capabilities\n    // from the same test should run tests.\n    //\n    maxInstances: 10,\n    //\n    // If you have trouble getting all important capabilities together, check out the\n    // Sauce Labs platform configurator - a great tool to configure your capabilities:\n    // https://saucelabs.com/platform/platform-configurator\n    //\n    capabilities: [{\n        'appium:platformName': 'Android',\n        'appium:platformVersion': '11.0',\n        'appium:deviceName': 'Pixel 3',\n        'appium:automationName': 'UIAutomator2',\n        //'appium:app' : path.join(process.cwd(), '.\\android\\ApiDemos-debug.apk')\n        'appium:app': 'C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\\\\app\\\\android\\\\ColorNote+Notepad.apk',\n        'appium:autoGrantPermissions' : true\n    }],\n\n    //capabilities: [{\n    //   'appium:platformName' : 'Android',\n    //   'appium:platformVersion' : '10.0',\n    //  'appium:deviceName' : 'Nexus S',\n    //  'appium:automationName' : 'UIAutomator2',\n    //'appium:app' : path.join(process.cwd(), 'app\\android\\ApiDemos-debug.apk')\n    // 'appium:app' : 'C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\\\\app\\\\android\\\\ApiDemos-debug.apk'\n    //  }],\n    // capabilities for local Appium web tests on an Android Emulator\n    ////platformName: 'Android',\n    //browserName: 'Chrome',\n    //'appium:deviceName': 'Android GoogleAPI Emulator',\n    // 'appium:platformVersion': '12.0',\n    //'appium:automationName': 'UiAutomator2'\n\n\n    //\n    // ===================\n    // Test Configurations\n    // ===================\n    // Define all options that are relevant for the WebdriverIO instance here\n    //\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    logLevel: 'info',\n    //\n    // Set specific log levels per logger\n    // loggers:\n    // - webdriver, webdriverio\n    // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n    // - @wdio/mocha-framework, @wdio/jasmine-framework\n    // - @wdio/local-runner\n    // - @wdio/sumologic-reporter\n    // - @wdio/cli, @wdio/config, @wdio/utils\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    // logLevels: {\n    //     webdriver: 'info',\n    //     '@wdio/appium-service': 'info'\n    // },\n    //\n    // If you only want to run your tests until a specific amount of tests have failed use\n    // bail (default is 0 - don't bail, run all tests).\n    bail: 0,\n    //\n    // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n    // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n    // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n    // gets prepended directly.\n    baseUrl: '',\n    //\n    // Default timeout for all waitFor* commands.\n    waitforTimeout: 10000,\n    //\n    // Default timeout in milliseconds for request\n    // if browser driver or grid doesn't send response\n    connectionRetryTimeout: 120000,\n    //\n    // Default request retries count\n    connectionRetryCount: 3,\n    //\n    // Test runner services\n    // Services take over a specific job you don't want to take care of. They enhance\n    // your test setup with almost no effort. Unlike plugins, they don't add new\n    // commands. Instead, they hook themselves up into the test process.\n    services: ['appium'],\n\n    // Framework you want to run your specs with.\n    // The following are supported: Mocha, Jasmine, and Cucumber\n    // see also: https://webdriver.io/docs/frameworks\n    //\n    // Make sure you have the wdio adapter package for the specific framework installed\n    // before running any tests.\n    framework: 'mocha',\n    //\n    // The number of times to retry the entire specfile when it fails as a whole\n    // specFileRetries: 1,\n    //\n    // Delay in seconds between the spec file retry attempts\n    // specFileRetriesDelay: 0,\n    //\n    // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n    // specFileRetriesDeferred: false,\n    //\n    // Test reporter for stdout.\n    // The only one supported by default is 'dot'\n    // see also: https://webdriver.io/docs/dot-reporter\n    reporters: ['spec'],\n\n\n    //\n    // Options to be passed to Mocha.\n    // See the full list at http://mochajs.org/\n    mochaOpts: {\n        ui: 'bdd',\n        timeout: 60000\n    },\n    //\n    // =====\n    // Hooks\n    // =====\n    // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n    // it and to build services around it. You can either apply a single function or an array of\n    // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n    // resolved to continue.\n    /**\n     * Gets executed once before all workers get launched.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     */\n    // onPrepare: function (config, capabilities) {\n    //},\n    /**\n     * Gets executed before a worker process is spawned and can be used to initialise specific service\n     * for that worker as well as modify runtime environments in an async fashion.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n     * @param  {object} execArgv list of string arguments passed to the worker process\n     */\n    // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n    // },\n    /**\n     * Gets executed just after a worker process has exited.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {number} exitCode 0 - success, 1 - fail\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {number} retries  number of retries used\n     */\n    // onWorkerEnd: function (cid, exitCode, specs, retries) {\n    // },\n    /**\n     * Gets executed just before initialising the webdriver session and test framework. It allows you\n     * to manipulate configurations depending on the capability or spec.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that are to be run\n     * @param {string} cid worker id (e.g. 0-0)\n     */\n    // beforeSession: function (config, capabilities, specs, cid) {\n    // },\n    /**\n     * Gets executed before test execution begins. At this point you can access to all global\n     * variables like `browser`. It is the perfect place to define custom commands.\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs        List of spec file paths that are to be run\n     * @param {object}         browser      instance of created browser/device session\n     */\n    // before: function (capabilities, specs) {\n    // },\n    /**\n     * Runs before a WebdriverIO command gets executed.\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     */\n    // beforeCommand: function (commandName, args) {\n    // },\n    /**\n     * Hook that gets executed before the suite starts\n     * @param {object} suite suite details\n     */\n    // beforeSuite: function (suite) {\n    // },\n    /**\n     * Function to be executed before a test (in Mocha/Jasmine) starts.\n     */\n    // beforeTest: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n     * beforeEach in Mocha)\n     */\n    // beforeHook: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n     * afterEach in Mocha)\n     */\n    // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n    // },\n    /**\n     * Function to be executed after a test (in Mocha/Jasmine only)\n     * @param {object}  test             test object\n     * @param {object}  context          scope object the test was executed with\n     * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n     * @param {*}       result.result    return object of test function\n     * @param {number}  result.duration  duration of test\n     * @param {boolean} result.passed    true if test has passed, otherwise false\n     * @param {object}  result.retries   information about spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n     */\n    // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n    // },\n\n\n    /**\n     * Hook that gets executed after the suite has ended\n     * @param {object} suite suite details\n     */\n    // afterSuite: function (suite) {\n    // },\n    /**\n     * Runs after a WebdriverIO command gets executed\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     * @param {number} result 0 - command success, 1 - command error\n     * @param {object} error error object if any\n     */\n    // afterCommand: function (commandName, args, result, error) {\n    // },\n    /**\n     * Gets executed after all tests are done. You still have access to all global variables from\n     * the test.\n     * @param {number} result 0 - test pass, 1 - test fail\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // after: function (result, capabilities, specs) {\n    // },\n    /**\n     * Gets executed right after terminating the webdriver session.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // afterSession: function (config, capabilities, specs) {\n    // },\n    /**\n     * Gets executed after all workers got shut down and the process is about to exit. An error\n     * thrown in the onComplete hook will result in the test run failing.\n     * @param {object} exitCode 0 - success, 1 - fail\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {<Object>} results object containing test results\n     */\n    // onComplete: function(exitCode, config, capabilities, results) {\n    // },\n    /**\n    * Gets executed when a refresh happens.\n    * @param {string} oldSessionId session ID of the old session\n    * @param {string} newSessionId session ID of the new session\n    */\n    // onReload: function(oldSessionId, newSessionId) {\n    // }\n}\n"],"mappings":";;AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAE5BC,OAAO,CAACC,MAAM,GAAG;EACb;EACA;EACA;EACA;EACA;EACAC,MAAM,EAAE,OAAO;EACfC,IAAI,EAAE,IAAI;EACV;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,KAAK,EAAE;EACH;EACF;EACA;EACD;EACC,+CAA+C,CAChD;EACD;EACAC,OAAO,EAAE;IACL;EAAA,CACH;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,EAAE;EAChB;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,CAAC;IACX,qBAAqB,EAAE,SAAS;IAChC,wBAAwB,EAAE,MAAM;IAChC,mBAAmB,EAAE,SAAS;IAC9B,uBAAuB,EAAE,cAAc;IACvC;IACA,YAAY,EAAE,oFAAoF;IAClG,6BAA6B,EAAG;EACpC,CAAC,CAAC;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,QAAQ,EAAE,MAAM;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,IAAI,EAAE,CAAC;EACP;EACA;EACA;EACA;EACA;EACAC,OAAO,EAAE,EAAE;EACX;EACA;EACAC,cAAc,EAAE,KAAK;EACrB;EACA;EACA;EACAC,sBAAsB,EAAE,MAAM;EAC9B;EACA;EACAC,oBAAoB,EAAE,CAAC;EACvB;EACA;EACA;EACA;EACA;EACAC,QAAQ,EAAE,CAAC,QAAQ,CAAC;EAEpB;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,OAAO;EAClB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,CAAC,MAAM,CAAC;EAGnB;EACA;EACA;EACAC,SAAS,EAAE;IACPC,EAAE,EAAE,KAAK;IACTC,OAAO,EAAE;EACb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EAGA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;AACJ,CAAC"}},"mtime":1698118977245},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\\\\test\\\\specs\\\\android\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\",\"filename\":\"C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\\\\test\\\\specs\\\\android\\\\edit-note-screen.spec.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-static-block\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.23.2:test":{"value":{"code":"\"use strict\";\n\nvar _editNote = _interopRequireDefault(require(\"../../screenObjects/android/edit-note.screen\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n//const AddNoteScreen = require(\"../../screenObjects/android/add-note.screen\");\n//const EditNoteScreen = require(\"../../screenObjects/android/edit-note.screen\");\n//baabel\n\ndescribe('Delete Notes', () => {\n  it('delete note, verify trash can', async () => {\n    console.log(\"User in delete note function\");\n    await _editNote.default.skipTutorial();\n    await _editNote.default.saveAndverify(\"Fav TV Show\", \"Naruto\\nTom and Jerry\\nNoddy\");\n    await driver.back();\n    await _editNote.default.getTitle.click();\n    await _editNote.default.more.click();\n    await _editNote.default.delete.click();\n    await driver.acceptAlert();\n    //android.widget.Button[@text='OK']\n    await expect(_editNote.default.getTitle).not.toExist();\n    await _editNote.default.nav.click();\n    await _editNote.default.trashCan.click();\n    await expect(_editNote.default.getTitle).toExist();\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZWRpdE5vdGUiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiZGVzY3JpYmUiLCJpdCIsImNvbnNvbGUiLCJsb2ciLCJFZGl0Tm90ZVNjcmVlbiIsInNraXBUdXRvcmlhbCIsInNhdmVBbmR2ZXJpZnkiLCJkcml2ZXIiLCJiYWNrIiwiZ2V0VGl0bGUiLCJjbGljayIsIm1vcmUiLCJkZWxldGUiLCJhY2NlcHRBbGVydCIsImV4cGVjdCIsIm5vdCIsInRvRXhpc3QiLCJuYXYiLCJ0cmFzaENhbiJdLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxyYWplZVxcQXBwaXVtXFx3ZWJkcml2ZXItYXBwaXVtLXY4XFx0ZXN0XFxzcGVjc1xcYW5kcm9pZFxcIiwic291cmNlcyI6WyJlZGl0LW5vdGUtc2NyZWVuLnNwZWMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy9jb25zdCBBZGROb3RlU2NyZWVuID0gcmVxdWlyZShcIi4uLy4uL3NjcmVlbk9iamVjdHMvYW5kcm9pZC9hZGQtbm90ZS5zY3JlZW5cIik7XHJcbi8vY29uc3QgRWRpdE5vdGVTY3JlZW4gPSByZXF1aXJlKFwiLi4vLi4vc2NyZWVuT2JqZWN0cy9hbmRyb2lkL2VkaXQtbm90ZS5zY3JlZW5cIik7XHJcbmltcG9ydCBFZGl0Tm90ZVNjcmVlbiBmcm9tICcuLi8uLi9zY3JlZW5PYmplY3RzL2FuZHJvaWQvZWRpdC1ub3RlLnNjcmVlbic7ICAgLy9iYWFiZWxcclxuXHJcbmRlc2NyaWJlKCdEZWxldGUgTm90ZXMnLCAoKSA9PiB7XHJcbiAgIFxyXG4gaXQoJ2RlbGV0ZSBub3RlLCB2ZXJpZnkgdHJhc2ggY2FuJywgYXN5bmMgKCkgPT4ge1xyXG4gICAgY29uc29sZS5sb2coXCJVc2VyIGluIGRlbGV0ZSBub3RlIGZ1bmN0aW9uXCIpXHJcbiAgICBhd2FpdCBFZGl0Tm90ZVNjcmVlbi5za2lwVHV0b3JpYWwoKTtcclxuICAgIGF3YWl0IEVkaXROb3RlU2NyZWVuLnNhdmVBbmR2ZXJpZnkoXCJGYXYgVFYgU2hvd1wiLCBcIk5hcnV0b1xcblRvbSBhbmQgSmVycnlcXG5Ob2RkeVwiKTtcclxuICAgIGF3YWl0IGRyaXZlci5iYWNrKCk7XHJcbiAgICBhd2FpdCBFZGl0Tm90ZVNjcmVlbi5nZXRUaXRsZS5jbGljaygpO1xyXG4gICAgYXdhaXQgRWRpdE5vdGVTY3JlZW4ubW9yZS5jbGljaygpO1xyXG4gICAgYXdhaXQgRWRpdE5vdGVTY3JlZW4uZGVsZXRlLmNsaWNrKCk7XHJcbiAgICBhd2FpdCBkcml2ZXIuYWNjZXB0QWxlcnQoKTtcclxuICAgIC8vYW5kcm9pZC53aWRnZXQuQnV0dG9uW0B0ZXh0PSdPSyddXHJcbiAgICBhd2FpdCBleHBlY3QoRWRpdE5vdGVTY3JlZW4uZ2V0VGl0bGUpLm5vdC50b0V4aXN0KCk7XHJcbiAgICBhd2FpdCBFZGl0Tm90ZVNjcmVlbi5uYXYuY2xpY2soKTtcclxuICAgIGF3YWl0IEVkaXROb3RlU2NyZWVuLnRyYXNoQ2FuLmNsaWNrKCk7XHJcbiAgICBhd2FpdCBleHBlY3QoRWRpdE5vdGVTY3JlZW4uZ2V0VGl0bGUpLnRvRXhpc3QoKTtcclxuXHJcbiB9KTtcclxufSk7Il0sIm1hcHBpbmdzIjoiOztBQUVBLElBQUFBLFNBQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUEwRSxTQUFBRCx1QkFBQUUsR0FBQSxXQUFBQSxHQUFBLElBQUFBLEdBQUEsQ0FBQUMsVUFBQSxHQUFBRCxHQUFBLEtBQUFFLE9BQUEsRUFBQUYsR0FBQTtBQUYxRTtBQUNBO0FBQzZFOztBQUU3RUcsUUFBUSxDQUFDLGNBQWMsRUFBRSxNQUFNO0VBRTlCQyxFQUFFLENBQUMsK0JBQStCLEVBQUUsWUFBWTtJQUM3Q0MsT0FBTyxDQUFDQyxHQUFHLENBQUMsOEJBQThCLENBQUM7SUFDM0MsTUFBTUMsaUJBQWMsQ0FBQ0MsWUFBWSxDQUFDLENBQUM7SUFDbkMsTUFBTUQsaUJBQWMsQ0FBQ0UsYUFBYSxDQUFDLGFBQWEsRUFBRSw4QkFBOEIsQ0FBQztJQUNqRixNQUFNQyxNQUFNLENBQUNDLElBQUksQ0FBQyxDQUFDO0lBQ25CLE1BQU1KLGlCQUFjLENBQUNLLFFBQVEsQ0FBQ0MsS0FBSyxDQUFDLENBQUM7SUFDckMsTUFBTU4saUJBQWMsQ0FBQ08sSUFBSSxDQUFDRCxLQUFLLENBQUMsQ0FBQztJQUNqQyxNQUFNTixpQkFBYyxDQUFDUSxNQUFNLENBQUNGLEtBQUssQ0FBQyxDQUFDO0lBQ25DLE1BQU1ILE1BQU0sQ0FBQ00sV0FBVyxDQUFDLENBQUM7SUFDMUI7SUFDQSxNQUFNQyxNQUFNLENBQUNWLGlCQUFjLENBQUNLLFFBQVEsQ0FBQyxDQUFDTSxHQUFHLENBQUNDLE9BQU8sQ0FBQyxDQUFDO0lBQ25ELE1BQU1aLGlCQUFjLENBQUNhLEdBQUcsQ0FBQ1AsS0FBSyxDQUFDLENBQUM7SUFDaEMsTUFBTU4saUJBQWMsQ0FBQ2MsUUFBUSxDQUFDUixLQUFLLENBQUMsQ0FBQztJQUNyQyxNQUFNSSxNQUFNLENBQUNWLGlCQUFjLENBQUNLLFFBQVEsQ0FBQyxDQUFDTyxPQUFPLENBQUMsQ0FBQztFQUVsRCxDQUFDLENBQUM7QUFDSCxDQUFDLENBQUMifQ==","map":{"version":3,"names":["_editNote","_interopRequireDefault","require","obj","__esModule","default","describe","it","console","log","EditNoteScreen","skipTutorial","saveAndverify","driver","back","getTitle","click","more","delete","acceptAlert","expect","not","toExist","nav","trashCan"],"sourceRoot":"C:\\Users\\rajee\\Appium\\webdriver-appium-v8\\test\\specs\\android\\","sources":["edit-note-screen.spec.js"],"sourcesContent":["//const AddNoteScreen = require(\"../../screenObjects/android/add-note.screen\");\r\n//const EditNoteScreen = require(\"../../screenObjects/android/edit-note.screen\");\r\nimport EditNoteScreen from '../../screenObjects/android/edit-note.screen';   //baabel\r\n\r\ndescribe('Delete Notes', () => {\r\n   \r\n it('delete note, verify trash can', async () => {\r\n    console.log(\"User in delete note function\")\r\n    await EditNoteScreen.skipTutorial();\r\n    await EditNoteScreen.saveAndverify(\"Fav TV Show\", \"Naruto\\nTom and Jerry\\nNoddy\");\r\n    await driver.back();\r\n    await EditNoteScreen.getTitle.click();\r\n    await EditNoteScreen.more.click();\r\n    await EditNoteScreen.delete.click();\r\n    await driver.acceptAlert();\r\n    //android.widget.Button[@text='OK']\r\n    await expect(EditNoteScreen.getTitle).not.toExist();\r\n    await EditNoteScreen.nav.click();\r\n    await EditNoteScreen.trashCan.click();\r\n    await expect(EditNoteScreen.getTitle).toExist();\r\n\r\n });\r\n});"],"mappings":";;AAEA,IAAAA,SAAA,GAAAC,sBAAA,CAAAC,OAAA;AAA0E,SAAAD,uBAAAE,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAF1E;AACA;AAC6E;;AAE7EG,QAAQ,CAAC,cAAc,EAAE,MAAM;EAE9BC,EAAE,CAAC,+BAA+B,EAAE,YAAY;IAC7CC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC3C,MAAMC,iBAAc,CAACC,YAAY,CAAC,CAAC;IACnC,MAAMD,iBAAc,CAACE,aAAa,CAAC,aAAa,EAAE,8BAA8B,CAAC;IACjF,MAAMC,MAAM,CAACC,IAAI,CAAC,CAAC;IACnB,MAAMJ,iBAAc,CAACK,QAAQ,CAACC,KAAK,CAAC,CAAC;IACrC,MAAMN,iBAAc,CAACO,IAAI,CAACD,KAAK,CAAC,CAAC;IACjC,MAAMN,iBAAc,CAACQ,MAAM,CAACF,KAAK,CAAC,CAAC;IACnC,MAAMH,MAAM,CAACM,WAAW,CAAC,CAAC;IAC1B;IACA,MAAMC,MAAM,CAACV,iBAAc,CAACK,QAAQ,CAAC,CAACM,GAAG,CAACC,OAAO,CAAC,CAAC;IACnD,MAAMZ,iBAAc,CAACa,GAAG,CAACP,KAAK,CAAC,CAAC;IAChC,MAAMN,iBAAc,CAACc,QAAQ,CAACR,KAAK,CAAC,CAAC;IACrC,MAAMI,MAAM,CAACV,iBAAc,CAACK,QAAQ,CAAC,CAACO,OAAO,CAAC,CAAC;EAElD,CAAC,CAAC;AACH,CAAC,CAAC"}},"mtime":1698988072236},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\\\\test\\\\screenObjects\\\\android\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\",\"filename\":\"C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\\\\test\\\\screenObjects\\\\android\\\\edit-note.screen.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-static-block\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.23.2:test":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nconst AddNoteScreen = require(\"../../screenObjects/android/add-note.screen\");\nclass EditNoteScreen {\n  get getTitle() {\n    return $('//android.widget.TextView[@text=\"Fav TV Show\"]');\n  }\n  get more() {\n    return $('//android.widget.ImageButton[@content-desc=\"More\"]');\n  }\n  get delete() {\n    return $('//android.widget.TextView[@text=\"Delete\"]');\n  }\n  get nav() {\n    return $('//android.widget.ImageButton[@resource-id=\"com.socialnmobile.dictapps.notepad.color.note:id/icon_nav\"]');\n  }\n  get trashCan() {\n    return $('//android.widget.TextView[@text=\"Trash Can\"]');\n  }\n  async skipTutorial() {\n    console.log('User in skip tutorial function');\n    await AddNoteScreen.skipBtn.click();\n    await expect(AddNoteScreen.textNote).toBeDisplayed();\n  }\n  async saveAndverify(title, body) {\n    console.log('User in saveVerify function');\n    await AddNoteScreen.textNote.click();\n    await AddNoteScreen.text.click();\n    await expect(AddNoteScreen.editing).toBeDisplayed();\n    //add note title\n    await AddNoteScreen.editTitle.addValue(title);\n    await AddNoteScreen.editnote.addValue(body);\n    await AddNoteScreen.saveNote();\n    await expect(AddNoteScreen.editButton).toBeDisplayed();\n    await expect(AddNoteScreen.viewNote).toHaveText(body);\n  }\n}\n\n//module.exports = new EditNoteScreen();\nvar _default = exports.default = new EditNoteScreen(); //babel\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJBZGROb3RlU2NyZWVuIiwicmVxdWlyZSIsIkVkaXROb3RlU2NyZWVuIiwiZ2V0VGl0bGUiLCIkIiwibW9yZSIsImRlbGV0ZSIsIm5hdiIsInRyYXNoQ2FuIiwic2tpcFR1dG9yaWFsIiwiY29uc29sZSIsImxvZyIsInNraXBCdG4iLCJjbGljayIsImV4cGVjdCIsInRleHROb3RlIiwidG9CZURpc3BsYXllZCIsInNhdmVBbmR2ZXJpZnkiLCJ0aXRsZSIsImJvZHkiLCJ0ZXh0IiwiZWRpdGluZyIsImVkaXRUaXRsZSIsImFkZFZhbHVlIiwiZWRpdG5vdGUiLCJzYXZlTm90ZSIsImVkaXRCdXR0b24iLCJ2aWV3Tm90ZSIsInRvSGF2ZVRleHQiLCJfZGVmYXVsdCIsImV4cG9ydHMiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHJhamVlXFxBcHBpdW1cXHdlYmRyaXZlci1hcHBpdW0tdjhcXHRlc3RcXHNjcmVlbk9iamVjdHNcXGFuZHJvaWRcXCIsInNvdXJjZXMiOlsiZWRpdC1ub3RlLnNjcmVlbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBBZGROb3RlU2NyZWVuID0gcmVxdWlyZShcIi4uLy4uL3NjcmVlbk9iamVjdHMvYW5kcm9pZC9hZGQtbm90ZS5zY3JlZW5cIik7XHJcbmNsYXNzIEVkaXROb3RlU2NyZWVue1xyXG5cclxuICAgIGdldCBnZXRUaXRsZSgpe1xyXG4gICAgICAgIHJldHVybiAkKCcvL2FuZHJvaWQud2lkZ2V0LlRleHRWaWV3W0B0ZXh0PVwiRmF2IFRWIFNob3dcIl0nKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgZ2V0IG1vcmUoKXtcclxuICAgICAgICByZXR1cm4gICQoJy8vYW5kcm9pZC53aWRnZXQuSW1hZ2VCdXR0b25bQGNvbnRlbnQtZGVzYz1cIk1vcmVcIl0nKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgZ2V0IGRlbGV0ZSgpe1xyXG4gICAgICAgIHJldHVybiAkKCcvL2FuZHJvaWQud2lkZ2V0LlRleHRWaWV3W0B0ZXh0PVwiRGVsZXRlXCJdJyk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIGdldCBuYXYoKXtcclxuICAgICAgICByZXR1cm4gJCgnLy9hbmRyb2lkLndpZGdldC5JbWFnZUJ1dHRvbltAcmVzb3VyY2UtaWQ9XCJjb20uc29jaWFsbm1vYmlsZS5kaWN0YXBwcy5ub3RlcGFkLmNvbG9yLm5vdGU6aWQvaWNvbl9uYXZcIl0nKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgZ2V0IHRyYXNoQ2FuKCl7XHJcbiAgICAgICAgcmV0dXJuICQoJy8vYW5kcm9pZC53aWRnZXQuVGV4dFZpZXdbQHRleHQ9XCJUcmFzaCBDYW5cIl0nKTtcclxuICAgIH0gICAgXHJcblxyXG4gICAgYXN5bmMgc2tpcFR1dG9yaWFsKCl7XHJcblxyXG4gICAgICAgIGNvbnNvbGUubG9nKCdVc2VyIGluIHNraXAgdHV0b3JpYWwgZnVuY3Rpb24nKVxyXG4gICAgICAgIGF3YWl0IEFkZE5vdGVTY3JlZW4uc2tpcEJ0bi5jbGljaygpO1xyXG4gICAgICAgIGF3YWl0IGV4cGVjdChBZGROb3RlU2NyZWVuLnRleHROb3RlKS50b0JlRGlzcGxheWVkKCk7XHJcbiAgICB9XHJcblxyXG4gICAgYXN5bmMgc2F2ZUFuZHZlcmlmeSh0aXRsZSwgYm9keSl7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ1VzZXIgaW4gc2F2ZVZlcmlmeSBmdW5jdGlvbicpXHJcbiAgICAgICAgYXdhaXQgQWRkTm90ZVNjcmVlbi50ZXh0Tm90ZS5jbGljaygpO1xyXG4gICAgICAgIGF3YWl0IEFkZE5vdGVTY3JlZW4udGV4dC5jbGljaygpO1xyXG4gICAgICAgIGF3YWl0IGV4cGVjdChBZGROb3RlU2NyZWVuLmVkaXRpbmcpLnRvQmVEaXNwbGF5ZWQoKTtcclxuICAgICAgICAvL2FkZCBub3RlIHRpdGxlXHJcbiAgICAgICAgYXdhaXQgQWRkTm90ZVNjcmVlbi5lZGl0VGl0bGUuYWRkVmFsdWUodGl0bGUpO1xyXG4gICAgICAgIGF3YWl0IEFkZE5vdGVTY3JlZW4uZWRpdG5vdGUuYWRkVmFsdWUoYm9keSk7XHJcbiAgICAgICAgYXdhaXQgQWRkTm90ZVNjcmVlbi5zYXZlTm90ZSgpO1xyXG4gICAgICAgIGF3YWl0IGV4cGVjdChBZGROb3RlU2NyZWVuLmVkaXRCdXR0b24pLnRvQmVEaXNwbGF5ZWQoKTtcclxuICAgICAgICBhd2FpdCBleHBlY3QoQWRkTm90ZVNjcmVlbi52aWV3Tm90ZSkudG9IYXZlVGV4dChib2R5KTtcclxuICAgIH1cclxuXHJcbn1cclxuXHJcbi8vbW9kdWxlLmV4cG9ydHMgPSBuZXcgRWRpdE5vdGVTY3JlZW4oKTtcclxuZXhwb3J0IGRlZmF1bHQgbmV3IEVkaXROb3RlU2NyZWVuKCk7IC8vYmFiZWwiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLE1BQU1BLGFBQWEsR0FBR0MsT0FBTyxDQUFDLDZDQUE2QyxDQUFDO0FBQzVFLE1BQU1DLGNBQWM7RUFFaEIsSUFBSUMsUUFBUUEsQ0FBQSxFQUFFO0lBQ1YsT0FBT0MsQ0FBQyxDQUFDLGdEQUFnRCxDQUFDO0VBQzlEO0VBRUEsSUFBSUMsSUFBSUEsQ0FBQSxFQUFFO0lBQ04sT0FBUUQsQ0FBQyxDQUFDLG9EQUFvRCxDQUFDO0VBQ25FO0VBRUEsSUFBSUUsTUFBTUEsQ0FBQSxFQUFFO0lBQ1IsT0FBT0YsQ0FBQyxDQUFDLDJDQUEyQyxDQUFDO0VBQ3pEO0VBRUEsSUFBSUcsR0FBR0EsQ0FBQSxFQUFFO0lBQ0wsT0FBT0gsQ0FBQyxDQUFDLHdHQUF3RyxDQUFDO0VBQ3RIO0VBRUEsSUFBSUksUUFBUUEsQ0FBQSxFQUFFO0lBQ1YsT0FBT0osQ0FBQyxDQUFDLDhDQUE4QyxDQUFDO0VBQzVEO0VBRUEsTUFBTUssWUFBWUEsQ0FBQSxFQUFFO0lBRWhCQyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxnQ0FBZ0MsQ0FBQztJQUM3QyxNQUFNWCxhQUFhLENBQUNZLE9BQU8sQ0FBQ0MsS0FBSyxDQUFDLENBQUM7SUFDbkMsTUFBTUMsTUFBTSxDQUFDZCxhQUFhLENBQUNlLFFBQVEsQ0FBQyxDQUFDQyxhQUFhLENBQUMsQ0FBQztFQUN4RDtFQUVBLE1BQU1DLGFBQWFBLENBQUNDLEtBQUssRUFBRUMsSUFBSSxFQUFDO0lBQzVCVCxPQUFPLENBQUNDLEdBQUcsQ0FBQyw2QkFBNkIsQ0FBQztJQUMxQyxNQUFNWCxhQUFhLENBQUNlLFFBQVEsQ0FBQ0YsS0FBSyxDQUFDLENBQUM7SUFDcEMsTUFBTWIsYUFBYSxDQUFDb0IsSUFBSSxDQUFDUCxLQUFLLENBQUMsQ0FBQztJQUNoQyxNQUFNQyxNQUFNLENBQUNkLGFBQWEsQ0FBQ3FCLE9BQU8sQ0FBQyxDQUFDTCxhQUFhLENBQUMsQ0FBQztJQUNuRDtJQUNBLE1BQU1oQixhQUFhLENBQUNzQixTQUFTLENBQUNDLFFBQVEsQ0FBQ0wsS0FBSyxDQUFDO0lBQzdDLE1BQU1sQixhQUFhLENBQUN3QixRQUFRLENBQUNELFFBQVEsQ0FBQ0osSUFBSSxDQUFDO0lBQzNDLE1BQU1uQixhQUFhLENBQUN5QixRQUFRLENBQUMsQ0FBQztJQUM5QixNQUFNWCxNQUFNLENBQUNkLGFBQWEsQ0FBQzBCLFVBQVUsQ0FBQyxDQUFDVixhQUFhLENBQUMsQ0FBQztJQUN0RCxNQUFNRixNQUFNLENBQUNkLGFBQWEsQ0FBQzJCLFFBQVEsQ0FBQyxDQUFDQyxVQUFVLENBQUNULElBQUksQ0FBQztFQUN6RDtBQUVKOztBQUVBO0FBQUEsSUFBQVUsUUFBQSxHQUFBQyxPQUFBLENBQUFDLE9BQUEsR0FDZSxJQUFJN0IsY0FBYyxDQUFDLENBQUMsRUFBRSJ9","map":{"version":3,"names":["AddNoteScreen","require","EditNoteScreen","getTitle","$","more","delete","nav","trashCan","skipTutorial","console","log","skipBtn","click","expect","textNote","toBeDisplayed","saveAndverify","title","body","text","editing","editTitle","addValue","editnote","saveNote","editButton","viewNote","toHaveText","_default","exports","default"],"sourceRoot":"C:\\Users\\rajee\\Appium\\webdriver-appium-v8\\test\\screenObjects\\android\\","sources":["edit-note.screen.js"],"sourcesContent":["const AddNoteScreen = require(\"../../screenObjects/android/add-note.screen\");\r\nclass EditNoteScreen{\r\n\r\n    get getTitle(){\r\n        return $('//android.widget.TextView[@text=\"Fav TV Show\"]');\r\n    }\r\n    \r\n    get more(){\r\n        return  $('//android.widget.ImageButton[@content-desc=\"More\"]');\r\n    }\r\n    \r\n    get delete(){\r\n        return $('//android.widget.TextView[@text=\"Delete\"]');\r\n    }\r\n    \r\n    get nav(){\r\n        return $('//android.widget.ImageButton[@resource-id=\"com.socialnmobile.dictapps.notepad.color.note:id/icon_nav\"]');\r\n    }\r\n    \r\n    get trashCan(){\r\n        return $('//android.widget.TextView[@text=\"Trash Can\"]');\r\n    }    \r\n\r\n    async skipTutorial(){\r\n\r\n        console.log('User in skip tutorial function')\r\n        await AddNoteScreen.skipBtn.click();\r\n        await expect(AddNoteScreen.textNote).toBeDisplayed();\r\n    }\r\n\r\n    async saveAndverify(title, body){\r\n        console.log('User in saveVerify function')\r\n        await AddNoteScreen.textNote.click();\r\n        await AddNoteScreen.text.click();\r\n        await expect(AddNoteScreen.editing).toBeDisplayed();\r\n        //add note title\r\n        await AddNoteScreen.editTitle.addValue(title);\r\n        await AddNoteScreen.editnote.addValue(body);\r\n        await AddNoteScreen.saveNote();\r\n        await expect(AddNoteScreen.editButton).toBeDisplayed();\r\n        await expect(AddNoteScreen.viewNote).toHaveText(body);\r\n    }\r\n\r\n}\r\n\r\n//module.exports = new EditNoteScreen();\r\nexport default new EditNoteScreen(); //babel"],"mappings":";;;;;;AAAA,MAAMA,aAAa,GAAGC,OAAO,CAAC,6CAA6C,CAAC;AAC5E,MAAMC,cAAc;EAEhB,IAAIC,QAAQA,CAAA,EAAE;IACV,OAAOC,CAAC,CAAC,gDAAgD,CAAC;EAC9D;EAEA,IAAIC,IAAIA,CAAA,EAAE;IACN,OAAQD,CAAC,CAAC,oDAAoD,CAAC;EACnE;EAEA,IAAIE,MAAMA,CAAA,EAAE;IACR,OAAOF,CAAC,CAAC,2CAA2C,CAAC;EACzD;EAEA,IAAIG,GAAGA,CAAA,EAAE;IACL,OAAOH,CAAC,CAAC,wGAAwG,CAAC;EACtH;EAEA,IAAII,QAAQA,CAAA,EAAE;IACV,OAAOJ,CAAC,CAAC,8CAA8C,CAAC;EAC5D;EAEA,MAAMK,YAAYA,CAAA,EAAE;IAEhBC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAC7C,MAAMX,aAAa,CAACY,OAAO,CAACC,KAAK,CAAC,CAAC;IACnC,MAAMC,MAAM,CAACd,aAAa,CAACe,QAAQ,CAAC,CAACC,aAAa,CAAC,CAAC;EACxD;EAEA,MAAMC,aAAaA,CAACC,KAAK,EAAEC,IAAI,EAAC;IAC5BT,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC1C,MAAMX,aAAa,CAACe,QAAQ,CAACF,KAAK,CAAC,CAAC;IACpC,MAAMb,aAAa,CAACoB,IAAI,CAACP,KAAK,CAAC,CAAC;IAChC,MAAMC,MAAM,CAACd,aAAa,CAACqB,OAAO,CAAC,CAACL,aAAa,CAAC,CAAC;IACnD;IACA,MAAMhB,aAAa,CAACsB,SAAS,CAACC,QAAQ,CAACL,KAAK,CAAC;IAC7C,MAAMlB,aAAa,CAACwB,QAAQ,CAACD,QAAQ,CAACJ,IAAI,CAAC;IAC3C,MAAMnB,aAAa,CAACyB,QAAQ,CAAC,CAAC;IAC9B,MAAMX,MAAM,CAACd,aAAa,CAAC0B,UAAU,CAAC,CAACV,aAAa,CAAC,CAAC;IACtD,MAAMF,MAAM,CAACd,aAAa,CAAC2B,QAAQ,CAAC,CAACC,UAAU,CAACT,IAAI,CAAC;EACzD;AAEJ;;AAEA;AAAA,IAAAU,QAAA,GAAAC,OAAA,CAAAC,OAAA,GACe,IAAI7B,cAAc,CAAC,CAAC,EAAE"}},"mtime":1698987132520},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\\\\test\\\\screenObjects\\\\android\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\",\"filename\":\"C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\\\\test\\\\screenObjects\\\\android\\\\add-note.screen.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-static-block\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.23.2:test":{"value":{"code":"\"use strict\";\n\nclass AddNoteScreen {\n  get skipBtn() {\n    return $('android.widget.Button');\n  }\n  get textNote() {\n    return $('//android.widget.TextView[@text=\\'Add note\\']');\n  }\n  get text() {\n    return $('//android.widget.TextView[@text=\\'Text\\']');\n  }\n  get editing() {\n    return $('//android.widget.TextView[@text=\\'Editing\\']');\n  }\n  get editTitle() {\n    return $('//android.widget.EditText[@resource-id=\\'com.socialnmobile.dictapps.notepad.color.note:id/edit_title\\']');\n  }\n  get editnote() {\n    return $('//android.widget.EditText[@resource-id=\\'com.socialnmobile.dictapps.notepad.color.note:id/edit_note\\']');\n  }\n  get editButton() {\n    return $('//android.widget.ImageButton[@resource-id=\\'com.socialnmobile.dictapps.notepad.color.note:id/edit_btn\\']');\n  }\n  get viewNote() {\n    return $('//android.widget.TextView[@resource-id=\\'com.socialnmobile.dictapps.notepad.color.note:id/view_note\\']');\n  }\n  get getTitle() {\n    return $('//android.widget.TextView[@text=\"Fav Animie List\"]');\n  }\n  get more() {\n    return $('//android.widget.ImageButton[@content-desc=\"More\"]');\n  }\n  get delete() {\n    return $('//android.widget.TextView[@text=\"Delete\"]');\n  }\n  get nav() {\n    return $('//android.widget.ImageButton[@resource-id=\"com.socialnmobile.dictapps.notepad.color.note:id/icon_nav\"]');\n  }\n  get trashCan() {\n    return $('//android.widget.TextView[@text=\"Trash Can\"]');\n  }\n  async saveNote() {\n    await driver.back();\n    await driver.back();\n  }\n}\n\n//export default new AddNoteScreen();\nmodule.exports = new AddNoteScreen();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJBZGROb3RlU2NyZWVuIiwic2tpcEJ0biIsIiQiLCJ0ZXh0Tm90ZSIsInRleHQiLCJlZGl0aW5nIiwiZWRpdFRpdGxlIiwiZWRpdG5vdGUiLCJlZGl0QnV0dG9uIiwidmlld05vdGUiLCJnZXRUaXRsZSIsIm1vcmUiLCJkZWxldGUiLCJuYXYiLCJ0cmFzaENhbiIsInNhdmVOb3RlIiwiZHJpdmVyIiwiYmFjayIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xccmFqZWVcXEFwcGl1bVxcd2ViZHJpdmVyLWFwcGl1bS12OFxcdGVzdFxcc2NyZWVuT2JqZWN0c1xcYW5kcm9pZFxcIiwic291cmNlcyI6WyJhZGQtbm90ZS5zY3JlZW4uanMiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgQWRkTm90ZVNjcmVlbntcclxuZ2V0IHNraXBCdG4oKXtcclxuICAgIHJldHVybiAkKCdhbmRyb2lkLndpZGdldC5CdXR0b24nKTtcclxufVxyXG5cclxuZ2V0IHRleHROb3RlKCl7XHJcbiAgICByZXR1cm4gJCgnLy9hbmRyb2lkLndpZGdldC5UZXh0Vmlld1tAdGV4dD1cXCdBZGQgbm90ZVxcJ10nKTtcclxufVxyXG5cclxuZ2V0IHRleHQoKXtcclxuICAgIHJldHVybiAkKCcvL2FuZHJvaWQud2lkZ2V0LlRleHRWaWV3W0B0ZXh0PVxcJ1RleHRcXCddJyk7XHJcbn1cclxuXHJcbmdldCBlZGl0aW5nKCl7XHJcbiAgICByZXR1cm4gJCgnLy9hbmRyb2lkLndpZGdldC5UZXh0Vmlld1tAdGV4dD1cXCdFZGl0aW5nXFwnXScpO1xyXG59XHJcblxyXG5nZXQgZWRpdFRpdGxlKCl7XHJcbiAgICByZXR1cm4gJCgnLy9hbmRyb2lkLndpZGdldC5FZGl0VGV4dFtAcmVzb3VyY2UtaWQ9XFwnY29tLnNvY2lhbG5tb2JpbGUuZGljdGFwcHMubm90ZXBhZC5jb2xvci5ub3RlOmlkL2VkaXRfdGl0bGVcXCddJyk7XHJcbn1cclxuXHJcbmdldCBlZGl0bm90ZSgpe1xyXG4gICAgcmV0dXJuICQoJy8vYW5kcm9pZC53aWRnZXQuRWRpdFRleHRbQHJlc291cmNlLWlkPVxcJ2NvbS5zb2NpYWxubW9iaWxlLmRpY3RhcHBzLm5vdGVwYWQuY29sb3Iubm90ZTppZC9lZGl0X25vdGVcXCddJyk7XHJcbn1cclxuXHJcbmdldCBlZGl0QnV0dG9uKCl7XHJcbiAgICByZXR1cm4gJCgnLy9hbmRyb2lkLndpZGdldC5JbWFnZUJ1dHRvbltAcmVzb3VyY2UtaWQ9XFwnY29tLnNvY2lhbG5tb2JpbGUuZGljdGFwcHMubm90ZXBhZC5jb2xvci5ub3RlOmlkL2VkaXRfYnRuXFwnXScpO1xyXG59XHJcblxyXG5nZXQgdmlld05vdGUoKXtcclxuICAgIHJldHVybiAkKCcvL2FuZHJvaWQud2lkZ2V0LlRleHRWaWV3W0ByZXNvdXJjZS1pZD1cXCdjb20uc29jaWFsbm1vYmlsZS5kaWN0YXBwcy5ub3RlcGFkLmNvbG9yLm5vdGU6aWQvdmlld19ub3RlXFwnXScpO1xyXG59XHJcblxyXG5nZXQgZ2V0VGl0bGUoKXtcclxuICAgIHJldHVybiAkKCcvL2FuZHJvaWQud2lkZ2V0LlRleHRWaWV3W0B0ZXh0PVwiRmF2IEFuaW1pZSBMaXN0XCJdJyk7XHJcbn1cclxuXHJcbmdldCBtb3JlKCl7XHJcbiAgICByZXR1cm4gICQoJy8vYW5kcm9pZC53aWRnZXQuSW1hZ2VCdXR0b25bQGNvbnRlbnQtZGVzYz1cIk1vcmVcIl0nKTtcclxufVxyXG5cclxuZ2V0IGRlbGV0ZSgpe1xyXG4gICAgcmV0dXJuICQoJy8vYW5kcm9pZC53aWRnZXQuVGV4dFZpZXdbQHRleHQ9XCJEZWxldGVcIl0nKTtcclxufVxyXG5cclxuZ2V0IG5hdigpe1xyXG4gICAgcmV0dXJuICQoJy8vYW5kcm9pZC53aWRnZXQuSW1hZ2VCdXR0b25bQHJlc291cmNlLWlkPVwiY29tLnNvY2lhbG5tb2JpbGUuZGljdGFwcHMubm90ZXBhZC5jb2xvci5ub3RlOmlkL2ljb25fbmF2XCJdJyk7XHJcbn1cclxuXHJcbmdldCB0cmFzaENhbigpe1xyXG4gICAgcmV0dXJuICQoJy8vYW5kcm9pZC53aWRnZXQuVGV4dFZpZXdbQHRleHQ9XCJUcmFzaCBDYW5cIl0nKTtcclxufVxyXG5cclxuYXN5bmMgc2F2ZU5vdGUoKXtcclxuICAgIGF3YWl0IGRyaXZlci5iYWNrKCk7XHJcbiAgICAgICAgYXdhaXQgZHJpdmVyLmJhY2soKTtcclxufVxyXG5cclxufVxyXG5cclxuLy9leHBvcnQgZGVmYXVsdCBuZXcgQWRkTm90ZVNjcmVlbigpO1xyXG5tb2R1bGUuZXhwb3J0cyA9IG5ldyBBZGROb3RlU2NyZWVuKCk7Il0sIm1hcHBpbmdzIjoiOztBQUFBLE1BQU1BLGFBQWE7RUFDbkIsSUFBSUMsT0FBT0EsQ0FBQSxFQUFFO0lBQ1QsT0FBT0MsQ0FBQyxDQUFDLHVCQUF1QixDQUFDO0VBQ3JDO0VBRUEsSUFBSUMsUUFBUUEsQ0FBQSxFQUFFO0lBQ1YsT0FBT0QsQ0FBQyxDQUFDLCtDQUErQyxDQUFDO0VBQzdEO0VBRUEsSUFBSUUsSUFBSUEsQ0FBQSxFQUFFO0lBQ04sT0FBT0YsQ0FBQyxDQUFDLDJDQUEyQyxDQUFDO0VBQ3pEO0VBRUEsSUFBSUcsT0FBT0EsQ0FBQSxFQUFFO0lBQ1QsT0FBT0gsQ0FBQyxDQUFDLDhDQUE4QyxDQUFDO0VBQzVEO0VBRUEsSUFBSUksU0FBU0EsQ0FBQSxFQUFFO0lBQ1gsT0FBT0osQ0FBQyxDQUFDLHlHQUF5RyxDQUFDO0VBQ3ZIO0VBRUEsSUFBSUssUUFBUUEsQ0FBQSxFQUFFO0lBQ1YsT0FBT0wsQ0FBQyxDQUFDLHdHQUF3RyxDQUFDO0VBQ3RIO0VBRUEsSUFBSU0sVUFBVUEsQ0FBQSxFQUFFO0lBQ1osT0FBT04sQ0FBQyxDQUFDLDBHQUEwRyxDQUFDO0VBQ3hIO0VBRUEsSUFBSU8sUUFBUUEsQ0FBQSxFQUFFO0lBQ1YsT0FBT1AsQ0FBQyxDQUFDLHdHQUF3RyxDQUFDO0VBQ3RIO0VBRUEsSUFBSVEsUUFBUUEsQ0FBQSxFQUFFO0lBQ1YsT0FBT1IsQ0FBQyxDQUFDLG9EQUFvRCxDQUFDO0VBQ2xFO0VBRUEsSUFBSVMsSUFBSUEsQ0FBQSxFQUFFO0lBQ04sT0FBUVQsQ0FBQyxDQUFDLG9EQUFvRCxDQUFDO0VBQ25FO0VBRUEsSUFBSVUsTUFBTUEsQ0FBQSxFQUFFO0lBQ1IsT0FBT1YsQ0FBQyxDQUFDLDJDQUEyQyxDQUFDO0VBQ3pEO0VBRUEsSUFBSVcsR0FBR0EsQ0FBQSxFQUFFO0lBQ0wsT0FBT1gsQ0FBQyxDQUFDLHdHQUF3RyxDQUFDO0VBQ3RIO0VBRUEsSUFBSVksUUFBUUEsQ0FBQSxFQUFFO0lBQ1YsT0FBT1osQ0FBQyxDQUFDLDhDQUE4QyxDQUFDO0VBQzVEO0VBRUEsTUFBTWEsUUFBUUEsQ0FBQSxFQUFFO0lBQ1osTUFBTUMsTUFBTSxDQUFDQyxJQUFJLENBQUMsQ0FBQztJQUNmLE1BQU1ELE1BQU0sQ0FBQ0MsSUFBSSxDQUFDLENBQUM7RUFDM0I7QUFFQTs7QUFFQTtBQUNBQyxNQUFNLENBQUNDLE9BQU8sR0FBRyxJQUFJbkIsYUFBYSxDQUFDLENBQUMifQ==","map":{"version":3,"names":["AddNoteScreen","skipBtn","$","textNote","text","editing","editTitle","editnote","editButton","viewNote","getTitle","more","delete","nav","trashCan","saveNote","driver","back","module","exports"],"sourceRoot":"C:\\Users\\rajee\\Appium\\webdriver-appium-v8\\test\\screenObjects\\android\\","sources":["add-note.screen.js"],"sourcesContent":["class AddNoteScreen{\r\nget skipBtn(){\r\n    return $('android.widget.Button');\r\n}\r\n\r\nget textNote(){\r\n    return $('//android.widget.TextView[@text=\\'Add note\\']');\r\n}\r\n\r\nget text(){\r\n    return $('//android.widget.TextView[@text=\\'Text\\']');\r\n}\r\n\r\nget editing(){\r\n    return $('//android.widget.TextView[@text=\\'Editing\\']');\r\n}\r\n\r\nget editTitle(){\r\n    return $('//android.widget.EditText[@resource-id=\\'com.socialnmobile.dictapps.notepad.color.note:id/edit_title\\']');\r\n}\r\n\r\nget editnote(){\r\n    return $('//android.widget.EditText[@resource-id=\\'com.socialnmobile.dictapps.notepad.color.note:id/edit_note\\']');\r\n}\r\n\r\nget editButton(){\r\n    return $('//android.widget.ImageButton[@resource-id=\\'com.socialnmobile.dictapps.notepad.color.note:id/edit_btn\\']');\r\n}\r\n\r\nget viewNote(){\r\n    return $('//android.widget.TextView[@resource-id=\\'com.socialnmobile.dictapps.notepad.color.note:id/view_note\\']');\r\n}\r\n\r\nget getTitle(){\r\n    return $('//android.widget.TextView[@text=\"Fav Animie List\"]');\r\n}\r\n\r\nget more(){\r\n    return  $('//android.widget.ImageButton[@content-desc=\"More\"]');\r\n}\r\n\r\nget delete(){\r\n    return $('//android.widget.TextView[@text=\"Delete\"]');\r\n}\r\n\r\nget nav(){\r\n    return $('//android.widget.ImageButton[@resource-id=\"com.socialnmobile.dictapps.notepad.color.note:id/icon_nav\"]');\r\n}\r\n\r\nget trashCan(){\r\n    return $('//android.widget.TextView[@text=\"Trash Can\"]');\r\n}\r\n\r\nasync saveNote(){\r\n    await driver.back();\r\n        await driver.back();\r\n}\r\n\r\n}\r\n\r\n//export default new AddNoteScreen();\r\nmodule.exports = new AddNoteScreen();"],"mappings":";;AAAA,MAAMA,aAAa;EACnB,IAAIC,OAAOA,CAAA,EAAE;IACT,OAAOC,CAAC,CAAC,uBAAuB,CAAC;EACrC;EAEA,IAAIC,QAAQA,CAAA,EAAE;IACV,OAAOD,CAAC,CAAC,+CAA+C,CAAC;EAC7D;EAEA,IAAIE,IAAIA,CAAA,EAAE;IACN,OAAOF,CAAC,CAAC,2CAA2C,CAAC;EACzD;EAEA,IAAIG,OAAOA,CAAA,EAAE;IACT,OAAOH,CAAC,CAAC,8CAA8C,CAAC;EAC5D;EAEA,IAAII,SAASA,CAAA,EAAE;IACX,OAAOJ,CAAC,CAAC,yGAAyG,CAAC;EACvH;EAEA,IAAIK,QAAQA,CAAA,EAAE;IACV,OAAOL,CAAC,CAAC,wGAAwG,CAAC;EACtH;EAEA,IAAIM,UAAUA,CAAA,EAAE;IACZ,OAAON,CAAC,CAAC,0GAA0G,CAAC;EACxH;EAEA,IAAIO,QAAQA,CAAA,EAAE;IACV,OAAOP,CAAC,CAAC,wGAAwG,CAAC;EACtH;EAEA,IAAIQ,QAAQA,CAAA,EAAE;IACV,OAAOR,CAAC,CAAC,oDAAoD,CAAC;EAClE;EAEA,IAAIS,IAAIA,CAAA,EAAE;IACN,OAAQT,CAAC,CAAC,oDAAoD,CAAC;EACnE;EAEA,IAAIU,MAAMA,CAAA,EAAE;IACR,OAAOV,CAAC,CAAC,2CAA2C,CAAC;EACzD;EAEA,IAAIW,GAAGA,CAAA,EAAE;IACL,OAAOX,CAAC,CAAC,wGAAwG,CAAC;EACtH;EAEA,IAAIY,QAAQA,CAAA,EAAE;IACV,OAAOZ,CAAC,CAAC,8CAA8C,CAAC;EAC5D;EAEA,MAAMa,QAAQA,CAAA,EAAE;IACZ,MAAMC,MAAM,CAACC,IAAI,CAAC,CAAC;IACf,MAAMD,MAAM,CAACC,IAAI,CAAC,CAAC;EAC3B;AAEA;;AAEA;AACAC,MAAM,CAACC,OAAO,GAAG,IAAInB,aAAa,CAAC,CAAC"}},"mtime":1698986031434},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\\\\test\\\\specs\\\\android\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\",\"filename\":\"C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\\\\test\\\\specs\\\\android\\\\edit-note-screen.spec.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.23.2:test":{"value":{"code":"\"use strict\";\n\nvar _editNote = _interopRequireDefault(require(\"../../screenObjects/android/edit-note.screen\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n//const AddNoteScreen = require(\"../../screenObjects/android/add-note.screen\");\n//const EditNoteScreen = require(\"../../screenObjects/android/edit-note.screen\");\n//baabel\n\ndescribe('Delete Notes', () => {\n  it('delete note, verify trash can', async () => {\n    console.log(\"User in delete note function\");\n    await _editNote.default.skipTutorial();\n    await _editNote.default.saveAndverify(\"Fav TV Show\", \"Naruto\\nTom and Jerry\\nNoddy\");\n    await driver.back();\n    await _editNote.default.getTitle.click();\n    await _editNote.default.more.click();\n    await _editNote.default.delete.click();\n    await driver.acceptAlert();\n    //android.widget.Button[@text='OK']\n    await expect(_editNote.default.getTitle).not.toExist();\n    await _editNote.default.nav.click();\n    await _editNote.default.trashCan.click();\n    await expect(_editNote.default.getTitle).toExist();\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZWRpdE5vdGUiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiZGVzY3JpYmUiLCJpdCIsImNvbnNvbGUiLCJsb2ciLCJFZGl0Tm90ZVNjcmVlbiIsInNraXBUdXRvcmlhbCIsInNhdmVBbmR2ZXJpZnkiLCJkcml2ZXIiLCJiYWNrIiwiZ2V0VGl0bGUiLCJjbGljayIsIm1vcmUiLCJkZWxldGUiLCJhY2NlcHRBbGVydCIsImV4cGVjdCIsIm5vdCIsInRvRXhpc3QiLCJuYXYiLCJ0cmFzaENhbiJdLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxyYWplZVxcQXBwaXVtXFx3ZWJkcml2ZXItYXBwaXVtLXY4XFx0ZXN0XFxzcGVjc1xcYW5kcm9pZFxcIiwic291cmNlcyI6WyJlZGl0LW5vdGUtc2NyZWVuLnNwZWMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy9jb25zdCBBZGROb3RlU2NyZWVuID0gcmVxdWlyZShcIi4uLy4uL3NjcmVlbk9iamVjdHMvYW5kcm9pZC9hZGQtbm90ZS5zY3JlZW5cIik7XHJcbi8vY29uc3QgRWRpdE5vdGVTY3JlZW4gPSByZXF1aXJlKFwiLi4vLi4vc2NyZWVuT2JqZWN0cy9hbmRyb2lkL2VkaXQtbm90ZS5zY3JlZW5cIik7XHJcbmltcG9ydCBFZGl0Tm90ZVNjcmVlbiBmcm9tICcuLi8uLi9zY3JlZW5PYmplY3RzL2FuZHJvaWQvZWRpdC1ub3RlLnNjcmVlbic7ICAgLy9iYWFiZWxcclxuXHJcbmRlc2NyaWJlKCdEZWxldGUgTm90ZXMnLCAoKSA9PiB7XHJcbiAgIFxyXG4gaXQoJ2RlbGV0ZSBub3RlLCB2ZXJpZnkgdHJhc2ggY2FuJywgYXN5bmMgKCkgPT4ge1xyXG4gICAgY29uc29sZS5sb2coXCJVc2VyIGluIGRlbGV0ZSBub3RlIGZ1bmN0aW9uXCIpXHJcbiAgICBhd2FpdCBFZGl0Tm90ZVNjcmVlbi5za2lwVHV0b3JpYWwoKTtcclxuICAgIGF3YWl0IEVkaXROb3RlU2NyZWVuLnNhdmVBbmR2ZXJpZnkoXCJGYXYgVFYgU2hvd1wiLCBcIk5hcnV0b1xcblRvbSBhbmQgSmVycnlcXG5Ob2RkeVwiKTtcclxuICAgIGF3YWl0IGRyaXZlci5iYWNrKCk7XHJcbiAgICBhd2FpdCBFZGl0Tm90ZVNjcmVlbi5nZXRUaXRsZS5jbGljaygpO1xyXG4gICAgYXdhaXQgRWRpdE5vdGVTY3JlZW4ubW9yZS5jbGljaygpO1xyXG4gICAgYXdhaXQgRWRpdE5vdGVTY3JlZW4uZGVsZXRlLmNsaWNrKCk7XHJcbiAgICBhd2FpdCBkcml2ZXIuYWNjZXB0QWxlcnQoKTtcclxuICAgIC8vYW5kcm9pZC53aWRnZXQuQnV0dG9uW0B0ZXh0PSdPSyddXHJcbiAgICBhd2FpdCBleHBlY3QoRWRpdE5vdGVTY3JlZW4uZ2V0VGl0bGUpLm5vdC50b0V4aXN0KCk7XHJcbiAgICBhd2FpdCBFZGl0Tm90ZVNjcmVlbi5uYXYuY2xpY2soKTtcclxuICAgIGF3YWl0IEVkaXROb3RlU2NyZWVuLnRyYXNoQ2FuLmNsaWNrKCk7XHJcbiAgICBhd2FpdCBleHBlY3QoRWRpdE5vdGVTY3JlZW4uZ2V0VGl0bGUpLnRvRXhpc3QoKTtcclxuXHJcbiB9KTtcclxufSk7Il0sIm1hcHBpbmdzIjoiOztBQUVBLElBQUFBLFNBQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUEwRSxTQUFBRCx1QkFBQUUsR0FBQSxXQUFBQSxHQUFBLElBQUFBLEdBQUEsQ0FBQUMsVUFBQSxHQUFBRCxHQUFBLEtBQUFFLE9BQUEsRUFBQUYsR0FBQTtBQUYxRTtBQUNBO0FBQzZFOztBQUU3RUcsUUFBUSxDQUFDLGNBQWMsRUFBRSxNQUFNO0VBRTlCQyxFQUFFLENBQUMsK0JBQStCLEVBQUUsWUFBWTtJQUM3Q0MsT0FBTyxDQUFDQyxHQUFHLENBQUMsOEJBQThCLENBQUM7SUFDM0MsTUFBTUMsaUJBQWMsQ0FBQ0MsWUFBWSxDQUFDLENBQUM7SUFDbkMsTUFBTUQsaUJBQWMsQ0FBQ0UsYUFBYSxDQUFDLGFBQWEsRUFBRSw4QkFBOEIsQ0FBQztJQUNqRixNQUFNQyxNQUFNLENBQUNDLElBQUksQ0FBQyxDQUFDO0lBQ25CLE1BQU1KLGlCQUFjLENBQUNLLFFBQVEsQ0FBQ0MsS0FBSyxDQUFDLENBQUM7SUFDckMsTUFBTU4saUJBQWMsQ0FBQ08sSUFBSSxDQUFDRCxLQUFLLENBQUMsQ0FBQztJQUNqQyxNQUFNTixpQkFBYyxDQUFDUSxNQUFNLENBQUNGLEtBQUssQ0FBQyxDQUFDO0lBQ25DLE1BQU1ILE1BQU0sQ0FBQ00sV0FBVyxDQUFDLENBQUM7SUFDMUI7SUFDQSxNQUFNQyxNQUFNLENBQUNWLGlCQUFjLENBQUNLLFFBQVEsQ0FBQyxDQUFDTSxHQUFHLENBQUNDLE9BQU8sQ0FBQyxDQUFDO0lBQ25ELE1BQU1aLGlCQUFjLENBQUNhLEdBQUcsQ0FBQ1AsS0FBSyxDQUFDLENBQUM7SUFDaEMsTUFBTU4saUJBQWMsQ0FBQ2MsUUFBUSxDQUFDUixLQUFLLENBQUMsQ0FBQztJQUNyQyxNQUFNSSxNQUFNLENBQUNWLGlCQUFjLENBQUNLLFFBQVEsQ0FBQyxDQUFDTyxPQUFPLENBQUMsQ0FBQztFQUVsRCxDQUFDLENBQUM7QUFDSCxDQUFDLENBQUMifQ==","map":{"version":3,"names":["_editNote","_interopRequireDefault","require","obj","__esModule","default","describe","it","console","log","EditNoteScreen","skipTutorial","saveAndverify","driver","back","getTitle","click","more","delete","acceptAlert","expect","not","toExist","nav","trashCan"],"sourceRoot":"C:\\Users\\rajee\\Appium\\webdriver-appium-v8\\test\\specs\\android\\","sources":["edit-note-screen.spec.js"],"sourcesContent":["//const AddNoteScreen = require(\"../../screenObjects/android/add-note.screen\");\r\n//const EditNoteScreen = require(\"../../screenObjects/android/edit-note.screen\");\r\nimport EditNoteScreen from '../../screenObjects/android/edit-note.screen';   //baabel\r\n\r\ndescribe('Delete Notes', () => {\r\n   \r\n it('delete note, verify trash can', async () => {\r\n    console.log(\"User in delete note function\")\r\n    await EditNoteScreen.skipTutorial();\r\n    await EditNoteScreen.saveAndverify(\"Fav TV Show\", \"Naruto\\nTom and Jerry\\nNoddy\");\r\n    await driver.back();\r\n    await EditNoteScreen.getTitle.click();\r\n    await EditNoteScreen.more.click();\r\n    await EditNoteScreen.delete.click();\r\n    await driver.acceptAlert();\r\n    //android.widget.Button[@text='OK']\r\n    await expect(EditNoteScreen.getTitle).not.toExist();\r\n    await EditNoteScreen.nav.click();\r\n    await EditNoteScreen.trashCan.click();\r\n    await expect(EditNoteScreen.getTitle).toExist();\r\n\r\n });\r\n});"],"mappings":";;AAEA,IAAAA,SAAA,GAAAC,sBAAA,CAAAC,OAAA;AAA0E,SAAAD,uBAAAE,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAF1E;AACA;AAC6E;;AAE7EG,QAAQ,CAAC,cAAc,EAAE,MAAM;EAE9BC,EAAE,CAAC,+BAA+B,EAAE,YAAY;IAC7CC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC3C,MAAMC,iBAAc,CAACC,YAAY,CAAC,CAAC;IACnC,MAAMD,iBAAc,CAACE,aAAa,CAAC,aAAa,EAAE,8BAA8B,CAAC;IACjF,MAAMC,MAAM,CAACC,IAAI,CAAC,CAAC;IACnB,MAAMJ,iBAAc,CAACK,QAAQ,CAACC,KAAK,CAAC,CAAC;IACrC,MAAMN,iBAAc,CAACO,IAAI,CAACD,KAAK,CAAC,CAAC;IACjC,MAAMN,iBAAc,CAACQ,MAAM,CAACF,KAAK,CAAC,CAAC;IACnC,MAAMH,MAAM,CAACM,WAAW,CAAC,CAAC;IAC1B;IACA,MAAMC,MAAM,CAACV,iBAAc,CAACK,QAAQ,CAAC,CAACM,GAAG,CAACC,OAAO,CAAC,CAAC;IACnD,MAAMZ,iBAAc,CAACa,GAAG,CAACP,KAAK,CAAC,CAAC;IAChC,MAAMN,iBAAc,CAACc,QAAQ,CAACR,KAAK,CAAC,CAAC;IACrC,MAAMI,MAAM,CAACV,iBAAc,CAACK,QAAQ,CAAC,CAACO,OAAO,CAAC,CAAC;EAElD,CAAC,CAAC;AACH,CAAC,CAAC"}},"mtime":1698988072236},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\\\\config\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\",\"filename\":\"C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\\\\config\\\\wdio.android.conf.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.23.2:test":{"value":{"code":"\"use strict\";\n\nconst {\n  config\n} = require('./wdio.shared.conf.js');\nconfig.port = 4723;\nconfig.specs = [\n//'../test/specs/android/edit-note-screen.spec.js'\n'../test/specs/hooks.spec.js'];\nconfig.capabilities = [{\n  'appium:platformName': 'Android',\n  'appium:platformVersion': '11.0',\n  'appium:deviceName': 'Pixel 3',\n  'appium:automationName': 'UIAutomator2',\n  //'appium:app' : path.join(process.cwd(), '.\\android\\ApiDemos-debug.apk')\n  'appium:app': 'C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\\\\app\\\\android\\\\ColorNote+Notepad.apk',\n  'appium:autoGrantPermissions': true\n}];\nexports.config = config;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb25maWciLCJyZXF1aXJlIiwicG9ydCIsInNwZWNzIiwiY2FwYWJpbGl0aWVzIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxyYWplZVxcQXBwaXVtXFx3ZWJkcml2ZXItYXBwaXVtLXY4XFxjb25maWdcXCIsInNvdXJjZXMiOlsid2Rpby5hbmRyb2lkLmNvbmYuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBjb25maWcgfSA9IHJlcXVpcmUoJy4vd2Rpby5zaGFyZWQuY29uZi5qcycpO1xyXG5jb25maWcucG9ydCA9IDQ3MjM7XHJcbmNvbmZpZy5zcGVjcyA9IFtcclxuIC8vJy4uL3Rlc3Qvc3BlY3MvYW5kcm9pZC9lZGl0LW5vdGUtc2NyZWVuLnNwZWMuanMnXHJcbiAnLi4vdGVzdC9zcGVjcy9ob29rcy5zcGVjLmpzJ1xyXG5dO1xyXG5cclxuY29uZmlnLmNhcGFiaWxpdGllcyA9IFtcclxuICAgIHtcclxuICAgICdhcHBpdW06cGxhdGZvcm1OYW1lJzogJ0FuZHJvaWQnLFxyXG4gICAgJ2FwcGl1bTpwbGF0Zm9ybVZlcnNpb24nOiAnMTEuMCcsXHJcbiAgICAnYXBwaXVtOmRldmljZU5hbWUnOiAnUGl4ZWwgMycsXHJcbiAgICAnYXBwaXVtOmF1dG9tYXRpb25OYW1lJzogJ1VJQXV0b21hdG9yMicsXHJcbiAgICAvLydhcHBpdW06YXBwJyA6IHBhdGguam9pbihwcm9jZXNzLmN3ZCgpLCAnLlxcYW5kcm9pZFxcQXBpRGVtb3MtZGVidWcuYXBrJylcclxuICAgICdhcHBpdW06YXBwJzogJ0M6XFxcXFVzZXJzXFxcXHJhamVlXFxcXEFwcGl1bVxcXFx3ZWJkcml2ZXItYXBwaXVtLXY4XFxcXGFwcFxcXFxhbmRyb2lkXFxcXENvbG9yTm90ZStOb3RlcGFkLmFwaycsXHJcbiAgICAnYXBwaXVtOmF1dG9HcmFudFBlcm1pc3Npb25zJyA6IHRydWVcclxufV07XHJcblxyXG5leHBvcnRzLmNvbmZpZyA9IGNvbmZpZzsiXSwibWFwcGluZ3MiOiI7O0FBQUEsTUFBTTtFQUFFQTtBQUFPLENBQUMsR0FBR0MsT0FBTyxDQUFDLHVCQUF1QixDQUFDO0FBQ25ERCxNQUFNLENBQUNFLElBQUksR0FBRyxJQUFJO0FBQ2xCRixNQUFNLENBQUNHLEtBQUssR0FBRztBQUNkO0FBQ0EsNkJBQTZCLENBQzdCO0FBRURILE1BQU0sQ0FBQ0ksWUFBWSxHQUFHLENBQ2xCO0VBQ0EscUJBQXFCLEVBQUUsU0FBUztFQUNoQyx3QkFBd0IsRUFBRSxNQUFNO0VBQ2hDLG1CQUFtQixFQUFFLFNBQVM7RUFDOUIsdUJBQXVCLEVBQUUsY0FBYztFQUN2QztFQUNBLFlBQVksRUFBRSxvRkFBb0Y7RUFDbEcsNkJBQTZCLEVBQUc7QUFDcEMsQ0FBQyxDQUFDO0FBRUZDLE9BQU8sQ0FBQ0wsTUFBTSxHQUFHQSxNQUFNIn0=","map":{"version":3,"names":["config","require","port","specs","capabilities","exports"],"sourceRoot":"C:\\Users\\rajee\\Appium\\webdriver-appium-v8\\config\\","sources":["wdio.android.conf.js"],"sourcesContent":["const { config } = require('./wdio.shared.conf.js');\r\nconfig.port = 4723;\r\nconfig.specs = [\r\n //'../test/specs/android/edit-note-screen.spec.js'\r\n '../test/specs/hooks.spec.js'\r\n];\r\n\r\nconfig.capabilities = [\r\n    {\r\n    'appium:platformName': 'Android',\r\n    'appium:platformVersion': '11.0',\r\n    'appium:deviceName': 'Pixel 3',\r\n    'appium:automationName': 'UIAutomator2',\r\n    //'appium:app' : path.join(process.cwd(), '.\\android\\ApiDemos-debug.apk')\r\n    'appium:app': 'C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\\\\app\\\\android\\\\ColorNote+Notepad.apk',\r\n    'appium:autoGrantPermissions' : true\r\n}];\r\n\r\nexports.config = config;"],"mappings":";;AAAA,MAAM;EAAEA;AAAO,CAAC,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AACnDD,MAAM,CAACE,IAAI,GAAG,IAAI;AAClBF,MAAM,CAACG,KAAK,GAAG;AACd;AACA,6BAA6B,CAC7B;AAEDH,MAAM,CAACI,YAAY,GAAG,CAClB;EACA,qBAAqB,EAAE,SAAS;EAChC,wBAAwB,EAAE,MAAM;EAChC,mBAAmB,EAAE,SAAS;EAC9B,uBAAuB,EAAE,cAAc;EACvC;EACA,YAAY,EAAE,oFAAoF;EAClG,6BAA6B,EAAG;AACpC,CAAC,CAAC;AAEFC,OAAO,CAACL,MAAM,GAAGA,MAAM"}},"mtime":1698990368589},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\\\\config\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\",\"filename\":\"C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\\\\config\\\\wdio.shared.conf.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-static-block\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.23.2:test":{"value":{"code":"\"use strict\";\n\n//const path = require('path');\n\nexports.config = {\n  //\n  // ====================\n  // Runner Configuration\n  // ====================\n  // WebdriverIO supports running e2e tests as well as unit and component tests.\n  runner: 'local',\n  //\n  // ==================\n  // Specify Test Files\n  // ==================\n  // Define which test specs should run. The pattern is relative to the directory\n  // of the configuration file being run.\n  //\n  // The specs are defined as an array of spec files (optionally using wildcards\n  // that will be expanded). The test for each spec file will be run in a separate\n  // worker process. In order to have a group of spec files run in the same worker\n  // process simply enclose them in an array within the specs array.\n  //\n  // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n  // then the current working directory is where your `package.json` resides, so `wdio`\n  // will be called from there.\n  //\n\n  // Patterns to exclude.\n  exclude: [\n    // 'path/to/excluded/files'\n  ],\n  //\n  // ============\n  // Capabilities\n  // ============\n  // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n  // time. Depending on the number of capabilities, WebdriverIO launches several test\n  // sessions. Within your capabilities you can overwrite the spec and exclude options in\n  // order to group specific specs to a specific capability.\n  //\n  // First, you can define how many instances should be started at the same time. Let's\n  // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n  // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n  // files and you set maxInstances to 10, all spec files will get tested at the same time\n  // and 30 processes will get spawned. The property handles how many capabilities\n  // from the same test should run tests.\n  //\n  maxInstances: 10,\n  //\n  // If you have trouble getting all important capabilities together, check out the\n  // Sauce Labs platform configurator - a great tool to configure your capabilities:\n  // https://saucelabs.com/platform/platform-configurator\n  //\n\n  //capabilities: [{\n  //   'appium:platformName' : 'Android',\n  //   'appium:platformVersion' : '10.0',\n  //  'appium:deviceName' : 'Nexus S',\n  //  'appium:automationName' : 'UIAutomator2',\n  //'appium:app' : path.join(process.cwd(), 'app\\android\\ApiDemos-debug.apk')\n  // 'appium:app' : 'C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\\\\app\\\\android\\\\ApiDemos-debug.apk'\n  //  }],\n  // capabilities for local Appium web tests on an Android Emulator\n  ////platformName: 'Android',\n  //browserName: 'Chrome',\n  //'appium:deviceName': 'Android GoogleAPI Emulator',\n  // 'appium:platformVersion': '12.0',\n  //'appium:automationName': 'UiAutomator2'\n\n  //\n  // ===================\n  // Test Configurations\n  // ===================\n  // Define all options that are relevant for the WebdriverIO instance here\n  //\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  logLevel: 'info',\n  //\n  // Set specific log levels per logger\n  // loggers:\n  // - webdriver, webdriverio\n  // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n  // - @wdio/mocha-framework, @wdio/jasmine-framework\n  // - @wdio/local-runner\n  // - @wdio/sumologic-reporter\n  // - @wdio/cli, @wdio/config, @wdio/utils\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  // logLevels: {\n  //     webdriver: 'info',\n  //     '@wdio/appium-service': 'info'\n  // },\n  //\n  // If you only want to run your tests until a specific amount of tests have failed use\n  // bail (default is 0 - don't bail, run all tests).\n  bail: 0,\n  //\n  // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n  // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n  // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n  // gets prepended directly.\n  baseUrl: '',\n  //\n  // Default timeout for all waitFor* commands.\n  waitforTimeout: 10000,\n  //\n  // Default timeout in milliseconds for request\n  // if browser driver or grid doesn't send response\n  connectionRetryTimeout: 120000,\n  //\n  // Default request retries count\n  connectionRetryCount: 3,\n  //\n  // Test runner services\n  // Services take over a specific job you don't want to take care of. They enhance\n  // your test setup with almost no effort. Unlike plugins, they don't add new\n  // commands. Instead, they hook themselves up into the test process.\n  //services: ['appium'],\n\n  // Framework you want to run your specs with.\n  // The following are supported: Mocha, Jasmine, and Cucumber\n  // see also: https://webdriver.io/docs/frameworks\n  //\n  // Make sure you have the wdio adapter package for the specific framework installed\n  // before running any tests.\n  framework: 'mocha',\n  //\n  // The number of times to retry the entire specfile when it fails as a whole\n  // specFileRetries: 1,\n  //\n  // Delay in seconds between the spec file retry attempts\n  // specFileRetriesDelay: 0,\n  //\n  // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n  // specFileRetriesDeferred: false,\n  //\n  // Test reporter for stdout.\n  // The only one supported by default is 'dot'\n  // see also: https://webdriver.io/docs/dot-reporter\n  reporters: ['spec'],\n  //\n  // Options to be passed to Mocha.\n  // See the full list at http://mochajs.org/\n  mochaOpts: {\n    ui: 'bdd',\n    timeout: 60000\n  }\n  //\n  // =====\n  // Hooks\n  // =====\n  // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n  // it and to build services around it. You can either apply a single function or an array of\n  // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n  // resolved to continue.\n  /**\n   * Gets executed once before all workers get launched.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   */\n  // onPrepare: function (config, capabilities) {\n  //},\n  /**\n   * Gets executed before a worker process is spawned and can be used to initialise specific service\n   * for that worker as well as modify runtime environments in an async fashion.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n   * @param  {object} execArgv list of string arguments passed to the worker process\n   */\n  // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n  // },\n  /**\n   * Gets executed just after a worker process has exited.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {number} exitCode 0 - success, 1 - fail\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {number} retries  number of retries used\n   */\n  // onWorkerEnd: function (cid, exitCode, specs, retries) {\n  // },\n  /**\n   * Gets executed just before initialising the webdriver session and test framework. It allows you\n   * to manipulate configurations depending on the capability or spec.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that are to be run\n   * @param {string} cid worker id (e.g. 0-0)\n   */\n  // beforeSession: function (config, capabilities, specs, cid) {\n  // },\n  /**\n   * Gets executed before test execution begins. At this point you can access to all global\n   * variables like `browser`. It is the perfect place to define custom commands.\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs        List of spec file paths that are to be run\n   * @param {object}         browser      instance of created browser/device session\n   */\n  // before: function (capabilities, specs) {\n  // },\n  /**\n   * Runs before a WebdriverIO command gets executed.\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   */\n  // beforeCommand: function (commandName, args) {\n  // },\n  /**\n   * Hook that gets executed before the suite starts\n   * @param {object} suite suite details\n   */\n  // beforeSuite: function (suite) {\n  // },\n  /**\n   * Function to be executed before a test (in Mocha/Jasmine) starts.\n   */\n  // beforeTest: function (test, context) {\n  // },\n  /**\n   * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n   * beforeEach in Mocha)\n   */\n  // beforeHook: function (test, context) {\n  // },\n  /**\n   * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n   * afterEach in Mocha)\n   */\n  // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n  // },\n  /**\n   * Function to be executed after a test (in Mocha/Jasmine only)\n   * @param {object}  test             test object\n   * @param {object}  context          scope object the test was executed with\n   * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n   * @param {*}       result.result    return object of test function\n   * @param {number}  result.duration  duration of test\n   * @param {boolean} result.passed    true if test has passed, otherwise false\n   * @param {object}  result.retries   information about spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n   */\n  // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n  // },\n\n  /**\n   * Hook that gets executed after the suite has ended\n   * @param {object} suite suite details\n   */\n  // afterSuite: function (suite) {\n  // },\n  /**\n   * Runs after a WebdriverIO command gets executed\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   * @param {number} result 0 - command success, 1 - command error\n   * @param {object} error error object if any\n   */\n  // afterCommand: function (commandName, args, result, error) {\n  // },\n  /**\n   * Gets executed after all tests are done. You still have access to all global variables from\n   * the test.\n   * @param {number} result 0 - test pass, 1 - test fail\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // after: function (result, capabilities, specs) {\n  // },\n  /**\n   * Gets executed right after terminating the webdriver session.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // afterSession: function (config, capabilities, specs) {\n  // },\n  /**\n   * Gets executed after all workers got shut down and the process is about to exit. An error\n   * thrown in the onComplete hook will result in the test run failing.\n   * @param {object} exitCode 0 - success, 1 - fail\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {<Object>} results object containing test results\n   */\n  // onComplete: function(exitCode, config, capabilities, results) {\n  // },\n  /**\n  * Gets executed when a refresh happens.\n  * @param {string} oldSessionId session ID of the old session\n  * @param {string} newSessionId session ID of the new session\n  */\n  // onReload: function(oldSessionId, newSessionId) {\n  // }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["exports","config","runner","exclude","maxInstances","logLevel","bail","baseUrl","waitforTimeout","connectionRetryTimeout","connectionRetryCount","framework","reporters","mochaOpts","ui","timeout"],"sourceRoot":"C:\\Users\\rajee\\Appium\\webdriver-appium-v8\\config\\","sources":["wdio.shared.conf.js"],"sourcesContent":["//const path = require('path');\n\nexports.config = {\n    //\n    // ====================\n    // Runner Configuration\n    // ====================\n    // WebdriverIO supports running e2e tests as well as unit and component tests.\n    runner: 'local',\n    \n    //\n    // ==================\n    // Specify Test Files\n    // ==================\n    // Define which test specs should run. The pattern is relative to the directory\n    // of the configuration file being run.\n    //\n    // The specs are defined as an array of spec files (optionally using wildcards\n    // that will be expanded). The test for each spec file will be run in a separate\n    // worker process. In order to have a group of spec files run in the same worker\n    // process simply enclose them in an array within the specs array.\n    //\n    // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n    // then the current working directory is where your `package.json` resides, so `wdio`\n    // will be called from there.\n    //\n\n    // Patterns to exclude.\n    exclude: [\n        // 'path/to/excluded/files'\n    ],\n    //\n    // ============\n    // Capabilities\n    // ============\n    // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n    // time. Depending on the number of capabilities, WebdriverIO launches several test\n    // sessions. Within your capabilities you can overwrite the spec and exclude options in\n    // order to group specific specs to a specific capability.\n    //\n    // First, you can define how many instances should be started at the same time. Let's\n    // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n    // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n    // files and you set maxInstances to 10, all spec files will get tested at the same time\n    // and 30 processes will get spawned. The property handles how many capabilities\n    // from the same test should run tests.\n    //\n    maxInstances: 10,\n    //\n    // If you have trouble getting all important capabilities together, check out the\n    // Sauce Labs platform configurator - a great tool to configure your capabilities:\n    // https://saucelabs.com/platform/platform-configurator\n    //\n   \n\n    //capabilities: [{\n    //   'appium:platformName' : 'Android',\n    //   'appium:platformVersion' : '10.0',\n    //  'appium:deviceName' : 'Nexus S',\n    //  'appium:automationName' : 'UIAutomator2',\n    //'appium:app' : path.join(process.cwd(), 'app\\android\\ApiDemos-debug.apk')\n    // 'appium:app' : 'C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\\\\app\\\\android\\\\ApiDemos-debug.apk'\n    //  }],\n    // capabilities for local Appium web tests on an Android Emulator\n    ////platformName: 'Android',\n    //browserName: 'Chrome',\n    //'appium:deviceName': 'Android GoogleAPI Emulator',\n    // 'appium:platformVersion': '12.0',\n    //'appium:automationName': 'UiAutomator2'\n\n\n    //\n    // ===================\n    // Test Configurations\n    // ===================\n    // Define all options that are relevant for the WebdriverIO instance here\n    //\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    logLevel: 'info',\n    //\n    // Set specific log levels per logger\n    // loggers:\n    // - webdriver, webdriverio\n    // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n    // - @wdio/mocha-framework, @wdio/jasmine-framework\n    // - @wdio/local-runner\n    // - @wdio/sumologic-reporter\n    // - @wdio/cli, @wdio/config, @wdio/utils\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    // logLevels: {\n    //     webdriver: 'info',\n    //     '@wdio/appium-service': 'info'\n    // },\n    //\n    // If you only want to run your tests until a specific amount of tests have failed use\n    // bail (default is 0 - don't bail, run all tests).\n    bail: 0,\n    //\n    // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n    // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n    // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n    // gets prepended directly.\n    baseUrl: '',\n    //\n    // Default timeout for all waitFor* commands.\n    waitforTimeout: 10000,\n    //\n    // Default timeout in milliseconds for request\n    // if browser driver or grid doesn't send response\n    connectionRetryTimeout: 120000,\n    //\n    // Default request retries count\n    connectionRetryCount: 3,\n    //\n    // Test runner services\n    // Services take over a specific job you don't want to take care of. They enhance\n    // your test setup with almost no effort. Unlike plugins, they don't add new\n    // commands. Instead, they hook themselves up into the test process.\n    //services: ['appium'],\n\n    // Framework you want to run your specs with.\n    // The following are supported: Mocha, Jasmine, and Cucumber\n    // see also: https://webdriver.io/docs/frameworks\n    //\n    // Make sure you have the wdio adapter package for the specific framework installed\n    // before running any tests.\n    framework: 'mocha',\n    //\n    // The number of times to retry the entire specfile when it fails as a whole\n    // specFileRetries: 1,\n    //\n    // Delay in seconds between the spec file retry attempts\n    // specFileRetriesDelay: 0,\n    //\n    // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n    // specFileRetriesDeferred: false,\n    //\n    // Test reporter for stdout.\n    // The only one supported by default is 'dot'\n    // see also: https://webdriver.io/docs/dot-reporter\n    reporters: ['spec'],\n\n\n    //\n    // Options to be passed to Mocha.\n    // See the full list at http://mochajs.org/\n    mochaOpts: {\n        ui: 'bdd',\n        timeout: 60000\n    },\n    //\n    // =====\n    // Hooks\n    // =====\n    // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n    // it and to build services around it. You can either apply a single function or an array of\n    // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n    // resolved to continue.\n    /**\n     * Gets executed once before all workers get launched.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     */\n    // onPrepare: function (config, capabilities) {\n    //},\n    /**\n     * Gets executed before a worker process is spawned and can be used to initialise specific service\n     * for that worker as well as modify runtime environments in an async fashion.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n     * @param  {object} execArgv list of string arguments passed to the worker process\n     */\n    // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n    // },\n    /**\n     * Gets executed just after a worker process has exited.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {number} exitCode 0 - success, 1 - fail\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {number} retries  number of retries used\n     */\n    // onWorkerEnd: function (cid, exitCode, specs, retries) {\n    // },\n    /**\n     * Gets executed just before initialising the webdriver session and test framework. It allows you\n     * to manipulate configurations depending on the capability or spec.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that are to be run\n     * @param {string} cid worker id (e.g. 0-0)\n     */\n    // beforeSession: function (config, capabilities, specs, cid) {\n    // },\n    /**\n     * Gets executed before test execution begins. At this point you can access to all global\n     * variables like `browser`. It is the perfect place to define custom commands.\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs        List of spec file paths that are to be run\n     * @param {object}         browser      instance of created browser/device session\n     */\n    // before: function (capabilities, specs) {\n    // },\n    /**\n     * Runs before a WebdriverIO command gets executed.\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     */\n    // beforeCommand: function (commandName, args) {\n    // },\n    /**\n     * Hook that gets executed before the suite starts\n     * @param {object} suite suite details\n     */\n    // beforeSuite: function (suite) {\n    // },\n    /**\n     * Function to be executed before a test (in Mocha/Jasmine) starts.\n     */\n    // beforeTest: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n     * beforeEach in Mocha)\n     */\n    // beforeHook: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n     * afterEach in Mocha)\n     */\n    // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n    // },\n    /**\n     * Function to be executed after a test (in Mocha/Jasmine only)\n     * @param {object}  test             test object\n     * @param {object}  context          scope object the test was executed with\n     * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n     * @param {*}       result.result    return object of test function\n     * @param {number}  result.duration  duration of test\n     * @param {boolean} result.passed    true if test has passed, otherwise false\n     * @param {object}  result.retries   information about spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n     */\n    // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n    // },\n\n\n    /**\n     * Hook that gets executed after the suite has ended\n     * @param {object} suite suite details\n     */\n    // afterSuite: function (suite) {\n    // },\n    /**\n     * Runs after a WebdriverIO command gets executed\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     * @param {number} result 0 - command success, 1 - command error\n     * @param {object} error error object if any\n     */\n    // afterCommand: function (commandName, args, result, error) {\n    // },\n    /**\n     * Gets executed after all tests are done. You still have access to all global variables from\n     * the test.\n     * @param {number} result 0 - test pass, 1 - test fail\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // after: function (result, capabilities, specs) {\n    // },\n    /**\n     * Gets executed right after terminating the webdriver session.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // afterSession: function (config, capabilities, specs) {\n    // },\n    /**\n     * Gets executed after all workers got shut down and the process is about to exit. An error\n     * thrown in the onComplete hook will result in the test run failing.\n     * @param {object} exitCode 0 - success, 1 - fail\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {<Object>} results object containing test results\n     */\n    // onComplete: function(exitCode, config, capabilities, results) {\n    // },\n    /**\n    * Gets executed when a refresh happens.\n    * @param {string} oldSessionId session ID of the old session\n    * @param {string} newSessionId session ID of the new session\n    */\n    // onReload: function(oldSessionId, newSessionId) {\n    // }\n}\n"],"mappings":";;AAAA;;AAEAA,OAAO,CAACC,MAAM,GAAG;EACb;EACA;EACA;EACA;EACA;EACAC,MAAM,EAAE,OAAO;EAEf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACAC,OAAO,EAAE;IACL;EAAA,CACH;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,EAAE;EAChB;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,QAAQ,EAAE,MAAM;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,IAAI,EAAE,CAAC;EACP;EACA;EACA;EACA;EACA;EACAC,OAAO,EAAE,EAAE;EACX;EACA;EACAC,cAAc,EAAE,KAAK;EACrB;EACA;EACA;EACAC,sBAAsB,EAAE,MAAM;EAC9B;EACA;EACAC,oBAAoB,EAAE,CAAC;EACvB;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,OAAO;EAClB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,CAAC,MAAM,CAAC;EAGnB;EACA;EACA;EACAC,SAAS,EAAE;IACPC,EAAE,EAAE,KAAK;IACTC,OAAO,EAAE;EACb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EAGA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;AACJ,CAAC"}},"mtime":1699337468089},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\\\\config\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\",\"filename\":\"C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\\\\config\\\\wdio.shared.conf.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.23.2:test":{"value":{"code":"\"use strict\";\n\n//const path = require('path');\n\nexports.config = {\n  //\n  // ====================\n  // Runner Configuration\n  // ====================\n  // WebdriverIO supports running e2e tests as well as unit and component tests.\n  runner: 'local',\n  //\n  // ==================\n  // Specify Test Files\n  // ==================\n  // Define which test specs should run. The pattern is relative to the directory\n  // of the configuration file being run.\n  //\n  // The specs are defined as an array of spec files (optionally using wildcards\n  // that will be expanded). The test for each spec file will be run in a separate\n  // worker process. In order to have a group of spec files run in the same worker\n  // process simply enclose them in an array within the specs array.\n  //\n  // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n  // then the current working directory is where your `package.json` resides, so `wdio`\n  // will be called from there.\n  //\n\n  // Patterns to exclude.\n  exclude: [\n    // 'path/to/excluded/files'\n  ],\n  //\n  // ============\n  // Capabilities\n  // ============\n  // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n  // time. Depending on the number of capabilities, WebdriverIO launches several test\n  // sessions. Within your capabilities you can overwrite the spec and exclude options in\n  // order to group specific specs to a specific capability.\n  //\n  // First, you can define how many instances should be started at the same time. Let's\n  // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n  // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n  // files and you set maxInstances to 10, all spec files will get tested at the same time\n  // and 30 processes will get spawned. The property handles how many capabilities\n  // from the same test should run tests.\n  //\n  maxInstances: 10,\n  //\n  // If you have trouble getting all important capabilities together, check out the\n  // Sauce Labs platform configurator - a great tool to configure your capabilities:\n  // https://saucelabs.com/platform/platform-configurator\n  //\n\n  //capabilities: [{\n  //   'appium:platformName' : 'Android',\n  //   'appium:platformVersion' : '10.0',\n  //  'appium:deviceName' : 'Nexus S',\n  //  'appium:automationName' : 'UIAutomator2',\n  //'appium:app' : path.join(process.cwd(), 'app\\android\\ApiDemos-debug.apk')\n  // 'appium:app' : 'C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\\\\app\\\\android\\\\ApiDemos-debug.apk'\n  //  }],\n  // capabilities for local Appium web tests on an Android Emulator\n  ////platformName: 'Android',\n  //browserName: 'Chrome',\n  //'appium:deviceName': 'Android GoogleAPI Emulator',\n  // 'appium:platformVersion': '12.0',\n  //'appium:automationName': 'UiAutomator2'\n\n  //\n  // ===================\n  // Test Configurations\n  // ===================\n  // Define all options that are relevant for the WebdriverIO instance here\n  //\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  logLevel: 'info',\n  //\n  // Set specific log levels per logger\n  // loggers:\n  // - webdriver, webdriverio\n  // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n  // - @wdio/mocha-framework, @wdio/jasmine-framework\n  // - @wdio/local-runner\n  // - @wdio/sumologic-reporter\n  // - @wdio/cli, @wdio/config, @wdio/utils\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  // logLevels: {\n  //     webdriver: 'info',\n  //     '@wdio/appium-service': 'info'\n  // },\n  //\n  // If you only want to run your tests until a specific amount of tests have failed use\n  // bail (default is 0 - don't bail, run all tests).\n  bail: 0,\n  //\n  // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n  // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n  // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n  // gets prepended directly.\n  baseUrl: '',\n  //\n  // Default timeout for all waitFor* commands.\n  waitforTimeout: 10000,\n  //\n  // Default timeout in milliseconds for request\n  // if browser driver or grid doesn't send response\n  connectionRetryTimeout: 120000,\n  //\n  // Default request retries count\n  connectionRetryCount: 3,\n  //\n  // Test runner services\n  // Services take over a specific job you don't want to take care of. They enhance\n  // your test setup with almost no effort. Unlike plugins, they don't add new\n  // commands. Instead, they hook themselves up into the test process.\n  services: ['appium'],\n  // Framework you want to run your specs with.\n  // The following are supported: Mocha, Jasmine, and Cucumber\n  // see also: https://webdriver.io/docs/frameworks\n  //\n  // Make sure you have the wdio adapter package for the specific framework installed\n  // before running any tests.\n  framework: 'mocha',\n  //\n  // The number of times to retry the entire specfile when it fails as a whole\n  // specFileRetries: 1,\n  //\n  // Delay in seconds between the spec file retry attempts\n  // specFileRetriesDelay: 0,\n  //\n  // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n  // specFileRetriesDeferred: false,\n  //\n  // Test reporter for stdout.\n  // The only one supported by default is 'dot'\n  // see also: https://webdriver.io/docs/dot-reporter\n  reporters: ['spec'],\n  //\n  // Options to be passed to Mocha.\n  // See the full list at http://mochajs.org/\n  mochaOpts: {\n    ui: 'bdd',\n    timeout: 60000\n  }\n  //\n  // =====\n  // Hooks\n  // =====\n  // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n  // it and to build services around it. You can either apply a single function or an array of\n  // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n  // resolved to continue.\n  /**\n   * Gets executed once before all workers get launched.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   */\n  // onPrepare: function (config, capabilities) {\n  //},\n  /**\n   * Gets executed before a worker process is spawned and can be used to initialise specific service\n   * for that worker as well as modify runtime environments in an async fashion.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n   * @param  {object} execArgv list of string arguments passed to the worker process\n   */\n  // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n  // },\n  /**\n   * Gets executed just after a worker process has exited.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {number} exitCode 0 - success, 1 - fail\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {number} retries  number of retries used\n   */\n  // onWorkerEnd: function (cid, exitCode, specs, retries) {\n  // },\n  /**\n   * Gets executed just before initialising the webdriver session and test framework. It allows you\n   * to manipulate configurations depending on the capability or spec.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that are to be run\n   * @param {string} cid worker id (e.g. 0-0)\n   */\n  // beforeSession: function (config, capabilities, specs, cid) {\n  // },\n  /**\n   * Gets executed before test execution begins. At this point you can access to all global\n   * variables like `browser`. It is the perfect place to define custom commands.\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs        List of spec file paths that are to be run\n   * @param {object}         browser      instance of created browser/device session\n   */\n  // before: function (capabilities, specs) {\n  // },\n  /**\n   * Runs before a WebdriverIO command gets executed.\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   */\n  // beforeCommand: function (commandName, args) {\n  // },\n  /**\n   * Hook that gets executed before the suite starts\n   * @param {object} suite suite details\n   */\n  // beforeSuite: function (suite) {\n  // },\n  /**\n   * Function to be executed before a test (in Mocha/Jasmine) starts.\n   */\n  // beforeTest: function (test, context) {\n  // },\n  /**\n   * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n   * beforeEach in Mocha)\n   */\n  // beforeHook: function (test, context) {\n  // },\n  /**\n   * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n   * afterEach in Mocha)\n   */\n  // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n  // },\n  /**\n   * Function to be executed after a test (in Mocha/Jasmine only)\n   * @param {object}  test             test object\n   * @param {object}  context          scope object the test was executed with\n   * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n   * @param {*}       result.result    return object of test function\n   * @param {number}  result.duration  duration of test\n   * @param {boolean} result.passed    true if test has passed, otherwise false\n   * @param {object}  result.retries   information about spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n   */\n  // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n  // },\n\n  /**\n   * Hook that gets executed after the suite has ended\n   * @param {object} suite suite details\n   */\n  // afterSuite: function (suite) {\n  // },\n  /**\n   * Runs after a WebdriverIO command gets executed\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   * @param {number} result 0 - command success, 1 - command error\n   * @param {object} error error object if any\n   */\n  // afterCommand: function (commandName, args, result, error) {\n  // },\n  /**\n   * Gets executed after all tests are done. You still have access to all global variables from\n   * the test.\n   * @param {number} result 0 - test pass, 1 - test fail\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // after: function (result, capabilities, specs) {\n  // },\n  /**\n   * Gets executed right after terminating the webdriver session.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // afterSession: function (config, capabilities, specs) {\n  // },\n  /**\n   * Gets executed after all workers got shut down and the process is about to exit. An error\n   * thrown in the onComplete hook will result in the test run failing.\n   * @param {object} exitCode 0 - success, 1 - fail\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {<Object>} results object containing test results\n   */\n  // onComplete: function(exitCode, config, capabilities, results) {\n  // },\n  /**\n  * Gets executed when a refresh happens.\n  * @param {string} oldSessionId session ID of the old session\n  * @param {string} newSessionId session ID of the new session\n  */\n  // onReload: function(oldSessionId, newSessionId) {\n  // }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["exports","config","runner","exclude","maxInstances","logLevel","bail","baseUrl","waitforTimeout","connectionRetryTimeout","connectionRetryCount","services","framework","reporters","mochaOpts","ui","timeout"],"sourceRoot":"C:\\Users\\rajee\\Appium\\webdriver-appium-v8\\config\\","sources":["wdio.shared.conf.js"],"sourcesContent":["//const path = require('path');\n\nexports.config = {\n    //\n    // ====================\n    // Runner Configuration\n    // ====================\n    // WebdriverIO supports running e2e tests as well as unit and component tests.\n    runner: 'local',\n    \n    //\n    // ==================\n    // Specify Test Files\n    // ==================\n    // Define which test specs should run. The pattern is relative to the directory\n    // of the configuration file being run.\n    //\n    // The specs are defined as an array of spec files (optionally using wildcards\n    // that will be expanded). The test for each spec file will be run in a separate\n    // worker process. In order to have a group of spec files run in the same worker\n    // process simply enclose them in an array within the specs array.\n    //\n    // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n    // then the current working directory is where your `package.json` resides, so `wdio`\n    // will be called from there.\n    //\n\n    // Patterns to exclude.\n    exclude: [\n        // 'path/to/excluded/files'\n    ],\n    //\n    // ============\n    // Capabilities\n    // ============\n    // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n    // time. Depending on the number of capabilities, WebdriverIO launches several test\n    // sessions. Within your capabilities you can overwrite the spec and exclude options in\n    // order to group specific specs to a specific capability.\n    //\n    // First, you can define how many instances should be started at the same time. Let's\n    // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n    // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n    // files and you set maxInstances to 10, all spec files will get tested at the same time\n    // and 30 processes will get spawned. The property handles how many capabilities\n    // from the same test should run tests.\n    //\n    maxInstances: 10,\n    //\n    // If you have trouble getting all important capabilities together, check out the\n    // Sauce Labs platform configurator - a great tool to configure your capabilities:\n    // https://saucelabs.com/platform/platform-configurator\n    //\n   \n\n    //capabilities: [{\n    //   'appium:platformName' : 'Android',\n    //   'appium:platformVersion' : '10.0',\n    //  'appium:deviceName' : 'Nexus S',\n    //  'appium:automationName' : 'UIAutomator2',\n    //'appium:app' : path.join(process.cwd(), 'app\\android\\ApiDemos-debug.apk')\n    // 'appium:app' : 'C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\\\\app\\\\android\\\\ApiDemos-debug.apk'\n    //  }],\n    // capabilities for local Appium web tests on an Android Emulator\n    ////platformName: 'Android',\n    //browserName: 'Chrome',\n    //'appium:deviceName': 'Android GoogleAPI Emulator',\n    // 'appium:platformVersion': '12.0',\n    //'appium:automationName': 'UiAutomator2'\n\n\n    //\n    // ===================\n    // Test Configurations\n    // ===================\n    // Define all options that are relevant for the WebdriverIO instance here\n    //\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    logLevel: 'info',\n    //\n    // Set specific log levels per logger\n    // loggers:\n    // - webdriver, webdriverio\n    // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n    // - @wdio/mocha-framework, @wdio/jasmine-framework\n    // - @wdio/local-runner\n    // - @wdio/sumologic-reporter\n    // - @wdio/cli, @wdio/config, @wdio/utils\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    // logLevels: {\n    //     webdriver: 'info',\n    //     '@wdio/appium-service': 'info'\n    // },\n    //\n    // If you only want to run your tests until a specific amount of tests have failed use\n    // bail (default is 0 - don't bail, run all tests).\n    bail: 0,\n    //\n    // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n    // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n    // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n    // gets prepended directly.\n    baseUrl: '',\n    //\n    // Default timeout for all waitFor* commands.\n    waitforTimeout: 10000,\n    //\n    // Default timeout in milliseconds for request\n    // if browser driver or grid doesn't send response\n    connectionRetryTimeout: 120000,\n    //\n    // Default request retries count\n    connectionRetryCount: 3,\n    //\n    // Test runner services\n    // Services take over a specific job you don't want to take care of. They enhance\n    // your test setup with almost no effort. Unlike plugins, they don't add new\n    // commands. Instead, they hook themselves up into the test process.\n    services: ['appium'],\n\n    // Framework you want to run your specs with.\n    // The following are supported: Mocha, Jasmine, and Cucumber\n    // see also: https://webdriver.io/docs/frameworks\n    //\n    // Make sure you have the wdio adapter package for the specific framework installed\n    // before running any tests.\n    framework: 'mocha',\n    //\n    // The number of times to retry the entire specfile when it fails as a whole\n    // specFileRetries: 1,\n    //\n    // Delay in seconds between the spec file retry attempts\n    // specFileRetriesDelay: 0,\n    //\n    // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n    // specFileRetriesDeferred: false,\n    //\n    // Test reporter for stdout.\n    // The only one supported by default is 'dot'\n    // see also: https://webdriver.io/docs/dot-reporter\n    reporters: ['spec'],\n\n\n    //\n    // Options to be passed to Mocha.\n    // See the full list at http://mochajs.org/\n    mochaOpts: {\n        ui: 'bdd',\n        timeout: 60000\n    },\n    //\n    // =====\n    // Hooks\n    // =====\n    // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n    // it and to build services around it. You can either apply a single function or an array of\n    // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n    // resolved to continue.\n    /**\n     * Gets executed once before all workers get launched.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     */\n    // onPrepare: function (config, capabilities) {\n    //},\n    /**\n     * Gets executed before a worker process is spawned and can be used to initialise specific service\n     * for that worker as well as modify runtime environments in an async fashion.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n     * @param  {object} execArgv list of string arguments passed to the worker process\n     */\n    // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n    // },\n    /**\n     * Gets executed just after a worker process has exited.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {number} exitCode 0 - success, 1 - fail\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {number} retries  number of retries used\n     */\n    // onWorkerEnd: function (cid, exitCode, specs, retries) {\n    // },\n    /**\n     * Gets executed just before initialising the webdriver session and test framework. It allows you\n     * to manipulate configurations depending on the capability or spec.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that are to be run\n     * @param {string} cid worker id (e.g. 0-0)\n     */\n    // beforeSession: function (config, capabilities, specs, cid) {\n    // },\n    /**\n     * Gets executed before test execution begins. At this point you can access to all global\n     * variables like `browser`. It is the perfect place to define custom commands.\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs        List of spec file paths that are to be run\n     * @param {object}         browser      instance of created browser/device session\n     */\n    // before: function (capabilities, specs) {\n    // },\n    /**\n     * Runs before a WebdriverIO command gets executed.\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     */\n    // beforeCommand: function (commandName, args) {\n    // },\n    /**\n     * Hook that gets executed before the suite starts\n     * @param {object} suite suite details\n     */\n    // beforeSuite: function (suite) {\n    // },\n    /**\n     * Function to be executed before a test (in Mocha/Jasmine) starts.\n     */\n    // beforeTest: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n     * beforeEach in Mocha)\n     */\n    // beforeHook: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n     * afterEach in Mocha)\n     */\n    // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n    // },\n    /**\n     * Function to be executed after a test (in Mocha/Jasmine only)\n     * @param {object}  test             test object\n     * @param {object}  context          scope object the test was executed with\n     * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n     * @param {*}       result.result    return object of test function\n     * @param {number}  result.duration  duration of test\n     * @param {boolean} result.passed    true if test has passed, otherwise false\n     * @param {object}  result.retries   information about spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n     */\n    // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n    // },\n\n\n    /**\n     * Hook that gets executed after the suite has ended\n     * @param {object} suite suite details\n     */\n    // afterSuite: function (suite) {\n    // },\n    /**\n     * Runs after a WebdriverIO command gets executed\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     * @param {number} result 0 - command success, 1 - command error\n     * @param {object} error error object if any\n     */\n    // afterCommand: function (commandName, args, result, error) {\n    // },\n    /**\n     * Gets executed after all tests are done. You still have access to all global variables from\n     * the test.\n     * @param {number} result 0 - test pass, 1 - test fail\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // after: function (result, capabilities, specs) {\n    // },\n    /**\n     * Gets executed right after terminating the webdriver session.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // afterSession: function (config, capabilities, specs) {\n    // },\n    /**\n     * Gets executed after all workers got shut down and the process is about to exit. An error\n     * thrown in the onComplete hook will result in the test run failing.\n     * @param {object} exitCode 0 - success, 1 - fail\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {<Object>} results object containing test results\n     */\n    // onComplete: function(exitCode, config, capabilities, results) {\n    // },\n    /**\n    * Gets executed when a refresh happens.\n    * @param {string} oldSessionId session ID of the old session\n    * @param {string} newSessionId session ID of the new session\n    */\n    // onReload: function(oldSessionId, newSessionId) {\n    // }\n}\n"],"mappings":";;AAAA;;AAEAA,OAAO,CAACC,MAAM,GAAG;EACb;EACA;EACA;EACA;EACA;EACAC,MAAM,EAAE,OAAO;EAEf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACAC,OAAO,EAAE;IACL;EAAA,CACH;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,EAAE;EAChB;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,QAAQ,EAAE,MAAM;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,IAAI,EAAE,CAAC;EACP;EACA;EACA;EACA;EACA;EACAC,OAAO,EAAE,EAAE;EACX;EACA;EACAC,cAAc,EAAE,KAAK;EACrB;EACA;EACA;EACAC,sBAAsB,EAAE,MAAM;EAC9B;EACA;EACAC,oBAAoB,EAAE,CAAC;EACvB;EACA;EACA;EACA;EACA;EACAC,QAAQ,EAAE,CAAC,QAAQ,CAAC;EAEpB;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,OAAO;EAClB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,CAAC,MAAM,CAAC;EAGnB;EACA;EACA;EACAC,SAAS,EAAE;IACPC,EAAE,EAAE,KAAK;IACTC,OAAO,EAAE;EACb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EAGA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;AACJ,CAAC"}},"mtime":1698989072509},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\\\\test\\\\specs\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\",\"filename\":\"C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\\\\test\\\\specs\\\\hooks.spec.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-static-block\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.23.2:test":{"value":{"code":"\"use strict\";\n\ndescribe('hooks tutorisl', () => {\n  before(async () => {\n    console.log('I am in before hook');\n  });\n  beforeEach(async () => {\n    console.log('I am in before each hook');\n  });\n  afterEach(async () => {\n    console.log('I am in after each hook');\n  });\n  after(async () => {\n    console.log('I am in after hook');\n  });\n  it('test1l', async () => {\n    console.log('test1 step');\n  });\n  it('test12', async () => {\n    console.log('test2 step');\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJkZXNjcmliZSIsImJlZm9yZSIsImNvbnNvbGUiLCJsb2ciLCJiZWZvcmVFYWNoIiwiYWZ0ZXJFYWNoIiwiYWZ0ZXIiLCJpdCJdLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxyYWplZVxcQXBwaXVtXFx3ZWJkcml2ZXItYXBwaXVtLXY4XFx0ZXN0XFxzcGVjc1xcIiwic291cmNlcyI6WyJob29rcy5zcGVjLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImRlc2NyaWJlKCdob29rcyB0dXRvcmlzbCcsICgpID0+IHtcclxuXHJcbiAgICBiZWZvcmUoYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdJIGFtIGluIGJlZm9yZSBob29rJyk7XHJcbiAgICB9KTtcclxuXHJcbiAgICBiZWZvcmVFYWNoKGFzeW5jICgpID0+IHtcclxuICAgICAgICBjb25zb2xlLmxvZygnSSBhbSBpbiBiZWZvcmUgZWFjaCBob29rJyk7XHJcbiAgICB9KTtcclxuXHJcbiAgICBhZnRlckVhY2goYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdJIGFtIGluIGFmdGVyIGVhY2ggaG9vaycpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgYWZ0ZXIoYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdJIGFtIGluIGFmdGVyIGhvb2snKTtcclxuICAgIH0pO1xyXG5cclxuICAgIGl0KCd0ZXN0MWwnLCBhc3luYyAoKSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ3Rlc3QxIHN0ZXAnKTtcclxuICAgICAgICBcclxuICAgIH0pO1xyXG5cclxuICAgIGl0KCd0ZXN0MTInLCBhc3luYyAoKSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ3Rlc3QyIHN0ZXAnKTtcclxuICAgICAgICBcclxuICAgIH0pO1xyXG5cclxuXHJcbn0pIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxRQUFRLENBQUMsZ0JBQWdCLEVBQUUsTUFBTTtFQUU3QkMsTUFBTSxDQUFDLFlBQVk7SUFDZkMsT0FBTyxDQUFDQyxHQUFHLENBQUMscUJBQXFCLENBQUM7RUFDdEMsQ0FBQyxDQUFDO0VBRUZDLFVBQVUsQ0FBQyxZQUFZO0lBQ25CRixPQUFPLENBQUNDLEdBQUcsQ0FBQywwQkFBMEIsQ0FBQztFQUMzQyxDQUFDLENBQUM7RUFFRkUsU0FBUyxDQUFDLFlBQVk7SUFDbEJILE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLHlCQUF5QixDQUFDO0VBQzFDLENBQUMsQ0FBQztFQUVGRyxLQUFLLENBQUMsWUFBWTtJQUNkSixPQUFPLENBQUNDLEdBQUcsQ0FBQyxvQkFBb0IsQ0FBQztFQUNyQyxDQUFDLENBQUM7RUFFRkksRUFBRSxDQUFDLFFBQVEsRUFBRSxZQUFZO0lBQ3JCTCxPQUFPLENBQUNDLEdBQUcsQ0FBQyxZQUFZLENBQUM7RUFFN0IsQ0FBQyxDQUFDO0VBRUZJLEVBQUUsQ0FBQyxRQUFRLEVBQUUsWUFBWTtJQUNyQkwsT0FBTyxDQUFDQyxHQUFHLENBQUMsWUFBWSxDQUFDO0VBRTdCLENBQUMsQ0FBQztBQUdOLENBQUMsQ0FBQyJ9","map":{"version":3,"names":["describe","before","console","log","beforeEach","afterEach","after","it"],"sourceRoot":"C:\\Users\\rajee\\Appium\\webdriver-appium-v8\\test\\specs\\","sources":["hooks.spec.js"],"sourcesContent":["describe('hooks tutorisl', () => {\r\n\r\n    before(async () => {\r\n        console.log('I am in before hook');\r\n    });\r\n\r\n    beforeEach(async () => {\r\n        console.log('I am in before each hook');\r\n    });\r\n\r\n    afterEach(async () => {\r\n        console.log('I am in after each hook');\r\n    });\r\n\r\n    after(async () => {\r\n        console.log('I am in after hook');\r\n    });\r\n\r\n    it('test1l', async () => {\r\n        console.log('test1 step');\r\n        \r\n    });\r\n\r\n    it('test12', async () => {\r\n        console.log('test2 step');\r\n        \r\n    });\r\n\r\n\r\n})"],"mappings":";;AAAAA,QAAQ,CAAC,gBAAgB,EAAE,MAAM;EAE7BC,MAAM,CAAC,YAAY;IACfC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;EACtC,CAAC,CAAC;EAEFC,UAAU,CAAC,YAAY;IACnBF,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;EAC3C,CAAC,CAAC;EAEFE,SAAS,CAAC,YAAY;IAClBH,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;EAC1C,CAAC,CAAC;EAEFG,KAAK,CAAC,YAAY;IACdJ,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;EACrC,CAAC,CAAC;EAEFI,EAAE,CAAC,QAAQ,EAAE,YAAY;IACrBL,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;EAE7B,CAAC,CAAC;EAEFI,EAAE,CAAC,QAAQ,EAAE,YAAY;IACrBL,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;EAE7B,CAAC,CAAC;AAGN,CAAC,CAAC"}},"mtime":1698990253718},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\\\\config\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\",\"filename\":\"C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\\\\config\\\\wdio.android.bs.conf.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.23.2:test":{"value":{"code":"\"use strict\";\n\nconst {\n  config\n} = require('./wdio.shared.conf.js');\nconfig.user = process.env.BROWSERSTACK_USER;\nconfig.key = process.env.BROWSERSTACK_KEY;\nconfig.specs = ['../test/specs/android/edit-note-screen.spec.js'\n//'../test/specs/hooks.spec.js'\n];\n\nconfig.capabilities = [{\n  platformName: 'android',\n  'appium:platformVersion': '9.0',\n  'appium:deviceName': 'Google Pixel 3',\n  'appium:automationName': 'UIAutomator2',\n  'appium:app': 'bs://aa4f99d69f7b9e24750e609d8f6ca4f068249c25',\n  //colornote.apk file\n  'appium:autoGrantPermissions': true\n}];\nconfig.services = ['browserstack'];\nexports.config = config;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb25maWciLCJyZXF1aXJlIiwidXNlciIsInByb2Nlc3MiLCJlbnYiLCJCUk9XU0VSU1RBQ0tfVVNFUiIsImtleSIsIkJST1dTRVJTVEFDS19LRVkiLCJzcGVjcyIsImNhcGFiaWxpdGllcyIsInBsYXRmb3JtTmFtZSIsInNlcnZpY2VzIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxyYWplZVxcQXBwaXVtXFx3ZWJkcml2ZXItYXBwaXVtLXY4XFxjb25maWdcXCIsInNvdXJjZXMiOlsid2Rpby5hbmRyb2lkLmJzLmNvbmYuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBjb25maWcgfSA9IHJlcXVpcmUoJy4vd2Rpby5zaGFyZWQuY29uZi5qcycpO1xyXG5cclxuY29uZmlnLnVzZXIgPSBwcm9jZXNzLmVudi5CUk9XU0VSU1RBQ0tfVVNFUjtcclxuY29uZmlnLmtleSA9IHByb2Nlc3MuZW52LkJST1dTRVJTVEFDS19LRVk7XHJcbmNvbmZpZy5zcGVjcyA9IFtcclxuICcuLi90ZXN0L3NwZWNzL2FuZHJvaWQvZWRpdC1ub3RlLXNjcmVlbi5zcGVjLmpzJ1xyXG4gLy8nLi4vdGVzdC9zcGVjcy9ob29rcy5zcGVjLmpzJ1xyXG5dO1xyXG5cclxuY29uZmlnLmNhcGFiaWxpdGllcyA9IFtcclxuICAgIHtcclxuICAgIHBsYXRmb3JtTmFtZTogJ2FuZHJvaWQnLFxyXG4gICAgJ2FwcGl1bTpwbGF0Zm9ybVZlcnNpb24nOiAnOS4wJyxcclxuICAgICdhcHBpdW06ZGV2aWNlTmFtZSc6ICdHb29nbGUgUGl4ZWwgMycsXHJcbiAgICAnYXBwaXVtOmF1dG9tYXRpb25OYW1lJzogJ1VJQXV0b21hdG9yMicsXHJcbiAgICAnYXBwaXVtOmFwcCc6ICdiczovL2FhNGY5OWQ2OWY3YjllMjQ3NTBlNjA5ZDhmNmNhNGYwNjgyNDljMjUnLCAvL2NvbG9ybm90ZS5hcGsgZmlsZVxyXG4gICAgJ2FwcGl1bTphdXRvR3JhbnRQZXJtaXNzaW9ucycgOiB0cnVlXHJcbn1dO1xyXG5cclxuY29uZmlnLnNlcnZpY2VzID0gWydicm93c2Vyc3RhY2snXTtcclxuZXhwb3J0cy5jb25maWcgPSBjb25maWc7XHJcbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxNQUFNO0VBQUVBO0FBQU8sQ0FBQyxHQUFHQyxPQUFPLENBQUMsdUJBQXVCLENBQUM7QUFFbkRELE1BQU0sQ0FBQ0UsSUFBSSxHQUFHQyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0MsaUJBQWlCO0FBQzNDTCxNQUFNLENBQUNNLEdBQUcsR0FBR0gsT0FBTyxDQUFDQyxHQUFHLENBQUNHLGdCQUFnQjtBQUN6Q1AsTUFBTSxDQUFDUSxLQUFLLEdBQUcsQ0FDZDtBQUNBO0FBQUEsQ0FDQTs7QUFFRFIsTUFBTSxDQUFDUyxZQUFZLEdBQUcsQ0FDbEI7RUFDQUMsWUFBWSxFQUFFLFNBQVM7RUFDdkIsd0JBQXdCLEVBQUUsS0FBSztFQUMvQixtQkFBbUIsRUFBRSxnQkFBZ0I7RUFDckMsdUJBQXVCLEVBQUUsY0FBYztFQUN2QyxZQUFZLEVBQUUsK0NBQStDO0VBQUU7RUFDL0QsNkJBQTZCLEVBQUc7QUFDcEMsQ0FBQyxDQUFDO0FBRUZWLE1BQU0sQ0FBQ1csUUFBUSxHQUFHLENBQUMsY0FBYyxDQUFDO0FBQ2xDQyxPQUFPLENBQUNaLE1BQU0sR0FBR0EsTUFBTSJ9","map":{"version":3,"names":["config","require","user","process","env","BROWSERSTACK_USER","key","BROWSERSTACK_KEY","specs","capabilities","platformName","services","exports"],"sourceRoot":"C:\\Users\\rajee\\Appium\\webdriver-appium-v8\\config\\","sources":["wdio.android.bs.conf.js"],"sourcesContent":["const { config } = require('./wdio.shared.conf.js');\r\n\r\nconfig.user = process.env.BROWSERSTACK_USER;\r\nconfig.key = process.env.BROWSERSTACK_KEY;\r\nconfig.specs = [\r\n '../test/specs/android/edit-note-screen.spec.js'\r\n //'../test/specs/hooks.spec.js'\r\n];\r\n\r\nconfig.capabilities = [\r\n    {\r\n    platformName: 'android',\r\n    'appium:platformVersion': '9.0',\r\n    'appium:deviceName': 'Google Pixel 3',\r\n    'appium:automationName': 'UIAutomator2',\r\n    'appium:app': 'bs://aa4f99d69f7b9e24750e609d8f6ca4f068249c25', //colornote.apk file\r\n    'appium:autoGrantPermissions' : true\r\n}];\r\n\r\nconfig.services = ['browserstack'];\r\nexports.config = config;\r\n"],"mappings":";;AAAA,MAAM;EAAEA;AAAO,CAAC,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AAEnDD,MAAM,CAACE,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAC3CL,MAAM,CAACM,GAAG,GAAGH,OAAO,CAACC,GAAG,CAACG,gBAAgB;AACzCP,MAAM,CAACQ,KAAK,GAAG,CACd;AACA;AAAA,CACA;;AAEDR,MAAM,CAACS,YAAY,GAAG,CAClB;EACAC,YAAY,EAAE,SAAS;EACvB,wBAAwB,EAAE,KAAK;EAC/B,mBAAmB,EAAE,gBAAgB;EACrC,uBAAuB,EAAE,cAAc;EACvC,YAAY,EAAE,+CAA+C;EAAE;EAC/D,6BAA6B,EAAG;AACpC,CAAC,CAAC;AAEFV,MAAM,CAACW,QAAQ,GAAG,CAAC,cAAc,CAAC;AAClCC,OAAO,CAACZ,MAAM,GAAGA,MAAM"}},"mtime":1699339004753},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\rajee\\\\Downloads\\\\Selenium(Test1To4)\\\\webdriverio-appium\\\\config\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\rajee\\\\Downloads\\\\Selenium(Test1To4)\\\\webdriverio-appium\",\"filename\":\"C:\\\\Users\\\\rajee\\\\Downloads\\\\Selenium(Test1To4)\\\\webdriverio-appium\\\\config\\\\wdio.android.bs.conf.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\rajee\\\\Downloads\\\\Selenium(Test1To4)\\\\webdriverio-appium\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.23.2:test":{"value":{"code":"\"use strict\";\n\nconst {\n  config\n} = require('./wdio.shared.conf.js');\nconfig.user = process.env.BROWSERSTACK_USER;\nconfig.key = process.env.BROWSERSTACK_KEY;\nconfig.specs = ['../test/specs/android/edit-note-screen.spec.js'\n//'../test/specs/hooks.spec.js'\n];\n\nconfig.capabilities = [{\n  platformName: 'android',\n  'appium:platformVersion': '9.0',\n  'appium:deviceName': 'Google Pixel 3',\n  'appium:automationName': 'UIAutomator2',\n  'appium:app': 'bs://aa4f99d69f7b9e24750e609d8f6ca4f068249c25',\n  //colornote.apk file\n  'appium:autoGrantPermissions': true\n}];\n\n//config.services = ['browserstack'];\nconfig.services = [['browserstack', {\n  args: {\n    relaxedSecurity: true\n  },\n  logPath: './'\n}]];\nexports.config = config;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb25maWciLCJyZXF1aXJlIiwidXNlciIsInByb2Nlc3MiLCJlbnYiLCJCUk9XU0VSU1RBQ0tfVVNFUiIsImtleSIsIkJST1dTRVJTVEFDS19LRVkiLCJzcGVjcyIsImNhcGFiaWxpdGllcyIsInBsYXRmb3JtTmFtZSIsInNlcnZpY2VzIiwiYXJncyIsInJlbGF4ZWRTZWN1cml0eSIsImxvZ1BhdGgiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHJhamVlXFxEb3dubG9hZHNcXFNlbGVuaXVtKFRlc3QxVG80KVxcd2ViZHJpdmVyaW8tYXBwaXVtXFxjb25maWdcXCIsInNvdXJjZXMiOlsid2Rpby5hbmRyb2lkLmJzLmNvbmYuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBjb25maWcgfSA9IHJlcXVpcmUoJy4vd2Rpby5zaGFyZWQuY29uZi5qcycpO1xyXG5cclxuY29uZmlnLnVzZXIgPSBwcm9jZXNzLmVudi5CUk9XU0VSU1RBQ0tfVVNFUjtcclxuY29uZmlnLmtleSA9IHByb2Nlc3MuZW52LkJST1dTRVJTVEFDS19LRVk7XHJcbmNvbmZpZy5zcGVjcyA9IFtcclxuICcuLi90ZXN0L3NwZWNzL2FuZHJvaWQvZWRpdC1ub3RlLXNjcmVlbi5zcGVjLmpzJ1xyXG4gLy8nLi4vdGVzdC9zcGVjcy9ob29rcy5zcGVjLmpzJ1xyXG5dO1xyXG5cclxuY29uZmlnLmNhcGFiaWxpdGllcyA9IFtcclxuICAgIHtcclxuICAgIHBsYXRmb3JtTmFtZTogJ2FuZHJvaWQnLFxyXG4gICAgJ2FwcGl1bTpwbGF0Zm9ybVZlcnNpb24nOiAnOS4wJyxcclxuICAgICdhcHBpdW06ZGV2aWNlTmFtZSc6ICdHb29nbGUgUGl4ZWwgMycsXHJcbiAgICAnYXBwaXVtOmF1dG9tYXRpb25OYW1lJzogJ1VJQXV0b21hdG9yMicsXHJcbiAgICAnYXBwaXVtOmFwcCc6ICdiczovL2FhNGY5OWQ2OWY3YjllMjQ3NTBlNjA5ZDhmNmNhNGYwNjgyNDljMjUnLCAvL2NvbG9ybm90ZS5hcGsgZmlsZVxyXG4gICAgJ2FwcGl1bTphdXRvR3JhbnRQZXJtaXNzaW9ucycgOiB0cnVlXHJcbn1dO1xyXG5cclxuLy9jb25maWcuc2VydmljZXMgPSBbJ2Jyb3dzZXJzdGFjayddO1xyXG5jb25maWcuc2VydmljZXMgPSBbWydicm93c2Vyc3RhY2snLCB7XHJcbmFyZ3M6e1xyXG4gICAgcmVsYXhlZFNlY3VyaXR5OiB0cnVlXHJcbn0sXHJcbmxvZ1BhdGg6ICcuLydcclxufVxyXG5cclxuXV07XHJcbmV4cG9ydHMuY29uZmlnID0gY29uZmlnO1xyXG4iXSwibWFwcGluZ3MiOiI7O0FBQUEsTUFBTTtFQUFFQTtBQUFPLENBQUMsR0FBR0MsT0FBTyxDQUFDLHVCQUF1QixDQUFDO0FBRW5ERCxNQUFNLENBQUNFLElBQUksR0FBR0MsT0FBTyxDQUFDQyxHQUFHLENBQUNDLGlCQUFpQjtBQUMzQ0wsTUFBTSxDQUFDTSxHQUFHLEdBQUdILE9BQU8sQ0FBQ0MsR0FBRyxDQUFDRyxnQkFBZ0I7QUFDekNQLE1BQU0sQ0FBQ1EsS0FBSyxHQUFHLENBQ2Q7QUFDQTtBQUFBLENBQ0E7O0FBRURSLE1BQU0sQ0FBQ1MsWUFBWSxHQUFHLENBQ2xCO0VBQ0FDLFlBQVksRUFBRSxTQUFTO0VBQ3ZCLHdCQUF3QixFQUFFLEtBQUs7RUFDL0IsbUJBQW1CLEVBQUUsZ0JBQWdCO0VBQ3JDLHVCQUF1QixFQUFFLGNBQWM7RUFDdkMsWUFBWSxFQUFFLCtDQUErQztFQUFFO0VBQy9ELDZCQUE2QixFQUFHO0FBQ3BDLENBQUMsQ0FBQzs7QUFFRjtBQUNBVixNQUFNLENBQUNXLFFBQVEsR0FBRyxDQUFDLENBQUMsY0FBYyxFQUFFO0VBQ3BDQyxJQUFJLEVBQUM7SUFDREMsZUFBZSxFQUFFO0VBQ3JCLENBQUM7RUFDREMsT0FBTyxFQUFFO0FBQ1QsQ0FBQyxDQUVBLENBQUM7QUFDRkMsT0FBTyxDQUFDZixNQUFNLEdBQUdBLE1BQU0ifQ==","map":{"version":3,"names":["config","require","user","process","env","BROWSERSTACK_USER","key","BROWSERSTACK_KEY","specs","capabilities","platformName","services","args","relaxedSecurity","logPath","exports"],"sourceRoot":"C:\\Users\\rajee\\Downloads\\Selenium(Test1To4)\\webdriverio-appium\\config\\","sources":["wdio.android.bs.conf.js"],"sourcesContent":["const { config } = require('./wdio.shared.conf.js');\r\n\r\nconfig.user = process.env.BROWSERSTACK_USER;\r\nconfig.key = process.env.BROWSERSTACK_KEY;\r\nconfig.specs = [\r\n '../test/specs/android/edit-note-screen.spec.js'\r\n //'../test/specs/hooks.spec.js'\r\n];\r\n\r\nconfig.capabilities = [\r\n    {\r\n    platformName: 'android',\r\n    'appium:platformVersion': '9.0',\r\n    'appium:deviceName': 'Google Pixel 3',\r\n    'appium:automationName': 'UIAutomator2',\r\n    'appium:app': 'bs://aa4f99d69f7b9e24750e609d8f6ca4f068249c25', //colornote.apk file\r\n    'appium:autoGrantPermissions' : true\r\n}];\r\n\r\n//config.services = ['browserstack'];\r\nconfig.services = [['browserstack', {\r\nargs:{\r\n    relaxedSecurity: true\r\n},\r\nlogPath: './'\r\n}\r\n\r\n]];\r\nexports.config = config;\r\n"],"mappings":";;AAAA,MAAM;EAAEA;AAAO,CAAC,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AAEnDD,MAAM,CAACE,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAC3CL,MAAM,CAACM,GAAG,GAAGH,OAAO,CAACC,GAAG,CAACG,gBAAgB;AACzCP,MAAM,CAACQ,KAAK,GAAG,CACd;AACA;AAAA,CACA;;AAEDR,MAAM,CAACS,YAAY,GAAG,CAClB;EACAC,YAAY,EAAE,SAAS;EACvB,wBAAwB,EAAE,KAAK;EAC/B,mBAAmB,EAAE,gBAAgB;EACrC,uBAAuB,EAAE,cAAc;EACvC,YAAY,EAAE,+CAA+C;EAAE;EAC/D,6BAA6B,EAAG;AACpC,CAAC,CAAC;;AAEF;AACAV,MAAM,CAACW,QAAQ,GAAG,CAAC,CAAC,cAAc,EAAE;EACpCC,IAAI,EAAC;IACDC,eAAe,EAAE;EACrB,CAAC;EACDC,OAAO,EAAE;AACT,CAAC,CAEA,CAAC;AACFC,OAAO,CAACf,MAAM,GAAGA,MAAM"}},"mtime":1699547875688},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\rajee\\\\Downloads\\\\Selenium(Test1To4)\\\\webdriverio-appium\\\\config\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\rajee\\\\Downloads\\\\Selenium(Test1To4)\\\\webdriverio-appium\",\"filename\":\"C:\\\\Users\\\\rajee\\\\Downloads\\\\Selenium(Test1To4)\\\\webdriverio-appium\\\\config\\\\wdio.shared.conf.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\rajee\\\\Downloads\\\\Selenium(Test1To4)\\\\webdriverio-appium\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-static-block\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.23.2:test":{"value":{"code":"\"use strict\";\n\n//const path = require('path');\n\nexports.config = {\n  //\n  // ====================\n  // Runner Configuration\n  // ====================\n  // WebdriverIO supports running e2e tests as well as unit and component tests.\n  runner: 'local',\n  //\n  // ==================\n  // Specify Test Files\n  // ==================\n  // Define which test specs should run. The pattern is relative to the directory\n  // of the configuration file being run.\n  //\n  // The specs are defined as an array of spec files (optionally using wildcards\n  // that will be expanded). The test for each spec file will be run in a separate\n  // worker process. In order to have a group of spec files run in the same worker\n  // process simply enclose them in an array within the specs array.\n  //\n  // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n  // then the current working directory is where your `package.json` resides, so `wdio`\n  // will be called from there.\n  //\n\n  // Patterns to exclude.\n  exclude: [\n    // 'path/to/excluded/files'\n  ],\n  //\n  // ============\n  // Capabilities\n  // ============\n  // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n  // time. Depending on the number of capabilities, WebdriverIO launches several test\n  // sessions. Within your capabilities you can overwrite the spec and exclude options in\n  // order to group specific specs to a specific capability.\n  //\n  // First, you can define how many instances should be started at the same time. Let's\n  // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n  // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n  // files and you set maxInstances to 10, all spec files will get tested at the same time\n  // and 30 processes will get spawned. The property handles how many capabilities\n  // from the same test should run tests.\n  //\n  maxInstances: 10,\n  //\n  // If you have trouble getting all important capabilities together, check out the\n  // Sauce Labs platform configurator - a great tool to configure your capabilities:\n  // https://saucelabs.com/platform/platform-configurator\n  //\n\n  //capabilities: [{\n  //   'appium:platformName' : 'Android',\n  //   'appium:platformVersion' : '10.0',\n  //  'appium:deviceName' : 'Nexus S',\n  //  'appium:automationName' : 'UIAutomator2',\n  //'appium:app' : path.join(process.cwd(), 'app\\android\\ApiDemos-debug.apk')\n  // 'appium:app' : 'C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\\\\app\\\\android\\\\ApiDemos-debug.apk'\n  //  }],\n  // capabilities for local Appium web tests on an Android Emulator\n  ////platformName: 'Android',\n  //browserName: 'Chrome',\n  //'appium:deviceName': 'Android GoogleAPI Emulator',\n  // 'appium:platformVersion': '12.0',\n  //'appium:automationName': 'UiAutomator2'\n\n  //\n  // ===================\n  // Test Configurations\n  // ===================\n  // Define all options that are relevant for the WebdriverIO instance here\n  //\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  logLevel: 'info',\n  //\n  // Set specific log levels per logger\n  // loggers:\n  // - webdriver, webdriverio\n  // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n  // - @wdio/mocha-framework, @wdio/jasmine-framework\n  // - @wdio/local-runner\n  // - @wdio/sumologic-reporter\n  // - @wdio/cli, @wdio/config, @wdio/utils\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  // logLevels: {\n  //     webdriver: 'info',\n  //     '@wdio/appium-service': 'info'\n  // },\n  //\n  // If you only want to run your tests until a specific amount of tests have failed use\n  // bail (default is 0 - don't bail, run all tests).\n  bail: 0,\n  //\n  // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n  // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n  // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n  // gets prepended directly.\n  baseUrl: '',\n  //\n  // Default timeout for all waitFor* commands.\n  waitforTimeout: 10000,\n  //\n  // Default timeout in milliseconds for request\n  // if browser driver or grid doesn't send response\n  connectionRetryTimeout: 120000,\n  //\n  // Default request retries count\n  connectionRetryCount: 3,\n  //\n  // Test runner services\n  // Services take over a specific job you don't want to take care of. They enhance\n  // your test setup with almost no effort. Unlike plugins, they don't add new\n  // commands. Instead, they hook themselves up into the test process.\n  //services: ['appium'],\n\n  // Framework you want to run your specs with.\n  // The following are supported: Mocha, Jasmine, and Cucumber\n  // see also: https://webdriver.io/docs/frameworks\n  //\n  // Make sure you have the wdio adapter package for the specific framework installed\n  // before running any tests.\n  framework: 'mocha',\n  //\n  // The number of times to retry the entire specfile when it fails as a whole\n  // specFileRetries: 1,\n  //\n  // Delay in seconds between the spec file retry attempts\n  // specFileRetriesDelay: 0,\n  //\n  // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n  // specFileRetriesDeferred: false,\n  //\n  // Test reporter for stdout.\n  // The only one supported by default is 'dot'\n  // see also: https://webdriver.io/docs/dot-reporter\n  reporters: ['spec'],\n  //\n  // Options to be passed to Mocha.\n  // See the full list at http://mochajs.org/\n  mochaOpts: {\n    ui: 'bdd',\n    timeout: 60000\n  }\n  //\n  // =====\n  // Hooks\n  // =====\n  // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n  // it and to build services around it. You can either apply a single function or an array of\n  // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n  // resolved to continue.\n  /**\r\n   * Gets executed once before all workers get launched.\r\n   * @param {object} config wdio configuration object\r\n   * @param {Array.<Object>} capabilities list of capabilities details\r\n   */\n  // onPrepare: function (config, capabilities) {\n  //},\n  /**\r\n   * Gets executed before a worker process is spawned and can be used to initialise specific service\r\n   * for that worker as well as modify runtime environments in an async fashion.\r\n   * @param  {string} cid      capability id (e.g 0-0)\r\n   * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\r\n   * @param  {object} specs    specs to be run in the worker process\r\n   * @param  {object} args     object that will be merged with the main configuration once worker is initialized\r\n   * @param  {object} execArgv list of string arguments passed to the worker process\r\n   */\n  // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n  // },\n  /**\r\n   * Gets executed just after a worker process has exited.\r\n   * @param  {string} cid      capability id (e.g 0-0)\r\n   * @param  {number} exitCode 0 - success, 1 - fail\r\n   * @param  {object} specs    specs to be run in the worker process\r\n   * @param  {number} retries  number of retries used\r\n   */\n  // onWorkerEnd: function (cid, exitCode, specs, retries) {\n  // },\n  /**\r\n   * Gets executed just before initialising the webdriver session and test framework. It allows you\r\n   * to manipulate configurations depending on the capability or spec.\r\n   * @param {object} config wdio configuration object\r\n   * @param {Array.<Object>} capabilities list of capabilities details\r\n   * @param {Array.<String>} specs List of spec file paths that are to be run\r\n   * @param {string} cid worker id (e.g. 0-0)\r\n   */\n  // beforeSession: function (config, capabilities, specs, cid) {\n  // },\n  /**\r\n   * Gets executed before test execution begins. At this point you can access to all global\r\n   * variables like `browser`. It is the perfect place to define custom commands.\r\n   * @param {Array.<Object>} capabilities list of capabilities details\r\n   * @param {Array.<String>} specs        List of spec file paths that are to be run\r\n   * @param {object}         browser      instance of created browser/device session\r\n   */\n  // before: function (capabilities, specs) {\n  // },\n  /**\r\n   * Runs before a WebdriverIO command gets executed.\r\n   * @param {string} commandName hook command name\r\n   * @param {Array} args arguments that command would receive\r\n   */\n  // beforeCommand: function (commandName, args) {\n  // },\n  /**\r\n   * Hook that gets executed before the suite starts\r\n   * @param {object} suite suite details\r\n   */\n  // beforeSuite: function (suite) {\n  // },\n  /**\r\n   * Function to be executed before a test (in Mocha/Jasmine) starts.\r\n   */\n  // beforeTest: function (test, context) {\n  // },\n  /**\r\n   * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\r\n   * beforeEach in Mocha)\r\n   */\n  // beforeHook: function (test, context) {\n  // },\n  /**\r\n   * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\r\n   * afterEach in Mocha)\r\n   */\n  // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n  // },\n  /**\r\n   * Function to be executed after a test (in Mocha/Jasmine only)\r\n   * @param {object}  test             test object\r\n   * @param {object}  context          scope object the test was executed with\r\n   * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\r\n   * @param {*}       result.result    return object of test function\r\n   * @param {number}  result.duration  duration of test\r\n   * @param {boolean} result.passed    true if test has passed, otherwise false\r\n   * @param {object}  result.retries   information about spec related retries, e.g. `{ attempts: 0, limit: 0 }`\r\n   */\n  // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n  // },\n\n  /**\r\n   * Hook that gets executed after the suite has ended\r\n   * @param {object} suite suite details\r\n   */\n  // afterSuite: function (suite) {\n  // },\n  /**\r\n   * Runs after a WebdriverIO command gets executed\r\n   * @param {string} commandName hook command name\r\n   * @param {Array} args arguments that command would receive\r\n   * @param {number} result 0 - command success, 1 - command error\r\n   * @param {object} error error object if any\r\n   */\n  // afterCommand: function (commandName, args, result, error) {\n  // },\n  /**\r\n   * Gets executed after all tests are done. You still have access to all global variables from\r\n   * the test.\r\n   * @param {number} result 0 - test pass, 1 - test fail\r\n   * @param {Array.<Object>} capabilities list of capabilities details\r\n   * @param {Array.<String>} specs List of spec file paths that ran\r\n   */\n  // after: function (result, capabilities, specs) {\n  // },\n  /**\r\n   * Gets executed right after terminating the webdriver session.\r\n   * @param {object} config wdio configuration object\r\n   * @param {Array.<Object>} capabilities list of capabilities details\r\n   * @param {Array.<String>} specs List of spec file paths that ran\r\n   */\n  // afterSession: function (config, capabilities, specs) {\n  // },\n  /**\r\n   * Gets executed after all workers got shut down and the process is about to exit. An error\r\n   * thrown in the onComplete hook will result in the test run failing.\r\n   * @param {object} exitCode 0 - success, 1 - fail\r\n   * @param {object} config wdio configuration object\r\n   * @param {Array.<Object>} capabilities list of capabilities details\r\n   * @param {<Object>} results object containing test results\r\n   */\n  // onComplete: function(exitCode, config, capabilities, results) {\n  // },\n  /**\r\n  * Gets executed when a refresh happens.\r\n  * @param {string} oldSessionId session ID of the old session\r\n  * @param {string} newSessionId session ID of the new session\r\n  */\n  // onReload: function(oldSessionId, newSessionId) {\n  // }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["exports","config","runner","exclude","maxInstances","logLevel","bail","baseUrl","waitforTimeout","connectionRetryTimeout","connectionRetryCount","framework","reporters","mochaOpts","ui","timeout"],"sourceRoot":"C:\\Users\\rajee\\Downloads\\Selenium(Test1To4)\\webdriverio-appium\\config\\","sources":["wdio.shared.conf.js"],"sourcesContent":["//const path = require('path');\r\n\r\nexports.config = {\r\n    //\r\n    // ====================\r\n    // Runner Configuration\r\n    // ====================\r\n    // WebdriverIO supports running e2e tests as well as unit and component tests.\r\n    runner: 'local',\r\n    \r\n    //\r\n    // ==================\r\n    // Specify Test Files\r\n    // ==================\r\n    // Define which test specs should run. The pattern is relative to the directory\r\n    // of the configuration file being run.\r\n    //\r\n    // The specs are defined as an array of spec files (optionally using wildcards\r\n    // that will be expanded). The test for each spec file will be run in a separate\r\n    // worker process. In order to have a group of spec files run in the same worker\r\n    // process simply enclose them in an array within the specs array.\r\n    //\r\n    // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\r\n    // then the current working directory is where your `package.json` resides, so `wdio`\r\n    // will be called from there.\r\n    //\r\n\r\n    // Patterns to exclude.\r\n    exclude: [\r\n        // 'path/to/excluded/files'\r\n    ],\r\n    //\r\n    // ============\r\n    // Capabilities\r\n    // ============\r\n    // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\r\n    // time. Depending on the number of capabilities, WebdriverIO launches several test\r\n    // sessions. Within your capabilities you can overwrite the spec and exclude options in\r\n    // order to group specific specs to a specific capability.\r\n    //\r\n    // First, you can define how many instances should be started at the same time. Let's\r\n    // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\r\n    // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\r\n    // files and you set maxInstances to 10, all spec files will get tested at the same time\r\n    // and 30 processes will get spawned. The property handles how many capabilities\r\n    // from the same test should run tests.\r\n    //\r\n    maxInstances: 10,\r\n    //\r\n    // If you have trouble getting all important capabilities together, check out the\r\n    // Sauce Labs platform configurator - a great tool to configure your capabilities:\r\n    // https://saucelabs.com/platform/platform-configurator\r\n    //\r\n   \r\n\r\n    //capabilities: [{\r\n    //   'appium:platformName' : 'Android',\r\n    //   'appium:platformVersion' : '10.0',\r\n    //  'appium:deviceName' : 'Nexus S',\r\n    //  'appium:automationName' : 'UIAutomator2',\r\n    //'appium:app' : path.join(process.cwd(), 'app\\android\\ApiDemos-debug.apk')\r\n    // 'appium:app' : 'C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\\\\app\\\\android\\\\ApiDemos-debug.apk'\r\n    //  }],\r\n    // capabilities for local Appium web tests on an Android Emulator\r\n    ////platformName: 'Android',\r\n    //browserName: 'Chrome',\r\n    //'appium:deviceName': 'Android GoogleAPI Emulator',\r\n    // 'appium:platformVersion': '12.0',\r\n    //'appium:automationName': 'UiAutomator2'\r\n\r\n\r\n    //\r\n    // ===================\r\n    // Test Configurations\r\n    // ===================\r\n    // Define all options that are relevant for the WebdriverIO instance here\r\n    //\r\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\r\n    logLevel: 'info',\r\n    //\r\n    // Set specific log levels per logger\r\n    // loggers:\r\n    // - webdriver, webdriverio\r\n    // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\r\n    // - @wdio/mocha-framework, @wdio/jasmine-framework\r\n    // - @wdio/local-runner\r\n    // - @wdio/sumologic-reporter\r\n    // - @wdio/cli, @wdio/config, @wdio/utils\r\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\r\n    // logLevels: {\r\n    //     webdriver: 'info',\r\n    //     '@wdio/appium-service': 'info'\r\n    // },\r\n    //\r\n    // If you only want to run your tests until a specific amount of tests have failed use\r\n    // bail (default is 0 - don't bail, run all tests).\r\n    bail: 0,\r\n    //\r\n    // Set a base URL in order to shorten url command calls. If your `url` parameter starts\r\n    // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\r\n    // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\r\n    // gets prepended directly.\r\n    baseUrl: '',\r\n    //\r\n    // Default timeout for all waitFor* commands.\r\n    waitforTimeout: 10000,\r\n    //\r\n    // Default timeout in milliseconds for request\r\n    // if browser driver or grid doesn't send response\r\n    connectionRetryTimeout: 120000,\r\n    //\r\n    // Default request retries count\r\n    connectionRetryCount: 3,\r\n    //\r\n    // Test runner services\r\n    // Services take over a specific job you don't want to take care of. They enhance\r\n    // your test setup with almost no effort. Unlike plugins, they don't add new\r\n    // commands. Instead, they hook themselves up into the test process.\r\n    //services: ['appium'],\r\n\r\n    // Framework you want to run your specs with.\r\n    // The following are supported: Mocha, Jasmine, and Cucumber\r\n    // see also: https://webdriver.io/docs/frameworks\r\n    //\r\n    // Make sure you have the wdio adapter package for the specific framework installed\r\n    // before running any tests.\r\n    framework: 'mocha',\r\n    //\r\n    // The number of times to retry the entire specfile when it fails as a whole\r\n    // specFileRetries: 1,\r\n    //\r\n    // Delay in seconds between the spec file retry attempts\r\n    // specFileRetriesDelay: 0,\r\n    //\r\n    // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\r\n    // specFileRetriesDeferred: false,\r\n    //\r\n    // Test reporter for stdout.\r\n    // The only one supported by default is 'dot'\r\n    // see also: https://webdriver.io/docs/dot-reporter\r\n    reporters: ['spec'],\r\n\r\n\r\n    //\r\n    // Options to be passed to Mocha.\r\n    // See the full list at http://mochajs.org/\r\n    mochaOpts: {\r\n        ui: 'bdd',\r\n        timeout: 60000\r\n    },\r\n    //\r\n    // =====\r\n    // Hooks\r\n    // =====\r\n    // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\r\n    // it and to build services around it. You can either apply a single function or an array of\r\n    // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\r\n    // resolved to continue.\r\n    /**\r\n     * Gets executed once before all workers get launched.\r\n     * @param {object} config wdio configuration object\r\n     * @param {Array.<Object>} capabilities list of capabilities details\r\n     */\r\n    // onPrepare: function (config, capabilities) {\r\n    //},\r\n    /**\r\n     * Gets executed before a worker process is spawned and can be used to initialise specific service\r\n     * for that worker as well as modify runtime environments in an async fashion.\r\n     * @param  {string} cid      capability id (e.g 0-0)\r\n     * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\r\n     * @param  {object} specs    specs to be run in the worker process\r\n     * @param  {object} args     object that will be merged with the main configuration once worker is initialized\r\n     * @param  {object} execArgv list of string arguments passed to the worker process\r\n     */\r\n    // onWorkerStart: function (cid, caps, specs, args, execArgv) {\r\n    // },\r\n    /**\r\n     * Gets executed just after a worker process has exited.\r\n     * @param  {string} cid      capability id (e.g 0-0)\r\n     * @param  {number} exitCode 0 - success, 1 - fail\r\n     * @param  {object} specs    specs to be run in the worker process\r\n     * @param  {number} retries  number of retries used\r\n     */\r\n    // onWorkerEnd: function (cid, exitCode, specs, retries) {\r\n    // },\r\n    /**\r\n     * Gets executed just before initialising the webdriver session and test framework. It allows you\r\n     * to manipulate configurations depending on the capability or spec.\r\n     * @param {object} config wdio configuration object\r\n     * @param {Array.<Object>} capabilities list of capabilities details\r\n     * @param {Array.<String>} specs List of spec file paths that are to be run\r\n     * @param {string} cid worker id (e.g. 0-0)\r\n     */\r\n    // beforeSession: function (config, capabilities, specs, cid) {\r\n    // },\r\n    /**\r\n     * Gets executed before test execution begins. At this point you can access to all global\r\n     * variables like `browser`. It is the perfect place to define custom commands.\r\n     * @param {Array.<Object>} capabilities list of capabilities details\r\n     * @param {Array.<String>} specs        List of spec file paths that are to be run\r\n     * @param {object}         browser      instance of created browser/device session\r\n     */\r\n    // before: function (capabilities, specs) {\r\n    // },\r\n    /**\r\n     * Runs before a WebdriverIO command gets executed.\r\n     * @param {string} commandName hook command name\r\n     * @param {Array} args arguments that command would receive\r\n     */\r\n    // beforeCommand: function (commandName, args) {\r\n    // },\r\n    /**\r\n     * Hook that gets executed before the suite starts\r\n     * @param {object} suite suite details\r\n     */\r\n    // beforeSuite: function (suite) {\r\n    // },\r\n    /**\r\n     * Function to be executed before a test (in Mocha/Jasmine) starts.\r\n     */\r\n    // beforeTest: function (test, context) {\r\n    // },\r\n    /**\r\n     * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\r\n     * beforeEach in Mocha)\r\n     */\r\n    // beforeHook: function (test, context) {\r\n    // },\r\n    /**\r\n     * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\r\n     * afterEach in Mocha)\r\n     */\r\n    // afterHook: function (test, context, { error, result, duration, passed, retries }) {\r\n    // },\r\n    /**\r\n     * Function to be executed after a test (in Mocha/Jasmine only)\r\n     * @param {object}  test             test object\r\n     * @param {object}  context          scope object the test was executed with\r\n     * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\r\n     * @param {*}       result.result    return object of test function\r\n     * @param {number}  result.duration  duration of test\r\n     * @param {boolean} result.passed    true if test has passed, otherwise false\r\n     * @param {object}  result.retries   information about spec related retries, e.g. `{ attempts: 0, limit: 0 }`\r\n     */\r\n    // afterTest: function(test, context, { error, result, duration, passed, retries }) {\r\n    // },\r\n\r\n\r\n    /**\r\n     * Hook that gets executed after the suite has ended\r\n     * @param {object} suite suite details\r\n     */\r\n    // afterSuite: function (suite) {\r\n    // },\r\n    /**\r\n     * Runs after a WebdriverIO command gets executed\r\n     * @param {string} commandName hook command name\r\n     * @param {Array} args arguments that command would receive\r\n     * @param {number} result 0 - command success, 1 - command error\r\n     * @param {object} error error object if any\r\n     */\r\n    // afterCommand: function (commandName, args, result, error) {\r\n    // },\r\n    /**\r\n     * Gets executed after all tests are done. You still have access to all global variables from\r\n     * the test.\r\n     * @param {number} result 0 - test pass, 1 - test fail\r\n     * @param {Array.<Object>} capabilities list of capabilities details\r\n     * @param {Array.<String>} specs List of spec file paths that ran\r\n     */\r\n    // after: function (result, capabilities, specs) {\r\n    // },\r\n    /**\r\n     * Gets executed right after terminating the webdriver session.\r\n     * @param {object} config wdio configuration object\r\n     * @param {Array.<Object>} capabilities list of capabilities details\r\n     * @param {Array.<String>} specs List of spec file paths that ran\r\n     */\r\n    // afterSession: function (config, capabilities, specs) {\r\n    // },\r\n    /**\r\n     * Gets executed after all workers got shut down and the process is about to exit. An error\r\n     * thrown in the onComplete hook will result in the test run failing.\r\n     * @param {object} exitCode 0 - success, 1 - fail\r\n     * @param {object} config wdio configuration object\r\n     * @param {Array.<Object>} capabilities list of capabilities details\r\n     * @param {<Object>} results object containing test results\r\n     */\r\n    // onComplete: function(exitCode, config, capabilities, results) {\r\n    // },\r\n    /**\r\n    * Gets executed when a refresh happens.\r\n    * @param {string} oldSessionId session ID of the old session\r\n    * @param {string} newSessionId session ID of the new session\r\n    */\r\n    // onReload: function(oldSessionId, newSessionId) {\r\n    // }\r\n}\r\n"],"mappings":";;AAAA;;AAEAA,OAAO,CAACC,MAAM,GAAG;EACb;EACA;EACA;EACA;EACA;EACAC,MAAM,EAAE,OAAO;EAEf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACAC,OAAO,EAAE;IACL;EAAA,CACH;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,EAAE;EAChB;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,QAAQ,EAAE,MAAM;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,IAAI,EAAE,CAAC;EACP;EACA;EACA;EACA;EACA;EACAC,OAAO,EAAE,EAAE;EACX;EACA;EACAC,cAAc,EAAE,KAAK;EACrB;EACA;EACA;EACAC,sBAAsB,EAAE,MAAM;EAC9B;EACA;EACAC,oBAAoB,EAAE,CAAC;EACvB;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,OAAO;EAClB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,CAAC,MAAM,CAAC;EAGnB;EACA;EACA;EACAC,SAAS,EAAE;IACPC,EAAE,EAAE,KAAK;IACTC,OAAO,EAAE;EACb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EAGA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;AACJ,CAAC"}},"mtime":1699542692912},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\rajee\\\\Downloads\\\\Selenium(Test1To4)\\\\webdriverio-appium\\\\test\\\\specs\\\\android\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\rajee\\\\Downloads\\\\Selenium(Test1To4)\\\\webdriverio-appium\",\"filename\":\"C:\\\\Users\\\\rajee\\\\Downloads\\\\Selenium(Test1To4)\\\\webdriverio-appium\\\\test\\\\specs\\\\android\\\\edit-note-screen.spec.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\rajee\\\\Downloads\\\\Selenium(Test1To4)\\\\webdriverio-appium\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-static-block\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.23.2:test":{"value":{"code":"\"use strict\";\n\nvar _editNote = _interopRequireDefault(require(\"../../screenObjects/android/edit-note.screen\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n//const AddNoteScreen = require(\"../../screenObjects/android/add-note.screen\");\n//const EditNoteScreen = require(\"../../screenObjects/android/edit-note.screen\");\n//baabel\n\ndescribe('Delete Notes', () => {\n  it.only('delete note, verify trash can', async () => {\n    console.log(\"User in delete note function\");\n    await _editNote.default.skipTutorial();\n    await _editNote.default.saveAndverify(\"Fav TV Show\", \"Naruto\\nTom and Jerry\\nNoddy\");\n    await driver.back();\n    await _editNote.default.getTitle.click();\n    await _editNote.default.more.click();\n    await _editNote.default.delete.click();\n    await driver.acceptAlert();\n    //android.widget.Button[@text='OK']\n    await expect(_editNote.default.getTitle).not.toExist();\n    await _editNote.default.nav.click();\n    await _editNote.default.trashCan.click();\n    await expect(_editNote.default.getTitle).toExist();\n  });\n  it('acces webvie elements', async () => {\n    console.log('user in switch contect funcyion');\n    await _editNote.default.skipTutorial();\n    await _editNote.default.nav.click();\n    //click on the fb link\n    await $('//*[@text=\"Like us on Facebook\"]').click();\n    //get current context\n    console.log(await driver.getContext());\n    //get all the contexts\n    //driver.pause(2000);\n    //console.log(await driver.getContexts());\n\n    //wait until you get multiple contexts\n    await driver.waitUntil(async () => {\n      const contexts = await driver.getContexts();\n      await driver.switchContext(contexts[1]);\n      return contexts.length() > 1;\n    }, {\n      timeout: 3000,\n      timeoutMsg: 'Timed out waiting for another context'\n    });\n    //switch to webview chrome context\n    //await driver.switchContext('WEBVIEW_chrome');\n    //asser thr cover image displayed\n    //await expect(await $('.img.coverPhoto')).toBeDisplayed();\n    //switch back to the native app\n    await driver.switchContext('NATIVE_APP');\n    await driver.back();\n    //await with app stuff\n    await expect(_editNote.default.trashCan).toBeDisplayed();\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZWRpdE5vdGUiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiZGVzY3JpYmUiLCJpdCIsIm9ubHkiLCJjb25zb2xlIiwibG9nIiwiRWRpdE5vdGVTY3JlZW4iLCJza2lwVHV0b3JpYWwiLCJzYXZlQW5kdmVyaWZ5IiwiZHJpdmVyIiwiYmFjayIsImdldFRpdGxlIiwiY2xpY2siLCJtb3JlIiwiZGVsZXRlIiwiYWNjZXB0QWxlcnQiLCJleHBlY3QiLCJub3QiLCJ0b0V4aXN0IiwibmF2IiwidHJhc2hDYW4iLCIkIiwiZ2V0Q29udGV4dCIsIndhaXRVbnRpbCIsImNvbnRleHRzIiwiZ2V0Q29udGV4dHMiLCJzd2l0Y2hDb250ZXh0IiwibGVuZ3RoIiwidGltZW91dCIsInRpbWVvdXRNc2ciLCJ0b0JlRGlzcGxheWVkIl0sInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHJhamVlXFxEb3dubG9hZHNcXFNlbGVuaXVtKFRlc3QxVG80KVxcd2ViZHJpdmVyaW8tYXBwaXVtXFx0ZXN0XFxzcGVjc1xcYW5kcm9pZFxcIiwic291cmNlcyI6WyJlZGl0LW5vdGUtc2NyZWVuLnNwZWMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy9jb25zdCBBZGROb3RlU2NyZWVuID0gcmVxdWlyZShcIi4uLy4uL3NjcmVlbk9iamVjdHMvYW5kcm9pZC9hZGQtbm90ZS5zY3JlZW5cIik7XHJcbi8vY29uc3QgRWRpdE5vdGVTY3JlZW4gPSByZXF1aXJlKFwiLi4vLi4vc2NyZWVuT2JqZWN0cy9hbmRyb2lkL2VkaXQtbm90ZS5zY3JlZW5cIik7XHJcbmltcG9ydCBFZGl0Tm90ZVNjcmVlbiBmcm9tICcuLi8uLi9zY3JlZW5PYmplY3RzL2FuZHJvaWQvZWRpdC1ub3RlLnNjcmVlbic7ICAgLy9iYWFiZWxcclxuXHJcbmRlc2NyaWJlKCdEZWxldGUgTm90ZXMnLCAoKSA9PiB7XHJcbiAgIFxyXG4gaXQub25seSgnZGVsZXRlIG5vdGUsIHZlcmlmeSB0cmFzaCBjYW4nLCBhc3luYyAoKSA9PiB7XHJcbiAgICBjb25zb2xlLmxvZyhcIlVzZXIgaW4gZGVsZXRlIG5vdGUgZnVuY3Rpb25cIilcclxuICAgIGF3YWl0IEVkaXROb3RlU2NyZWVuLnNraXBUdXRvcmlhbCgpO1xyXG4gICAgYXdhaXQgRWRpdE5vdGVTY3JlZW4uc2F2ZUFuZHZlcmlmeShcIkZhdiBUViBTaG93XCIsIFwiTmFydXRvXFxuVG9tIGFuZCBKZXJyeVxcbk5vZGR5XCIpO1xyXG4gICAgYXdhaXQgZHJpdmVyLmJhY2soKTtcclxuICAgIGF3YWl0IEVkaXROb3RlU2NyZWVuLmdldFRpdGxlLmNsaWNrKCk7XHJcbiAgICBhd2FpdCBFZGl0Tm90ZVNjcmVlbi5tb3JlLmNsaWNrKCk7XHJcbiAgICBhd2FpdCBFZGl0Tm90ZVNjcmVlbi5kZWxldGUuY2xpY2soKTtcclxuICAgIGF3YWl0IGRyaXZlci5hY2NlcHRBbGVydCgpO1xyXG4gICAgLy9hbmRyb2lkLndpZGdldC5CdXR0b25bQHRleHQ9J09LJ11cclxuICAgIGF3YWl0IGV4cGVjdChFZGl0Tm90ZVNjcmVlbi5nZXRUaXRsZSkubm90LnRvRXhpc3QoKTtcclxuICAgIGF3YWl0IEVkaXROb3RlU2NyZWVuLm5hdi5jbGljaygpO1xyXG4gICAgYXdhaXQgRWRpdE5vdGVTY3JlZW4udHJhc2hDYW4uY2xpY2soKTtcclxuICAgIGF3YWl0IGV4cGVjdChFZGl0Tm90ZVNjcmVlbi5nZXRUaXRsZSkudG9FeGlzdCgpO1xyXG5cclxuIH0pXHJcblxyXG4gaXQoJ2FjY2VzIHdlYnZpZSBlbGVtZW50cycsIGFzeW5jKCkgPT4ge1xyXG5jb25zb2xlLmxvZygndXNlciBpbiBzd2l0Y2ggY29udGVjdCBmdW5jeWlvbicpXHJcbmF3YWl0IEVkaXROb3RlU2NyZWVuLnNraXBUdXRvcmlhbCgpO1xyXG5hd2FpdCBFZGl0Tm90ZVNjcmVlbi5uYXYuY2xpY2soKTtcclxuLy9jbGljayBvbiB0aGUgZmIgbGlua1xyXG5hd2FpdCAkKCcvLypbQHRleHQ9XCJMaWtlIHVzIG9uIEZhY2Vib29rXCJdJykuY2xpY2soKTtcclxuLy9nZXQgY3VycmVudCBjb250ZXh0XHJcbmNvbnNvbGUubG9nKGF3YWl0IGRyaXZlci5nZXRDb250ZXh0KCkpO1xyXG4vL2dldCBhbGwgdGhlIGNvbnRleHRzXHJcbi8vZHJpdmVyLnBhdXNlKDIwMDApO1xyXG4vL2NvbnNvbGUubG9nKGF3YWl0IGRyaXZlci5nZXRDb250ZXh0cygpKTtcclxuXHJcbi8vd2FpdCB1bnRpbCB5b3UgZ2V0IG11bHRpcGxlIGNvbnRleHRzXHJcbmF3YWl0IGRyaXZlci53YWl0VW50aWwoYXN5bmMoKSA9PiB7XHJcbiAgIGNvbnN0IGNvbnRleHRzID0gYXdhaXQgZHJpdmVyLmdldENvbnRleHRzKCk7XHJcbiAgIGF3YWl0IGRyaXZlci5zd2l0Y2hDb250ZXh0KGNvbnRleHRzWzFdKTtcclxuIHJldHVybiBjb250ZXh0cy5sZW5ndGgoKT4xO1xyXG4gICBcclxufSwge3RpbWVvdXQ6IDMwMDAsIHRpbWVvdXRNc2c6ICdUaW1lZCBvdXQgd2FpdGluZyBmb3IgYW5vdGhlciBjb250ZXh0J30pO1xyXG4vL3N3aXRjaCB0byB3ZWJ2aWV3IGNocm9tZSBjb250ZXh0XHJcbi8vYXdhaXQgZHJpdmVyLnN3aXRjaENvbnRleHQoJ1dFQlZJRVdfY2hyb21lJyk7XHJcbi8vYXNzZXIgdGhyIGNvdmVyIGltYWdlIGRpc3BsYXllZFxyXG4vL2F3YWl0IGV4cGVjdChhd2FpdCAkKCcuaW1nLmNvdmVyUGhvdG8nKSkudG9CZURpc3BsYXllZCgpO1xyXG4gICAvL3N3aXRjaCBiYWNrIHRvIHRoZSBuYXRpdmUgYXBwXHJcbiAgIGF3YWl0IGRyaXZlci5zd2l0Y2hDb250ZXh0KCdOQVRJVkVfQVBQJyk7XHJcbiAgIGF3YWl0IGRyaXZlci5iYWNrKCk7XHJcbiAgIC8vYXdhaXQgd2l0aCBhcHAgc3R1ZmZcclxuICAgYXdhaXQgZXhwZWN0KEVkaXROb3RlU2NyZWVuLnRyYXNoQ2FuKS50b0JlRGlzcGxheWVkKCk7XHJcbiB9KTtcclxufSk7Il0sIm1hcHBpbmdzIjoiOztBQUVBLElBQUFBLFNBQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUEwRSxTQUFBRCx1QkFBQUUsR0FBQSxXQUFBQSxHQUFBLElBQUFBLEdBQUEsQ0FBQUMsVUFBQSxHQUFBRCxHQUFBLEtBQUFFLE9BQUEsRUFBQUYsR0FBQTtBQUYxRTtBQUNBO0FBQzZFOztBQUU3RUcsUUFBUSxDQUFDLGNBQWMsRUFBRSxNQUFNO0VBRTlCQyxFQUFFLENBQUNDLElBQUksQ0FBQywrQkFBK0IsRUFBRSxZQUFZO0lBQ2xEQyxPQUFPLENBQUNDLEdBQUcsQ0FBQyw4QkFBOEIsQ0FBQztJQUMzQyxNQUFNQyxpQkFBYyxDQUFDQyxZQUFZLENBQUMsQ0FBQztJQUNuQyxNQUFNRCxpQkFBYyxDQUFDRSxhQUFhLENBQUMsYUFBYSxFQUFFLDhCQUE4QixDQUFDO0lBQ2pGLE1BQU1DLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDLENBQUM7SUFDbkIsTUFBTUosaUJBQWMsQ0FBQ0ssUUFBUSxDQUFDQyxLQUFLLENBQUMsQ0FBQztJQUNyQyxNQUFNTixpQkFBYyxDQUFDTyxJQUFJLENBQUNELEtBQUssQ0FBQyxDQUFDO0lBQ2pDLE1BQU1OLGlCQUFjLENBQUNRLE1BQU0sQ0FBQ0YsS0FBSyxDQUFDLENBQUM7SUFDbkMsTUFBTUgsTUFBTSxDQUFDTSxXQUFXLENBQUMsQ0FBQztJQUMxQjtJQUNBLE1BQU1DLE1BQU0sQ0FBQ1YsaUJBQWMsQ0FBQ0ssUUFBUSxDQUFDLENBQUNNLEdBQUcsQ0FBQ0MsT0FBTyxDQUFDLENBQUM7SUFDbkQsTUFBTVosaUJBQWMsQ0FBQ2EsR0FBRyxDQUFDUCxLQUFLLENBQUMsQ0FBQztJQUNoQyxNQUFNTixpQkFBYyxDQUFDYyxRQUFRLENBQUNSLEtBQUssQ0FBQyxDQUFDO0lBQ3JDLE1BQU1JLE1BQU0sQ0FBQ1YsaUJBQWMsQ0FBQ0ssUUFBUSxDQUFDLENBQUNPLE9BQU8sQ0FBQyxDQUFDO0VBRWxELENBQUMsQ0FBQztFQUVGaEIsRUFBRSxDQUFDLHVCQUF1QixFQUFFLFlBQVc7SUFDeENFLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLGlDQUFpQyxDQUFDO0lBQzlDLE1BQU1DLGlCQUFjLENBQUNDLFlBQVksQ0FBQyxDQUFDO0lBQ25DLE1BQU1ELGlCQUFjLENBQUNhLEdBQUcsQ0FBQ1AsS0FBSyxDQUFDLENBQUM7SUFDaEM7SUFDQSxNQUFNUyxDQUFDLENBQUMsa0NBQWtDLENBQUMsQ0FBQ1QsS0FBSyxDQUFDLENBQUM7SUFDbkQ7SUFDQVIsT0FBTyxDQUFDQyxHQUFHLENBQUMsTUFBTUksTUFBTSxDQUFDYSxVQUFVLENBQUMsQ0FBQyxDQUFDO0lBQ3RDO0lBQ0E7SUFDQTs7SUFFQTtJQUNBLE1BQU1iLE1BQU0sQ0FBQ2MsU0FBUyxDQUFDLFlBQVc7TUFDL0IsTUFBTUMsUUFBUSxHQUFHLE1BQU1mLE1BQU0sQ0FBQ2dCLFdBQVcsQ0FBQyxDQUFDO01BQzNDLE1BQU1oQixNQUFNLENBQUNpQixhQUFhLENBQUNGLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztNQUN6QyxPQUFPQSxRQUFRLENBQUNHLE1BQU0sQ0FBQyxDQUFDLEdBQUMsQ0FBQztJQUUzQixDQUFDLEVBQUU7TUFBQ0MsT0FBTyxFQUFFLElBQUk7TUFBRUMsVUFBVSxFQUFFO0lBQXVDLENBQUMsQ0FBQztJQUN4RTtJQUNBO0lBQ0E7SUFDQTtJQUNHO0lBQ0EsTUFBTXBCLE1BQU0sQ0FBQ2lCLGFBQWEsQ0FBQyxZQUFZLENBQUM7SUFDeEMsTUFBTWpCLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDLENBQUM7SUFDbkI7SUFDQSxNQUFNTSxNQUFNLENBQUNWLGlCQUFjLENBQUNjLFFBQVEsQ0FBQyxDQUFDVSxhQUFhLENBQUMsQ0FBQztFQUN2RCxDQUFDLENBQUM7QUFDSCxDQUFDLENBQUMifQ==","map":{"version":3,"names":["_editNote","_interopRequireDefault","require","obj","__esModule","default","describe","it","only","console","log","EditNoteScreen","skipTutorial","saveAndverify","driver","back","getTitle","click","more","delete","acceptAlert","expect","not","toExist","nav","trashCan","$","getContext","waitUntil","contexts","getContexts","switchContext","length","timeout","timeoutMsg","toBeDisplayed"],"sourceRoot":"C:\\Users\\rajee\\Downloads\\Selenium(Test1To4)\\webdriverio-appium\\test\\specs\\android\\","sources":["edit-note-screen.spec.js"],"sourcesContent":["//const AddNoteScreen = require(\"../../screenObjects/android/add-note.screen\");\r\n//const EditNoteScreen = require(\"../../screenObjects/android/edit-note.screen\");\r\nimport EditNoteScreen from '../../screenObjects/android/edit-note.screen';   //baabel\r\n\r\ndescribe('Delete Notes', () => {\r\n   \r\n it.only('delete note, verify trash can', async () => {\r\n    console.log(\"User in delete note function\")\r\n    await EditNoteScreen.skipTutorial();\r\n    await EditNoteScreen.saveAndverify(\"Fav TV Show\", \"Naruto\\nTom and Jerry\\nNoddy\");\r\n    await driver.back();\r\n    await EditNoteScreen.getTitle.click();\r\n    await EditNoteScreen.more.click();\r\n    await EditNoteScreen.delete.click();\r\n    await driver.acceptAlert();\r\n    //android.widget.Button[@text='OK']\r\n    await expect(EditNoteScreen.getTitle).not.toExist();\r\n    await EditNoteScreen.nav.click();\r\n    await EditNoteScreen.trashCan.click();\r\n    await expect(EditNoteScreen.getTitle).toExist();\r\n\r\n })\r\n\r\n it('acces webvie elements', async() => {\r\nconsole.log('user in switch contect funcyion')\r\nawait EditNoteScreen.skipTutorial();\r\nawait EditNoteScreen.nav.click();\r\n//click on the fb link\r\nawait $('//*[@text=\"Like us on Facebook\"]').click();\r\n//get current context\r\nconsole.log(await driver.getContext());\r\n//get all the contexts\r\n//driver.pause(2000);\r\n//console.log(await driver.getContexts());\r\n\r\n//wait until you get multiple contexts\r\nawait driver.waitUntil(async() => {\r\n   const contexts = await driver.getContexts();\r\n   await driver.switchContext(contexts[1]);\r\n return contexts.length()>1;\r\n   \r\n}, {timeout: 3000, timeoutMsg: 'Timed out waiting for another context'});\r\n//switch to webview chrome context\r\n//await driver.switchContext('WEBVIEW_chrome');\r\n//asser thr cover image displayed\r\n//await expect(await $('.img.coverPhoto')).toBeDisplayed();\r\n   //switch back to the native app\r\n   await driver.switchContext('NATIVE_APP');\r\n   await driver.back();\r\n   //await with app stuff\r\n   await expect(EditNoteScreen.trashCan).toBeDisplayed();\r\n });\r\n});"],"mappings":";;AAEA,IAAAA,SAAA,GAAAC,sBAAA,CAAAC,OAAA;AAA0E,SAAAD,uBAAAE,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAF1E;AACA;AAC6E;;AAE7EG,QAAQ,CAAC,cAAc,EAAE,MAAM;EAE9BC,EAAE,CAACC,IAAI,CAAC,+BAA+B,EAAE,YAAY;IAClDC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC3C,MAAMC,iBAAc,CAACC,YAAY,CAAC,CAAC;IACnC,MAAMD,iBAAc,CAACE,aAAa,CAAC,aAAa,EAAE,8BAA8B,CAAC;IACjF,MAAMC,MAAM,CAACC,IAAI,CAAC,CAAC;IACnB,MAAMJ,iBAAc,CAACK,QAAQ,CAACC,KAAK,CAAC,CAAC;IACrC,MAAMN,iBAAc,CAACO,IAAI,CAACD,KAAK,CAAC,CAAC;IACjC,MAAMN,iBAAc,CAACQ,MAAM,CAACF,KAAK,CAAC,CAAC;IACnC,MAAMH,MAAM,CAACM,WAAW,CAAC,CAAC;IAC1B;IACA,MAAMC,MAAM,CAACV,iBAAc,CAACK,QAAQ,CAAC,CAACM,GAAG,CAACC,OAAO,CAAC,CAAC;IACnD,MAAMZ,iBAAc,CAACa,GAAG,CAACP,KAAK,CAAC,CAAC;IAChC,MAAMN,iBAAc,CAACc,QAAQ,CAACR,KAAK,CAAC,CAAC;IACrC,MAAMI,MAAM,CAACV,iBAAc,CAACK,QAAQ,CAAC,CAACO,OAAO,CAAC,CAAC;EAElD,CAAC,CAAC;EAEFhB,EAAE,CAAC,uBAAuB,EAAE,YAAW;IACxCE,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;IAC9C,MAAMC,iBAAc,CAACC,YAAY,CAAC,CAAC;IACnC,MAAMD,iBAAc,CAACa,GAAG,CAACP,KAAK,CAAC,CAAC;IAChC;IACA,MAAMS,CAAC,CAAC,kCAAkC,CAAC,CAACT,KAAK,CAAC,CAAC;IACnD;IACAR,OAAO,CAACC,GAAG,CAAC,MAAMI,MAAM,CAACa,UAAU,CAAC,CAAC,CAAC;IACtC;IACA;IACA;;IAEA;IACA,MAAMb,MAAM,CAACc,SAAS,CAAC,YAAW;MAC/B,MAAMC,QAAQ,GAAG,MAAMf,MAAM,CAACgB,WAAW,CAAC,CAAC;MAC3C,MAAMhB,MAAM,CAACiB,aAAa,CAACF,QAAQ,CAAC,CAAC,CAAC,CAAC;MACzC,OAAOA,QAAQ,CAACG,MAAM,CAAC,CAAC,GAAC,CAAC;IAE3B,CAAC,EAAE;MAACC,OAAO,EAAE,IAAI;MAAEC,UAAU,EAAE;IAAuC,CAAC,CAAC;IACxE;IACA;IACA;IACA;IACG;IACA,MAAMpB,MAAM,CAACiB,aAAa,CAAC,YAAY,CAAC;IACxC,MAAMjB,MAAM,CAACC,IAAI,CAAC,CAAC;IACnB;IACA,MAAMM,MAAM,CAACV,iBAAc,CAACc,QAAQ,CAAC,CAACU,aAAa,CAAC,CAAC;EACvD,CAAC,CAAC;AACH,CAAC,CAAC"}},"mtime":1699939448315},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\rajee\\\\Downloads\\\\Selenium(Test1To4)\\\\webdriverio-appium\\\\test\\\\screenObjects\\\\android\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\rajee\\\\Downloads\\\\Selenium(Test1To4)\\\\webdriverio-appium\",\"filename\":\"C:\\\\Users\\\\rajee\\\\Downloads\\\\Selenium(Test1To4)\\\\webdriverio-appium\\\\test\\\\screenObjects\\\\android\\\\edit-note.screen.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\rajee\\\\Downloads\\\\Selenium(Test1To4)\\\\webdriverio-appium\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-static-block\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.23.2:test":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nconst AddNoteScreen = require(\"../../screenObjects/android/add-note.screen\");\nclass EditNoteScreen {\n  get getTitle() {\n    return $('//android.widget.TextView[@text=\"Fav TV Show\"]');\n  }\n  get more() {\n    return $('//android.widget.ImageButton[@content-desc=\"More\"]');\n  }\n  get delete() {\n    return $('//android.widget.TextView[@text=\"Delete\"]');\n  }\n  get nav() {\n    return $('//android.widget.ImageButton[@resource-id=\"com.socialnmobile.dictapps.notepad.color.note:id/icon_nav\"]');\n  }\n  get trashCan() {\n    return $('//android.widget.TextView[@text=\"Trash Can\"]');\n  }\n  async skipTutorial() {\n    console.log('User in skip tutorial function');\n    await AddNoteScreen.skipBtn.click();\n    await expect(AddNoteScreen.textNote).toBeDisplayed();\n  }\n  async saveAndverify(title, body) {\n    console.log('User in saveVerify function');\n    await AddNoteScreen.textNote.click();\n    await AddNoteScreen.text.click();\n    await expect(AddNoteScreen.editing).toBeDisplayed();\n    //add note title\n    await AddNoteScreen.editTitle.addValue(title);\n    await AddNoteScreen.editnote.addValue(body);\n    await AddNoteScreen.saveNote();\n    await expect(AddNoteScreen.editButton).toBeDisplayed();\n    await expect(AddNoteScreen.viewNote).toHaveText(body);\n  }\n}\n\n//module.exports = new EditNoteScreen();\nvar _default = exports.default = new EditNoteScreen(); //babel\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJBZGROb3RlU2NyZWVuIiwicmVxdWlyZSIsIkVkaXROb3RlU2NyZWVuIiwiZ2V0VGl0bGUiLCIkIiwibW9yZSIsImRlbGV0ZSIsIm5hdiIsInRyYXNoQ2FuIiwic2tpcFR1dG9yaWFsIiwiY29uc29sZSIsImxvZyIsInNraXBCdG4iLCJjbGljayIsImV4cGVjdCIsInRleHROb3RlIiwidG9CZURpc3BsYXllZCIsInNhdmVBbmR2ZXJpZnkiLCJ0aXRsZSIsImJvZHkiLCJ0ZXh0IiwiZWRpdGluZyIsImVkaXRUaXRsZSIsImFkZFZhbHVlIiwiZWRpdG5vdGUiLCJzYXZlTm90ZSIsImVkaXRCdXR0b24iLCJ2aWV3Tm90ZSIsInRvSGF2ZVRleHQiLCJfZGVmYXVsdCIsImV4cG9ydHMiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHJhamVlXFxEb3dubG9hZHNcXFNlbGVuaXVtKFRlc3QxVG80KVxcd2ViZHJpdmVyaW8tYXBwaXVtXFx0ZXN0XFxzY3JlZW5PYmplY3RzXFxhbmRyb2lkXFwiLCJzb3VyY2VzIjpbImVkaXQtbm90ZS5zY3JlZW4uanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgQWRkTm90ZVNjcmVlbiA9IHJlcXVpcmUoXCIuLi8uLi9zY3JlZW5PYmplY3RzL2FuZHJvaWQvYWRkLW5vdGUuc2NyZWVuXCIpO1xyXG5jbGFzcyBFZGl0Tm90ZVNjcmVlbntcclxuXHJcbiAgICBnZXQgZ2V0VGl0bGUoKXtcclxuICAgICAgICByZXR1cm4gJCgnLy9hbmRyb2lkLndpZGdldC5UZXh0Vmlld1tAdGV4dD1cIkZhdiBUViBTaG93XCJdJyk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIGdldCBtb3JlKCl7XHJcbiAgICAgICAgcmV0dXJuICAkKCcvL2FuZHJvaWQud2lkZ2V0LkltYWdlQnV0dG9uW0Bjb250ZW50LWRlc2M9XCJNb3JlXCJdJyk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIGdldCBkZWxldGUoKXtcclxuICAgICAgICByZXR1cm4gJCgnLy9hbmRyb2lkLndpZGdldC5UZXh0Vmlld1tAdGV4dD1cIkRlbGV0ZVwiXScpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBnZXQgbmF2KCl7XHJcbiAgICAgICAgcmV0dXJuICQoJy8vYW5kcm9pZC53aWRnZXQuSW1hZ2VCdXR0b25bQHJlc291cmNlLWlkPVwiY29tLnNvY2lhbG5tb2JpbGUuZGljdGFwcHMubm90ZXBhZC5jb2xvci5ub3RlOmlkL2ljb25fbmF2XCJdJyk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIGdldCB0cmFzaENhbigpe1xyXG4gICAgICAgIHJldHVybiAkKCcvL2FuZHJvaWQud2lkZ2V0LlRleHRWaWV3W0B0ZXh0PVwiVHJhc2ggQ2FuXCJdJyk7XHJcbiAgICB9ICAgIFxyXG5cclxuICAgIGFzeW5jIHNraXBUdXRvcmlhbCgpe1xyXG5cclxuICAgICAgICBjb25zb2xlLmxvZygnVXNlciBpbiBza2lwIHR1dG9yaWFsIGZ1bmN0aW9uJylcclxuICAgICAgICBhd2FpdCBBZGROb3RlU2NyZWVuLnNraXBCdG4uY2xpY2soKTtcclxuICAgICAgICBhd2FpdCBleHBlY3QoQWRkTm90ZVNjcmVlbi50ZXh0Tm90ZSkudG9CZURpc3BsYXllZCgpO1xyXG4gICAgfVxyXG5cclxuICAgIGFzeW5jIHNhdmVBbmR2ZXJpZnkodGl0bGUsIGJvZHkpe1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdVc2VyIGluIHNhdmVWZXJpZnkgZnVuY3Rpb24nKVxyXG4gICAgICAgIGF3YWl0IEFkZE5vdGVTY3JlZW4udGV4dE5vdGUuY2xpY2soKTtcclxuICAgICAgICBhd2FpdCBBZGROb3RlU2NyZWVuLnRleHQuY2xpY2soKTtcclxuICAgICAgICBhd2FpdCBleHBlY3QoQWRkTm90ZVNjcmVlbi5lZGl0aW5nKS50b0JlRGlzcGxheWVkKCk7XHJcbiAgICAgICAgLy9hZGQgbm90ZSB0aXRsZVxyXG4gICAgICAgIGF3YWl0IEFkZE5vdGVTY3JlZW4uZWRpdFRpdGxlLmFkZFZhbHVlKHRpdGxlKTtcclxuICAgICAgICBhd2FpdCBBZGROb3RlU2NyZWVuLmVkaXRub3RlLmFkZFZhbHVlKGJvZHkpO1xyXG4gICAgICAgIGF3YWl0IEFkZE5vdGVTY3JlZW4uc2F2ZU5vdGUoKTtcclxuICAgICAgICBhd2FpdCBleHBlY3QoQWRkTm90ZVNjcmVlbi5lZGl0QnV0dG9uKS50b0JlRGlzcGxheWVkKCk7XHJcbiAgICAgICAgYXdhaXQgZXhwZWN0KEFkZE5vdGVTY3JlZW4udmlld05vdGUpLnRvSGF2ZVRleHQoYm9keSk7XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG4vL21vZHVsZS5leHBvcnRzID0gbmV3IEVkaXROb3RlU2NyZWVuKCk7XHJcbmV4cG9ydCBkZWZhdWx0IG5ldyBFZGl0Tm90ZVNjcmVlbigpOyAvL2JhYmVsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxNQUFNQSxhQUFhLEdBQUdDLE9BQU8sQ0FBQyw2Q0FBNkMsQ0FBQztBQUM1RSxNQUFNQyxjQUFjO0VBRWhCLElBQUlDLFFBQVFBLENBQUEsRUFBRTtJQUNWLE9BQU9DLENBQUMsQ0FBQyxnREFBZ0QsQ0FBQztFQUM5RDtFQUVBLElBQUlDLElBQUlBLENBQUEsRUFBRTtJQUNOLE9BQVFELENBQUMsQ0FBQyxvREFBb0QsQ0FBQztFQUNuRTtFQUVBLElBQUlFLE1BQU1BLENBQUEsRUFBRTtJQUNSLE9BQU9GLENBQUMsQ0FBQywyQ0FBMkMsQ0FBQztFQUN6RDtFQUVBLElBQUlHLEdBQUdBLENBQUEsRUFBRTtJQUNMLE9BQU9ILENBQUMsQ0FBQyx3R0FBd0csQ0FBQztFQUN0SDtFQUVBLElBQUlJLFFBQVFBLENBQUEsRUFBRTtJQUNWLE9BQU9KLENBQUMsQ0FBQyw4Q0FBOEMsQ0FBQztFQUM1RDtFQUVBLE1BQU1LLFlBQVlBLENBQUEsRUFBRTtJQUVoQkMsT0FBTyxDQUFDQyxHQUFHLENBQUMsZ0NBQWdDLENBQUM7SUFDN0MsTUFBTVgsYUFBYSxDQUFDWSxPQUFPLENBQUNDLEtBQUssQ0FBQyxDQUFDO0lBQ25DLE1BQU1DLE1BQU0sQ0FBQ2QsYUFBYSxDQUFDZSxRQUFRLENBQUMsQ0FBQ0MsYUFBYSxDQUFDLENBQUM7RUFDeEQ7RUFFQSxNQUFNQyxhQUFhQSxDQUFDQyxLQUFLLEVBQUVDLElBQUksRUFBQztJQUM1QlQsT0FBTyxDQUFDQyxHQUFHLENBQUMsNkJBQTZCLENBQUM7SUFDMUMsTUFBTVgsYUFBYSxDQUFDZSxRQUFRLENBQUNGLEtBQUssQ0FBQyxDQUFDO0lBQ3BDLE1BQU1iLGFBQWEsQ0FBQ29CLElBQUksQ0FBQ1AsS0FBSyxDQUFDLENBQUM7SUFDaEMsTUFBTUMsTUFBTSxDQUFDZCxhQUFhLENBQUNxQixPQUFPLENBQUMsQ0FBQ0wsYUFBYSxDQUFDLENBQUM7SUFDbkQ7SUFDQSxNQUFNaEIsYUFBYSxDQUFDc0IsU0FBUyxDQUFDQyxRQUFRLENBQUNMLEtBQUssQ0FBQztJQUM3QyxNQUFNbEIsYUFBYSxDQUFDd0IsUUFBUSxDQUFDRCxRQUFRLENBQUNKLElBQUksQ0FBQztJQUMzQyxNQUFNbkIsYUFBYSxDQUFDeUIsUUFBUSxDQUFDLENBQUM7SUFDOUIsTUFBTVgsTUFBTSxDQUFDZCxhQUFhLENBQUMwQixVQUFVLENBQUMsQ0FBQ1YsYUFBYSxDQUFDLENBQUM7SUFDdEQsTUFBTUYsTUFBTSxDQUFDZCxhQUFhLENBQUMyQixRQUFRLENBQUMsQ0FBQ0MsVUFBVSxDQUFDVCxJQUFJLENBQUM7RUFDekQ7QUFFSjs7QUFFQTtBQUFBLElBQUFVLFFBQUEsR0FBQUMsT0FBQSxDQUFBQyxPQUFBLEdBQ2UsSUFBSTdCLGNBQWMsQ0FBQyxDQUFDLEVBQUUifQ==","map":{"version":3,"names":["AddNoteScreen","require","EditNoteScreen","getTitle","$","more","delete","nav","trashCan","skipTutorial","console","log","skipBtn","click","expect","textNote","toBeDisplayed","saveAndverify","title","body","text","editing","editTitle","addValue","editnote","saveNote","editButton","viewNote","toHaveText","_default","exports","default"],"sourceRoot":"C:\\Users\\rajee\\Downloads\\Selenium(Test1To4)\\webdriverio-appium\\test\\screenObjects\\android\\","sources":["edit-note.screen.js"],"sourcesContent":["const AddNoteScreen = require(\"../../screenObjects/android/add-note.screen\");\r\nclass EditNoteScreen{\r\n\r\n    get getTitle(){\r\n        return $('//android.widget.TextView[@text=\"Fav TV Show\"]');\r\n    }\r\n    \r\n    get more(){\r\n        return  $('//android.widget.ImageButton[@content-desc=\"More\"]');\r\n    }\r\n    \r\n    get delete(){\r\n        return $('//android.widget.TextView[@text=\"Delete\"]');\r\n    }\r\n    \r\n    get nav(){\r\n        return $('//android.widget.ImageButton[@resource-id=\"com.socialnmobile.dictapps.notepad.color.note:id/icon_nav\"]');\r\n    }\r\n    \r\n    get trashCan(){\r\n        return $('//android.widget.TextView[@text=\"Trash Can\"]');\r\n    }    \r\n\r\n    async skipTutorial(){\r\n\r\n        console.log('User in skip tutorial function')\r\n        await AddNoteScreen.skipBtn.click();\r\n        await expect(AddNoteScreen.textNote).toBeDisplayed();\r\n    }\r\n\r\n    async saveAndverify(title, body){\r\n        console.log('User in saveVerify function')\r\n        await AddNoteScreen.textNote.click();\r\n        await AddNoteScreen.text.click();\r\n        await expect(AddNoteScreen.editing).toBeDisplayed();\r\n        //add note title\r\n        await AddNoteScreen.editTitle.addValue(title);\r\n        await AddNoteScreen.editnote.addValue(body);\r\n        await AddNoteScreen.saveNote();\r\n        await expect(AddNoteScreen.editButton).toBeDisplayed();\r\n        await expect(AddNoteScreen.viewNote).toHaveText(body);\r\n    }\r\n\r\n}\r\n\r\n//module.exports = new EditNoteScreen();\r\nexport default new EditNoteScreen(); //babel"],"mappings":";;;;;;AAAA,MAAMA,aAAa,GAAGC,OAAO,CAAC,6CAA6C,CAAC;AAC5E,MAAMC,cAAc;EAEhB,IAAIC,QAAQA,CAAA,EAAE;IACV,OAAOC,CAAC,CAAC,gDAAgD,CAAC;EAC9D;EAEA,IAAIC,IAAIA,CAAA,EAAE;IACN,OAAQD,CAAC,CAAC,oDAAoD,CAAC;EACnE;EAEA,IAAIE,MAAMA,CAAA,EAAE;IACR,OAAOF,CAAC,CAAC,2CAA2C,CAAC;EACzD;EAEA,IAAIG,GAAGA,CAAA,EAAE;IACL,OAAOH,CAAC,CAAC,wGAAwG,CAAC;EACtH;EAEA,IAAII,QAAQA,CAAA,EAAE;IACV,OAAOJ,CAAC,CAAC,8CAA8C,CAAC;EAC5D;EAEA,MAAMK,YAAYA,CAAA,EAAE;IAEhBC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAC7C,MAAMX,aAAa,CAACY,OAAO,CAACC,KAAK,CAAC,CAAC;IACnC,MAAMC,MAAM,CAACd,aAAa,CAACe,QAAQ,CAAC,CAACC,aAAa,CAAC,CAAC;EACxD;EAEA,MAAMC,aAAaA,CAACC,KAAK,EAAEC,IAAI,EAAC;IAC5BT,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC1C,MAAMX,aAAa,CAACe,QAAQ,CAACF,KAAK,CAAC,CAAC;IACpC,MAAMb,aAAa,CAACoB,IAAI,CAACP,KAAK,CAAC,CAAC;IAChC,MAAMC,MAAM,CAACd,aAAa,CAACqB,OAAO,CAAC,CAACL,aAAa,CAAC,CAAC;IACnD;IACA,MAAMhB,aAAa,CAACsB,SAAS,CAACC,QAAQ,CAACL,KAAK,CAAC;IAC7C,MAAMlB,aAAa,CAACwB,QAAQ,CAACD,QAAQ,CAACJ,IAAI,CAAC;IAC3C,MAAMnB,aAAa,CAACyB,QAAQ,CAAC,CAAC;IAC9B,MAAMX,MAAM,CAACd,aAAa,CAAC0B,UAAU,CAAC,CAACV,aAAa,CAAC,CAAC;IACtD,MAAMF,MAAM,CAACd,aAAa,CAAC2B,QAAQ,CAAC,CAACC,UAAU,CAACT,IAAI,CAAC;EACzD;AAEJ;;AAEA;AAAA,IAAAU,QAAA,GAAAC,OAAA,CAAAC,OAAA,GACe,IAAI7B,cAAc,CAAC,CAAC,EAAE"}},"mtime":1699542739475},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\rajee\\\\Downloads\\\\Selenium(Test1To4)\\\\webdriverio-appium\\\\test\\\\screenObjects\\\\android\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\rajee\\\\Downloads\\\\Selenium(Test1To4)\\\\webdriverio-appium\",\"filename\":\"C:\\\\Users\\\\rajee\\\\Downloads\\\\Selenium(Test1To4)\\\\webdriverio-appium\\\\test\\\\screenObjects\\\\android\\\\add-note.screen.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\rajee\\\\Downloads\\\\Selenium(Test1To4)\\\\webdriverio-appium\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-static-block\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.23.2:test":{"value":{"code":"\"use strict\";\n\nclass AddNoteScreen {\n  get skipBtn() {\n    return $('android.widget.Button');\n  }\n  get textNote() {\n    return $('//android.widget.TextView[@text=\\'Add note\\']');\n  }\n  get text() {\n    return $('//android.widget.TextView[@text=\\'Text\\']');\n  }\n  get editing() {\n    return $('//android.widget.TextView[@text=\\'Editing\\']');\n  }\n  get editTitle() {\n    return $('//android.widget.EditText[@resource-id=\\'com.socialnmobile.dictapps.notepad.color.note:id/edit_title\\']');\n  }\n  get editnote() {\n    return $('//android.widget.EditText[@resource-id=\\'com.socialnmobile.dictapps.notepad.color.note:id/edit_note\\']');\n  }\n  get editButton() {\n    return $('//android.widget.ImageButton[@resource-id=\\'com.socialnmobile.dictapps.notepad.color.note:id/edit_btn\\']');\n  }\n  get viewNote() {\n    return $('//android.widget.TextView[@resource-id=\\'com.socialnmobile.dictapps.notepad.color.note:id/view_note\\']');\n  }\n  get getTitle() {\n    return $('//android.widget.TextView[@text=\"Fav Animie List\"]');\n  }\n  get more() {\n    return $('//android.widget.ImageButton[@content-desc=\"More\"]');\n  }\n  get delete() {\n    return $('//android.widget.TextView[@text=\"Delete\"]');\n  }\n  get nav() {\n    return $('//android.widget.ImageButton[@resource-id=\"com.socialnmobile.dictapps.notepad.color.note:id/icon_nav\"]');\n  }\n  get trashCan() {\n    return $('//android.widget.TextView[@text=\"Trash Can\"]');\n  }\n  async saveNote() {\n    await driver.back();\n    await driver.back();\n  }\n}\n\n//export default new AddNoteScreen();\nmodule.exports = new AddNoteScreen();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJBZGROb3RlU2NyZWVuIiwic2tpcEJ0biIsIiQiLCJ0ZXh0Tm90ZSIsInRleHQiLCJlZGl0aW5nIiwiZWRpdFRpdGxlIiwiZWRpdG5vdGUiLCJlZGl0QnV0dG9uIiwidmlld05vdGUiLCJnZXRUaXRsZSIsIm1vcmUiLCJkZWxldGUiLCJuYXYiLCJ0cmFzaENhbiIsInNhdmVOb3RlIiwiZHJpdmVyIiwiYmFjayIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xccmFqZWVcXERvd25sb2Fkc1xcU2VsZW5pdW0oVGVzdDFUbzQpXFx3ZWJkcml2ZXJpby1hcHBpdW1cXHRlc3RcXHNjcmVlbk9iamVjdHNcXGFuZHJvaWRcXCIsInNvdXJjZXMiOlsiYWRkLW5vdGUuc2NyZWVuLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNsYXNzIEFkZE5vdGVTY3JlZW57XHJcbmdldCBza2lwQnRuKCl7XHJcbiAgICByZXR1cm4gJCgnYW5kcm9pZC53aWRnZXQuQnV0dG9uJyk7XHJcbn1cclxuXHJcbmdldCB0ZXh0Tm90ZSgpe1xyXG4gICAgcmV0dXJuICQoJy8vYW5kcm9pZC53aWRnZXQuVGV4dFZpZXdbQHRleHQ9XFwnQWRkIG5vdGVcXCddJyk7XHJcbn1cclxuXHJcbmdldCB0ZXh0KCl7XHJcbiAgICByZXR1cm4gJCgnLy9hbmRyb2lkLndpZGdldC5UZXh0Vmlld1tAdGV4dD1cXCdUZXh0XFwnXScpO1xyXG59XHJcblxyXG5nZXQgZWRpdGluZygpe1xyXG4gICAgcmV0dXJuICQoJy8vYW5kcm9pZC53aWRnZXQuVGV4dFZpZXdbQHRleHQ9XFwnRWRpdGluZ1xcJ10nKTtcclxufVxyXG5cclxuZ2V0IGVkaXRUaXRsZSgpe1xyXG4gICAgcmV0dXJuICQoJy8vYW5kcm9pZC53aWRnZXQuRWRpdFRleHRbQHJlc291cmNlLWlkPVxcJ2NvbS5zb2NpYWxubW9iaWxlLmRpY3RhcHBzLm5vdGVwYWQuY29sb3Iubm90ZTppZC9lZGl0X3RpdGxlXFwnXScpO1xyXG59XHJcblxyXG5nZXQgZWRpdG5vdGUoKXtcclxuICAgIHJldHVybiAkKCcvL2FuZHJvaWQud2lkZ2V0LkVkaXRUZXh0W0ByZXNvdXJjZS1pZD1cXCdjb20uc29jaWFsbm1vYmlsZS5kaWN0YXBwcy5ub3RlcGFkLmNvbG9yLm5vdGU6aWQvZWRpdF9ub3RlXFwnXScpO1xyXG59XHJcblxyXG5nZXQgZWRpdEJ1dHRvbigpe1xyXG4gICAgcmV0dXJuICQoJy8vYW5kcm9pZC53aWRnZXQuSW1hZ2VCdXR0b25bQHJlc291cmNlLWlkPVxcJ2NvbS5zb2NpYWxubW9iaWxlLmRpY3RhcHBzLm5vdGVwYWQuY29sb3Iubm90ZTppZC9lZGl0X2J0blxcJ10nKTtcclxufVxyXG5cclxuZ2V0IHZpZXdOb3RlKCl7XHJcbiAgICByZXR1cm4gJCgnLy9hbmRyb2lkLndpZGdldC5UZXh0Vmlld1tAcmVzb3VyY2UtaWQ9XFwnY29tLnNvY2lhbG5tb2JpbGUuZGljdGFwcHMubm90ZXBhZC5jb2xvci5ub3RlOmlkL3ZpZXdfbm90ZVxcJ10nKTtcclxufVxyXG5cclxuZ2V0IGdldFRpdGxlKCl7XHJcbiAgICByZXR1cm4gJCgnLy9hbmRyb2lkLndpZGdldC5UZXh0Vmlld1tAdGV4dD1cIkZhdiBBbmltaWUgTGlzdFwiXScpO1xyXG59XHJcblxyXG5nZXQgbW9yZSgpe1xyXG4gICAgcmV0dXJuICAkKCcvL2FuZHJvaWQud2lkZ2V0LkltYWdlQnV0dG9uW0Bjb250ZW50LWRlc2M9XCJNb3JlXCJdJyk7XHJcbn1cclxuXHJcbmdldCBkZWxldGUoKXtcclxuICAgIHJldHVybiAkKCcvL2FuZHJvaWQud2lkZ2V0LlRleHRWaWV3W0B0ZXh0PVwiRGVsZXRlXCJdJyk7XHJcbn1cclxuXHJcbmdldCBuYXYoKXtcclxuICAgIHJldHVybiAkKCcvL2FuZHJvaWQud2lkZ2V0LkltYWdlQnV0dG9uW0ByZXNvdXJjZS1pZD1cImNvbS5zb2NpYWxubW9iaWxlLmRpY3RhcHBzLm5vdGVwYWQuY29sb3Iubm90ZTppZC9pY29uX25hdlwiXScpO1xyXG59XHJcblxyXG5nZXQgdHJhc2hDYW4oKXtcclxuICAgIHJldHVybiAkKCcvL2FuZHJvaWQud2lkZ2V0LlRleHRWaWV3W0B0ZXh0PVwiVHJhc2ggQ2FuXCJdJyk7XHJcbn1cclxuXHJcbmFzeW5jIHNhdmVOb3RlKCl7XHJcbiAgICBhd2FpdCBkcml2ZXIuYmFjaygpO1xyXG4gICAgICAgIGF3YWl0IGRyaXZlci5iYWNrKCk7XHJcbn1cclxuXHJcbn1cclxuXHJcbi8vZXhwb3J0IGRlZmF1bHQgbmV3IEFkZE5vdGVTY3JlZW4oKTtcclxubW9kdWxlLmV4cG9ydHMgPSBuZXcgQWRkTm90ZVNjcmVlbigpOyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxNQUFNQSxhQUFhO0VBQ25CLElBQUlDLE9BQU9BLENBQUEsRUFBRTtJQUNULE9BQU9DLENBQUMsQ0FBQyx1QkFBdUIsQ0FBQztFQUNyQztFQUVBLElBQUlDLFFBQVFBLENBQUEsRUFBRTtJQUNWLE9BQU9ELENBQUMsQ0FBQywrQ0FBK0MsQ0FBQztFQUM3RDtFQUVBLElBQUlFLElBQUlBLENBQUEsRUFBRTtJQUNOLE9BQU9GLENBQUMsQ0FBQywyQ0FBMkMsQ0FBQztFQUN6RDtFQUVBLElBQUlHLE9BQU9BLENBQUEsRUFBRTtJQUNULE9BQU9ILENBQUMsQ0FBQyw4Q0FBOEMsQ0FBQztFQUM1RDtFQUVBLElBQUlJLFNBQVNBLENBQUEsRUFBRTtJQUNYLE9BQU9KLENBQUMsQ0FBQyx5R0FBeUcsQ0FBQztFQUN2SDtFQUVBLElBQUlLLFFBQVFBLENBQUEsRUFBRTtJQUNWLE9BQU9MLENBQUMsQ0FBQyx3R0FBd0csQ0FBQztFQUN0SDtFQUVBLElBQUlNLFVBQVVBLENBQUEsRUFBRTtJQUNaLE9BQU9OLENBQUMsQ0FBQywwR0FBMEcsQ0FBQztFQUN4SDtFQUVBLElBQUlPLFFBQVFBLENBQUEsRUFBRTtJQUNWLE9BQU9QLENBQUMsQ0FBQyx3R0FBd0csQ0FBQztFQUN0SDtFQUVBLElBQUlRLFFBQVFBLENBQUEsRUFBRTtJQUNWLE9BQU9SLENBQUMsQ0FBQyxvREFBb0QsQ0FBQztFQUNsRTtFQUVBLElBQUlTLElBQUlBLENBQUEsRUFBRTtJQUNOLE9BQVFULENBQUMsQ0FBQyxvREFBb0QsQ0FBQztFQUNuRTtFQUVBLElBQUlVLE1BQU1BLENBQUEsRUFBRTtJQUNSLE9BQU9WLENBQUMsQ0FBQywyQ0FBMkMsQ0FBQztFQUN6RDtFQUVBLElBQUlXLEdBQUdBLENBQUEsRUFBRTtJQUNMLE9BQU9YLENBQUMsQ0FBQyx3R0FBd0csQ0FBQztFQUN0SDtFQUVBLElBQUlZLFFBQVFBLENBQUEsRUFBRTtJQUNWLE9BQU9aLENBQUMsQ0FBQyw4Q0FBOEMsQ0FBQztFQUM1RDtFQUVBLE1BQU1hLFFBQVFBLENBQUEsRUFBRTtJQUNaLE1BQU1DLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDLENBQUM7SUFDZixNQUFNRCxNQUFNLENBQUNDLElBQUksQ0FBQyxDQUFDO0VBQzNCO0FBRUE7O0FBRUE7QUFDQUMsTUFBTSxDQUFDQyxPQUFPLEdBQUcsSUFBSW5CLGFBQWEsQ0FBQyxDQUFDIn0=","map":{"version":3,"names":["AddNoteScreen","skipBtn","$","textNote","text","editing","editTitle","editnote","editButton","viewNote","getTitle","more","delete","nav","trashCan","saveNote","driver","back","module","exports"],"sourceRoot":"C:\\Users\\rajee\\Downloads\\Selenium(Test1To4)\\webdriverio-appium\\test\\screenObjects\\android\\","sources":["add-note.screen.js"],"sourcesContent":["class AddNoteScreen{\r\nget skipBtn(){\r\n    return $('android.widget.Button');\r\n}\r\n\r\nget textNote(){\r\n    return $('//android.widget.TextView[@text=\\'Add note\\']');\r\n}\r\n\r\nget text(){\r\n    return $('//android.widget.TextView[@text=\\'Text\\']');\r\n}\r\n\r\nget editing(){\r\n    return $('//android.widget.TextView[@text=\\'Editing\\']');\r\n}\r\n\r\nget editTitle(){\r\n    return $('//android.widget.EditText[@resource-id=\\'com.socialnmobile.dictapps.notepad.color.note:id/edit_title\\']');\r\n}\r\n\r\nget editnote(){\r\n    return $('//android.widget.EditText[@resource-id=\\'com.socialnmobile.dictapps.notepad.color.note:id/edit_note\\']');\r\n}\r\n\r\nget editButton(){\r\n    return $('//android.widget.ImageButton[@resource-id=\\'com.socialnmobile.dictapps.notepad.color.note:id/edit_btn\\']');\r\n}\r\n\r\nget viewNote(){\r\n    return $('//android.widget.TextView[@resource-id=\\'com.socialnmobile.dictapps.notepad.color.note:id/view_note\\']');\r\n}\r\n\r\nget getTitle(){\r\n    return $('//android.widget.TextView[@text=\"Fav Animie List\"]');\r\n}\r\n\r\nget more(){\r\n    return  $('//android.widget.ImageButton[@content-desc=\"More\"]');\r\n}\r\n\r\nget delete(){\r\n    return $('//android.widget.TextView[@text=\"Delete\"]');\r\n}\r\n\r\nget nav(){\r\n    return $('//android.widget.ImageButton[@resource-id=\"com.socialnmobile.dictapps.notepad.color.note:id/icon_nav\"]');\r\n}\r\n\r\nget trashCan(){\r\n    return $('//android.widget.TextView[@text=\"Trash Can\"]');\r\n}\r\n\r\nasync saveNote(){\r\n    await driver.back();\r\n        await driver.back();\r\n}\r\n\r\n}\r\n\r\n//export default new AddNoteScreen();\r\nmodule.exports = new AddNoteScreen();"],"mappings":";;AAAA,MAAMA,aAAa;EACnB,IAAIC,OAAOA,CAAA,EAAE;IACT,OAAOC,CAAC,CAAC,uBAAuB,CAAC;EACrC;EAEA,IAAIC,QAAQA,CAAA,EAAE;IACV,OAAOD,CAAC,CAAC,+CAA+C,CAAC;EAC7D;EAEA,IAAIE,IAAIA,CAAA,EAAE;IACN,OAAOF,CAAC,CAAC,2CAA2C,CAAC;EACzD;EAEA,IAAIG,OAAOA,CAAA,EAAE;IACT,OAAOH,CAAC,CAAC,8CAA8C,CAAC;EAC5D;EAEA,IAAII,SAASA,CAAA,EAAE;IACX,OAAOJ,CAAC,CAAC,yGAAyG,CAAC;EACvH;EAEA,IAAIK,QAAQA,CAAA,EAAE;IACV,OAAOL,CAAC,CAAC,wGAAwG,CAAC;EACtH;EAEA,IAAIM,UAAUA,CAAA,EAAE;IACZ,OAAON,CAAC,CAAC,0GAA0G,CAAC;EACxH;EAEA,IAAIO,QAAQA,CAAA,EAAE;IACV,OAAOP,CAAC,CAAC,wGAAwG,CAAC;EACtH;EAEA,IAAIQ,QAAQA,CAAA,EAAE;IACV,OAAOR,CAAC,CAAC,oDAAoD,CAAC;EAClE;EAEA,IAAIS,IAAIA,CAAA,EAAE;IACN,OAAQT,CAAC,CAAC,oDAAoD,CAAC;EACnE;EAEA,IAAIU,MAAMA,CAAA,EAAE;IACR,OAAOV,CAAC,CAAC,2CAA2C,CAAC;EACzD;EAEA,IAAIW,GAAGA,CAAA,EAAE;IACL,OAAOX,CAAC,CAAC,wGAAwG,CAAC;EACtH;EAEA,IAAIY,QAAQA,CAAA,EAAE;IACV,OAAOZ,CAAC,CAAC,8CAA8C,CAAC;EAC5D;EAEA,MAAMa,QAAQA,CAAA,EAAE;IACZ,MAAMC,MAAM,CAACC,IAAI,CAAC,CAAC;IACf,MAAMD,MAAM,CAACC,IAAI,CAAC,CAAC;EAC3B;AAEA;;AAEA;AACAC,MAAM,CAACC,OAAO,GAAG,IAAInB,aAAa,CAAC,CAAC"}},"mtime":1699542739474},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\rajee\\\\Downloads\\\\Selenium(Test1To4)\\\\webdriverio-appium\\\\config\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\rajee\\\\Downloads\\\\Selenium(Test1To4)\\\\webdriverio-appium\",\"filename\":\"C:\\\\Users\\\\rajee\\\\Downloads\\\\Selenium(Test1To4)\\\\webdriverio-appium\\\\config\\\\wdio.android.conf.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\rajee\\\\Downloads\\\\Selenium(Test1To4)\\\\webdriverio-appium\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.23.2:test":{"value":{"code":"\"use strict\";\n\nconst {\n  config\n} = require('./wdio.shared.conf.js');\n//config.port = 4723;\nconfig.specs = ['../test/specs/android/edit-note-screen.spec.js'\n//'../test/specs/hooks.spec.js'\n];\n\nconfig.capabilities = [{\n  'appium:platformName': 'Android',\n  'appium:platformVersion': '11.0',\n  'appium:deviceName': 'Pixel 3',\n  'appium:automationName': 'UIAutomator2',\n  //'appium:app' : path.join(process.cwd(), '.\\android\\ApiDemos-debug.apk')\n  'appium:app': 'C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\\\\app\\\\android\\\\ColorNote+Notepad.apk',\n  'appium:autoGrantPermissions': true\n}];\nconfig.services = [['appium', {\n  args: {\n    address: 'localhost',\n    port: 4723,\n    relaxedSecurity: true\n  },\n  logPath: './'\n}]];\nexports.config = config;\n\n//service\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb25maWciLCJyZXF1aXJlIiwic3BlY3MiLCJjYXBhYmlsaXRpZXMiLCJzZXJ2aWNlcyIsImFyZ3MiLCJhZGRyZXNzIiwicG9ydCIsInJlbGF4ZWRTZWN1cml0eSIsImxvZ1BhdGgiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHJhamVlXFxEb3dubG9hZHNcXFNlbGVuaXVtKFRlc3QxVG80KVxcd2ViZHJpdmVyaW8tYXBwaXVtXFxjb25maWdcXCIsInNvdXJjZXMiOlsid2Rpby5hbmRyb2lkLmNvbmYuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBjb25maWcgfSA9IHJlcXVpcmUoJy4vd2Rpby5zaGFyZWQuY29uZi5qcycpO1xyXG4vL2NvbmZpZy5wb3J0ID0gNDcyMztcclxuY29uZmlnLnNwZWNzID0gW1xyXG4gJy4uL3Rlc3Qvc3BlY3MvYW5kcm9pZC9lZGl0LW5vdGUtc2NyZWVuLnNwZWMuanMnXHJcbiAvLycuLi90ZXN0L3NwZWNzL2hvb2tzLnNwZWMuanMnXHJcbl07XHJcblxyXG5jb25maWcuY2FwYWJpbGl0aWVzID0gW1xyXG4gICAge1xyXG4gICAgJ2FwcGl1bTpwbGF0Zm9ybU5hbWUnOiAnQW5kcm9pZCcsXHJcbiAgICAnYXBwaXVtOnBsYXRmb3JtVmVyc2lvbic6ICcxMS4wJyxcclxuICAgICdhcHBpdW06ZGV2aWNlTmFtZSc6ICdQaXhlbCAzJyxcclxuICAgICdhcHBpdW06YXV0b21hdGlvbk5hbWUnOiAnVUlBdXRvbWF0b3IyJyxcclxuICAgIC8vJ2FwcGl1bTphcHAnIDogcGF0aC5qb2luKHByb2Nlc3MuY3dkKCksICcuXFxhbmRyb2lkXFxBcGlEZW1vcy1kZWJ1Zy5hcGsnKVxyXG4gICAgJ2FwcGl1bTphcHAnOiAnQzpcXFxcVXNlcnNcXFxccmFqZWVcXFxcQXBwaXVtXFxcXHdlYmRyaXZlci1hcHBpdW0tdjhcXFxcYXBwXFxcXGFuZHJvaWRcXFxcQ29sb3JOb3RlK05vdGVwYWQuYXBrJyxcclxuICAgICdhcHBpdW06YXV0b0dyYW50UGVybWlzc2lvbnMnIDogdHJ1ZVxyXG59XTtcclxuY29uZmlnLnNlcnZpY2VzPVtbJ2FwcGl1bScsIHtcclxuICAgIGFyZ3M6IHtcclxuICAgICAgICBhZGRyZXNzOiAnbG9jYWxob3N0JyxcclxuICAgICAgICBwb3J0OiA0NzIzLFxyXG4gICAgICAgIHJlbGF4ZWRTZWN1cml0eTogdHJ1ZVxyXG4gICAgfSxcclxuICAgIGxvZ1BhdGg6ICcuLydcclxuXHJcbn1dXTtcclxuXHJcblxyXG5cclxuZXhwb3J0cy5jb25maWcgPSBjb25maWc7XHJcblxyXG4vL3NlcnZpY2VcclxuIl0sIm1hcHBpbmdzIjoiOztBQUFBLE1BQU07RUFBRUE7QUFBTyxDQUFDLEdBQUdDLE9BQU8sQ0FBQyx1QkFBdUIsQ0FBQztBQUNuRDtBQUNBRCxNQUFNLENBQUNFLEtBQUssR0FBRyxDQUNkO0FBQ0E7QUFBQSxDQUNBOztBQUVERixNQUFNLENBQUNHLFlBQVksR0FBRyxDQUNsQjtFQUNBLHFCQUFxQixFQUFFLFNBQVM7RUFDaEMsd0JBQXdCLEVBQUUsTUFBTTtFQUNoQyxtQkFBbUIsRUFBRSxTQUFTO0VBQzlCLHVCQUF1QixFQUFFLGNBQWM7RUFDdkM7RUFDQSxZQUFZLEVBQUUsb0ZBQW9GO0VBQ2xHLDZCQUE2QixFQUFHO0FBQ3BDLENBQUMsQ0FBQztBQUNGSCxNQUFNLENBQUNJLFFBQVEsR0FBQyxDQUFDLENBQUMsUUFBUSxFQUFFO0VBQ3hCQyxJQUFJLEVBQUU7SUFDRkMsT0FBTyxFQUFFLFdBQVc7SUFDcEJDLElBQUksRUFBRSxJQUFJO0lBQ1ZDLGVBQWUsRUFBRTtFQUNyQixDQUFDO0VBQ0RDLE9BQU8sRUFBRTtBQUViLENBQUMsQ0FBQyxDQUFDO0FBSUhDLE9BQU8sQ0FBQ1YsTUFBTSxHQUFHQSxNQUFNOztBQUV2QiJ9","map":{"version":3,"names":["config","require","specs","capabilities","services","args","address","port","relaxedSecurity","logPath","exports"],"sourceRoot":"C:\\Users\\rajee\\Downloads\\Selenium(Test1To4)\\webdriverio-appium\\config\\","sources":["wdio.android.conf.js"],"sourcesContent":["const { config } = require('./wdio.shared.conf.js');\r\n//config.port = 4723;\r\nconfig.specs = [\r\n '../test/specs/android/edit-note-screen.spec.js'\r\n //'../test/specs/hooks.spec.js'\r\n];\r\n\r\nconfig.capabilities = [\r\n    {\r\n    'appium:platformName': 'Android',\r\n    'appium:platformVersion': '11.0',\r\n    'appium:deviceName': 'Pixel 3',\r\n    'appium:automationName': 'UIAutomator2',\r\n    //'appium:app' : path.join(process.cwd(), '.\\android\\ApiDemos-debug.apk')\r\n    'appium:app': 'C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\\\\app\\\\android\\\\ColorNote+Notepad.apk',\r\n    'appium:autoGrantPermissions' : true\r\n}];\r\nconfig.services=[['appium', {\r\n    args: {\r\n        address: 'localhost',\r\n        port: 4723,\r\n        relaxedSecurity: true\r\n    },\r\n    logPath: './'\r\n\r\n}]];\r\n\r\n\r\n\r\nexports.config = config;\r\n\r\n//service\r\n"],"mappings":";;AAAA,MAAM;EAAEA;AAAO,CAAC,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AACnD;AACAD,MAAM,CAACE,KAAK,GAAG,CACd;AACA;AAAA,CACA;;AAEDF,MAAM,CAACG,YAAY,GAAG,CAClB;EACA,qBAAqB,EAAE,SAAS;EAChC,wBAAwB,EAAE,MAAM;EAChC,mBAAmB,EAAE,SAAS;EAC9B,uBAAuB,EAAE,cAAc;EACvC;EACA,YAAY,EAAE,oFAAoF;EAClG,6BAA6B,EAAG;AACpC,CAAC,CAAC;AACFH,MAAM,CAACI,QAAQ,GAAC,CAAC,CAAC,QAAQ,EAAE;EACxBC,IAAI,EAAE;IACFC,OAAO,EAAE,WAAW;IACpBC,IAAI,EAAE,IAAI;IACVC,eAAe,EAAE;EACrB,CAAC;EACDC,OAAO,EAAE;AAEb,CAAC,CAAC,CAAC;AAIHC,OAAO,CAACV,MAAM,GAAGA,MAAM;;AAEvB"}},"mtime":1699547489168},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\rajee\\\\Downloads\\\\Selenium(Test1To4)\\\\webdriverio-appium\\\\test\\\\specs\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\rajee\\\\Downloads\\\\Selenium(Test1To4)\\\\webdriverio-appium\",\"filename\":\"C:\\\\Users\\\\rajee\\\\Downloads\\\\Selenium(Test1To4)\\\\webdriverio-appium\\\\test\\\\specs\\\\hooks.spec.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\rajee\\\\Downloads\\\\Selenium(Test1To4)\\\\webdriverio-appium\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-static-block\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.23.2:test":{"value":{"code":"\"use strict\";\n\ndescribe('hooks tutorisl', () => {\n  before(async () => {\n    console.log('I am in before hook');\n  });\n  beforeEach(async () => {\n    console.log('I am in before each hook');\n  });\n  afterEach(async () => {\n    console.log('I am in after each hook');\n  });\n  after(async () => {\n    console.log('I am in after hook');\n  });\n  it('test1l', async () => {\n    console.log('test1 step');\n  });\n  it('test12', async () => {\n    console.log('test2 step');\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJkZXNjcmliZSIsImJlZm9yZSIsImNvbnNvbGUiLCJsb2ciLCJiZWZvcmVFYWNoIiwiYWZ0ZXJFYWNoIiwiYWZ0ZXIiLCJpdCJdLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxyYWplZVxcRG93bmxvYWRzXFxTZWxlbml1bShUZXN0MVRvNClcXHdlYmRyaXZlcmlvLWFwcGl1bVxcdGVzdFxcc3BlY3NcXCIsInNvdXJjZXMiOlsiaG9va3Muc3BlYy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJkZXNjcmliZSgnaG9va3MgdHV0b3Jpc2wnLCAoKSA9PiB7XHJcblxyXG4gICAgYmVmb3JlKGFzeW5jICgpID0+IHtcclxuICAgICAgICBjb25zb2xlLmxvZygnSSBhbSBpbiBiZWZvcmUgaG9vaycpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgYmVmb3JlRWFjaChhc3luYyAoKSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ0kgYW0gaW4gYmVmb3JlIGVhY2ggaG9vaycpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgYWZ0ZXJFYWNoKGFzeW5jICgpID0+IHtcclxuICAgICAgICBjb25zb2xlLmxvZygnSSBhbSBpbiBhZnRlciBlYWNoIGhvb2snKTtcclxuICAgIH0pO1xyXG5cclxuICAgIGFmdGVyKGFzeW5jICgpID0+IHtcclxuICAgICAgICBjb25zb2xlLmxvZygnSSBhbSBpbiBhZnRlciBob29rJyk7XHJcbiAgICB9KTtcclxuXHJcbiAgICBpdCgndGVzdDFsJywgYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCd0ZXN0MSBzdGVwJyk7XHJcbiAgICAgICAgXHJcbiAgICB9KTtcclxuXHJcbiAgICBpdCgndGVzdDEyJywgYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCd0ZXN0MiBzdGVwJyk7XHJcbiAgICAgICAgXHJcbiAgICB9KTtcclxuXHJcblxyXG59KSJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsUUFBUSxDQUFDLGdCQUFnQixFQUFFLE1BQU07RUFFN0JDLE1BQU0sQ0FBQyxZQUFZO0lBQ2ZDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLHFCQUFxQixDQUFDO0VBQ3RDLENBQUMsQ0FBQztFQUVGQyxVQUFVLENBQUMsWUFBWTtJQUNuQkYsT0FBTyxDQUFDQyxHQUFHLENBQUMsMEJBQTBCLENBQUM7RUFDM0MsQ0FBQyxDQUFDO0VBRUZFLFNBQVMsQ0FBQyxZQUFZO0lBQ2xCSCxPQUFPLENBQUNDLEdBQUcsQ0FBQyx5QkFBeUIsQ0FBQztFQUMxQyxDQUFDLENBQUM7RUFFRkcsS0FBSyxDQUFDLFlBQVk7SUFDZEosT0FBTyxDQUFDQyxHQUFHLENBQUMsb0JBQW9CLENBQUM7RUFDckMsQ0FBQyxDQUFDO0VBRUZJLEVBQUUsQ0FBQyxRQUFRLEVBQUUsWUFBWTtJQUNyQkwsT0FBTyxDQUFDQyxHQUFHLENBQUMsWUFBWSxDQUFDO0VBRTdCLENBQUMsQ0FBQztFQUVGSSxFQUFFLENBQUMsUUFBUSxFQUFFLFlBQVk7SUFDckJMLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLFlBQVksQ0FBQztFQUU3QixDQUFDLENBQUM7QUFHTixDQUFDLENBQUMifQ==","map":{"version":3,"names":["describe","before","console","log","beforeEach","afterEach","after","it"],"sourceRoot":"C:\\Users\\rajee\\Downloads\\Selenium(Test1To4)\\webdriverio-appium\\test\\specs\\","sources":["hooks.spec.js"],"sourcesContent":["describe('hooks tutorisl', () => {\r\n\r\n    before(async () => {\r\n        console.log('I am in before hook');\r\n    });\r\n\r\n    beforeEach(async () => {\r\n        console.log('I am in before each hook');\r\n    });\r\n\r\n    afterEach(async () => {\r\n        console.log('I am in after each hook');\r\n    });\r\n\r\n    after(async () => {\r\n        console.log('I am in after hook');\r\n    });\r\n\r\n    it('test1l', async () => {\r\n        console.log('test1 step');\r\n        \r\n    });\r\n\r\n    it('test12', async () => {\r\n        console.log('test2 step');\r\n        \r\n    });\r\n\r\n\r\n})"],"mappings":";;AAAAA,QAAQ,CAAC,gBAAgB,EAAE,MAAM;EAE7BC,MAAM,CAAC,YAAY;IACfC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;EACtC,CAAC,CAAC;EAEFC,UAAU,CAAC,YAAY;IACnBF,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;EAC3C,CAAC,CAAC;EAEFE,SAAS,CAAC,YAAY;IAClBH,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;EAC1C,CAAC,CAAC;EAEFG,KAAK,CAAC,YAAY;IACdJ,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;EACrC,CAAC,CAAC;EAEFI,EAAE,CAAC,QAAQ,EAAE,YAAY;IACrBL,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;EAE7B,CAAC,CAAC;EAEFI,EAAE,CAAC,QAAQ,EAAE,YAAY;IACrBL,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;EAE7B,CAAC,CAAC;AAGN,CAAC,CAAC"}},"mtime":1699542739481},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\rajee\\\\Downloads\\\\Selenium(Test1To4)\\\\webdriverio-appium\\\\config\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\rajee\\\\Downloads\\\\Selenium(Test1To4)\\\\webdriverio-appium\",\"filename\":\"C:\\\\Users\\\\rajee\\\\Downloads\\\\Selenium(Test1To4)\\\\webdriverio-appium\\\\config\\\\wdio.shared.conf.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\rajee\\\\Downloads\\\\Selenium(Test1To4)\\\\webdriverio-appium\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.23.2:test":{"value":{"code":"\"use strict\";\n\n//const path = require('path');\n\nexports.config = {\n  //\n  // ====================\n  // Runner Configuration\n  // ====================\n  // WebdriverIO supports running e2e tests as well as unit and component tests.\n  runner: 'local',\n  //\n  // ==================\n  // Specify Test Files\n  // ==================\n  // Define which test specs should run. The pattern is relative to the directory\n  // of the configuration file being run.\n  //\n  // The specs are defined as an array of spec files (optionally using wildcards\n  // that will be expanded). The test for each spec file will be run in a separate\n  // worker process. In order to have a group of spec files run in the same worker\n  // process simply enclose them in an array within the specs array.\n  //\n  // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n  // then the current working directory is where your `package.json` resides, so `wdio`\n  // will be called from there.\n  //\n\n  // Patterns to exclude.\n  exclude: [\n    // 'path/to/excluded/files'\n  ],\n  //\n  // ============\n  // Capabilities\n  // ============\n  // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n  // time. Depending on the number of capabilities, WebdriverIO launches several test\n  // sessions. Within your capabilities you can overwrite the spec and exclude options in\n  // order to group specific specs to a specific capability.\n  //\n  // First, you can define how many instances should be started at the same time. Let's\n  // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n  // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n  // files and you set maxInstances to 10, all spec files will get tested at the same time\n  // and 30 processes will get spawned. The property handles how many capabilities\n  // from the same test should run tests.\n  //\n  maxInstances: 10,\n  //\n  // If you have trouble getting all important capabilities together, check out the\n  // Sauce Labs platform configurator - a great tool to configure your capabilities:\n  // https://saucelabs.com/platform/platform-configurator\n  //\n\n  //capabilities: [{\n  //   'appium:platformName' : 'Android',\n  //   'appium:platformVersion' : '10.0',\n  //  'appium:deviceName' : 'Nexus S',\n  //  'appium:automationName' : 'UIAutomator2',\n  //'appium:app' : path.join(process.cwd(), 'app\\android\\ApiDemos-debug.apk')\n  // 'appium:app' : 'C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\\\\app\\\\android\\\\ApiDemos-debug.apk'\n  //  }],\n  // capabilities for local Appium web tests on an Android Emulator\n  ////platformName: 'Android',\n  //browserName: 'Chrome',\n  //'appium:deviceName': 'Android GoogleAPI Emulator',\n  // 'appium:platformVersion': '12.0',\n  //'appium:automationName': 'UiAutomator2'\n\n  //\n  // ===================\n  // Test Configurations\n  // ===================\n  // Define all options that are relevant for the WebdriverIO instance here\n  //\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  logLevel: 'info',\n  //\n  // Set specific log levels per logger\n  // loggers:\n  // - webdriver, webdriverio\n  // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n  // - @wdio/mocha-framework, @wdio/jasmine-framework\n  // - @wdio/local-runner\n  // - @wdio/sumologic-reporter\n  // - @wdio/cli, @wdio/config, @wdio/utils\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  // logLevels: {\n  //     webdriver: 'info',\n  //     '@wdio/appium-service': 'info'\n  // },\n  //\n  // If you only want to run your tests until a specific amount of tests have failed use\n  // bail (default is 0 - don't bail, run all tests).\n  bail: 0,\n  //\n  // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n  // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n  // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n  // gets prepended directly.\n  baseUrl: '',\n  //\n  // Default timeout for all waitFor* commands.\n  waitforTimeout: 10000,\n  //\n  // Default timeout in milliseconds for request\n  // if browser driver or grid doesn't send response\n  connectionRetryTimeout: 120000,\n  //\n  // Default request retries count\n  connectionRetryCount: 3,\n  //\n  // Test runner services\n  // Services take over a specific job you don't want to take care of. They enhance\n  // your test setup with almost no effort. Unlike plugins, they don't add new\n  // commands. Instead, they hook themselves up into the test process.\n  //services: ['appium'],\n\n  // Framework you want to run your specs with.\n  // The following are supported: Mocha, Jasmine, and Cucumber\n  // see also: https://webdriver.io/docs/frameworks\n  //\n  // Make sure you have the wdio adapter package for the specific framework installed\n  // before running any tests.\n  framework: 'mocha',\n  //\n  // The number of times to retry the entire specfile when it fails as a whole\n  // specFileRetries: 1,\n  //\n  // Delay in seconds between the spec file retry attempts\n  // specFileRetriesDelay: 0,\n  //\n  // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n  // specFileRetriesDeferred: false,\n  //\n  // Test reporter for stdout.\n  // The only one supported by default is 'dot'\n  // see also: https://webdriver.io/docs/dot-reporter\n  reporters: ['spec', ['allure', {\n    outputDir: 'allure-results',\n    disableWebdriverStepsReporting: false,\n    disableWebdriverScreenshotsReporting: false\n  }]],\n  //\n  // Options to be passed to Mocha.\n  // See the full list at http://mochajs.org/\n  mochaOpts: {\n    ui: 'bdd',\n    timeout: 60000\n  },\n  //\n  // =====\n  // Hooks\n  // =====\n  // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n  // it and to build services around it. You can either apply a single function or an array of\n  // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n  // resolved to continue.\n  /**\r\n   * Gets executed once before all workers get launched.\r\n   * @param {object} config wdio configuration object\r\n   * @param {Array.<Object>} capabilities list of capabilities details\r\n   */\n  // onPrepare: function (config, capabilities) {\n  //},\n  /**\r\n   * Gets executed before a worker process is spawned and can be used to initialise specific service\r\n   * for that worker as well as modify runtime environments in an async fashion.\r\n   * @param  {string} cid      capability id (e.g 0-0)\r\n   * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\r\n   * @param  {object} specs    specs to be run in the worker process\r\n   * @param  {object} args     object that will be merged with the main configuration once worker is initialized\r\n   * @param  {object} execArgv list of string arguments passed to the worker process\r\n   */\n  // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n  // },\n  /**\r\n   * Gets executed just after a worker process has exited.\r\n   * @param  {string} cid      capability id (e.g 0-0)\r\n   * @param  {number} exitCode 0 - success, 1 - fail\r\n   * @param  {object} specs    specs to be run in the worker process\r\n   * @param  {number} retries  number of retries used\r\n   */\n  // onWorkerEnd: function (cid, exitCode, specs, retries) {\n  // },\n  /**\r\n   * Gets executed just before initialising the webdriver session and test framework. It allows you\r\n   * to manipulate configurations depending on the capability or spec.\r\n   * @param {object} config wdio configuration object\r\n   * @param {Array.<Object>} capabilities list of capabilities details\r\n   * @param {Array.<String>} specs List of spec file paths that are to be run\r\n   * @param {string} cid worker id (e.g. 0-0)\r\n   */\n  // beforeSession: function (config, capabilities, specs, cid) {\n  // },\n  /**\r\n   * Gets executed before test execution begins. At this point you can access to all global\r\n   * variables like `browser`. It is the perfect place to define custom commands.\r\n   * @param {Array.<Object>} capabilities list of capabilities details\r\n   * @param {Array.<String>} specs        List of spec file paths that are to be run\r\n   * @param {object}         browser      instance of created browser/device session\r\n   */\n  // before: function (capabilities, specs) {\n  // },\n  /**\r\n   * Runs before a WebdriverIO command gets executed.\r\n   * @param {string} commandName hook command name\r\n   * @param {Array} args arguments that command would receive\r\n   */\n  // beforeCommand: function (commandName, args) {\n  // },\n  /**\r\n   * Hook that gets executed before the suite starts\r\n   * @param {object} suite suite details\r\n   */\n  // beforeSuite: function (suite) {\n  // },\n  /**\r\n   * Function to be executed before a test (in Mocha/Jasmine) starts.\r\n   */\n  // beforeTest: function (test, context) {\n  // },\n  /**\r\n   * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\r\n   * beforeEach in Mocha)\r\n   */\n  // beforeHook: function (test, context) {\n  // },\n  /**\r\n   * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\r\n   * afterEach in Mocha)\r\n   */\n  // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n  // },\n  /**\r\n   * Function to be executed after a test (in Mocha/Jasmine only)\r\n   * @param {object}  test             test object\r\n   * @param {object}  context          scope object the test was executed with\r\n   * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\r\n   * @param {*}       result.result    return object of test function\r\n   * @param {number}  result.duration  duration of test\r\n   * @param {boolean} result.passed    true if test has passed, otherwise false\r\n   * @param {object}  result.retries   information about spec related retries, e.g. `{ attempts: 0, limit: 0 }`\r\n   */\n  afterTest: async function (test, context, {\n    error\n  }) {\n    //result, duration, passed, retries\n    if (error) {\n      await driver.takeScreenshot();\n    }\n  }\n\n  /**\r\n   * Hook that gets executed after the suite has ended\r\n   * @param {object} suite suite details\r\n   */\n  // afterSuite: function (suite) {\n  // },\n  /**\r\n   * Runs after a WebdriverIO command gets executed\r\n   * @param {string} commandName hook command name\r\n   * @param {Array} args arguments that command would receive\r\n   * @param {number} result 0 - command success, 1 - command error\r\n   * @param {object} error error object if any\r\n   */\n  // afterCommand: function (commandName, args, result, error) {\n  // },\n  /**\r\n   * Gets executed after all tests are done. You still have access to all global variables from\r\n   * the test.\r\n   * @param {number} result 0 - test pass, 1 - test fail\r\n   * @param {Array.<Object>} capabilities list of capabilities details\r\n   * @param {Array.<String>} specs List of spec file paths that ran\r\n   */\n  // after: function (result, capabilities, specs) {\n  // },\n  /**\r\n   * Gets executed right after terminating the webdriver session.\r\n   * @param {object} config wdio configuration object\r\n   * @param {Array.<Object>} capabilities list of capabilities details\r\n   * @param {Array.<String>} specs List of spec file paths that ran\r\n   */\n  // afterSession: function (config, capabilities, specs) {\n  // },\n  /**\r\n   * Gets executed after all workers got shut down and the process is about to exit. An error\r\n   * thrown in the onComplete hook will result in the test run failing.\r\n   * @param {object} exitCode 0 - success, 1 - fail\r\n   * @param {object} config wdio configuration object\r\n   * @param {Array.<Object>} capabilities list of capabilities details\r\n   * @param {<Object>} results object containing test results\r\n   */\n  // onComplete: function(exitCode, config, capabilities, results) {\n  // },\n  /**\r\n  * Gets executed when a refresh happens.\r\n  * @param {string} oldSessionId session ID of the old session\r\n  * @param {string} newSessionId session ID of the new session\r\n  */\n  // onReload: function(oldSessionId, newSessionId) {\n  // }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["exports","config","runner","exclude","maxInstances","logLevel","bail","baseUrl","waitforTimeout","connectionRetryTimeout","connectionRetryCount","framework","reporters","outputDir","disableWebdriverStepsReporting","disableWebdriverScreenshotsReporting","mochaOpts","ui","timeout","afterTest","test","context","error","driver","takeScreenshot"],"sourceRoot":"C:\\Users\\rajee\\Downloads\\Selenium(Test1To4)\\webdriverio-appium\\config\\","sources":["wdio.shared.conf.js"],"sourcesContent":["//const path = require('path');\r\n\r\nexports.config = {\r\n    //\r\n    // ====================\r\n    // Runner Configuration\r\n    // ====================\r\n    // WebdriverIO supports running e2e tests as well as unit and component tests.\r\n    runner: 'local',\r\n    \r\n    //\r\n    // ==================\r\n    // Specify Test Files\r\n    // ==================\r\n    // Define which test specs should run. The pattern is relative to the directory\r\n    // of the configuration file being run.\r\n    //\r\n    // The specs are defined as an array of spec files (optionally using wildcards\r\n    // that will be expanded). The test for each spec file will be run in a separate\r\n    // worker process. In order to have a group of spec files run in the same worker\r\n    // process simply enclose them in an array within the specs array.\r\n    //\r\n    // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\r\n    // then the current working directory is where your `package.json` resides, so `wdio`\r\n    // will be called from there.\r\n    //\r\n  \r\n    // Patterns to exclude.\r\n    exclude: [\r\n        // 'path/to/excluded/files'\r\n    ],\r\n    //\r\n    // ============\r\n    // Capabilities\r\n    // ============\r\n    // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\r\n    // time. Depending on the number of capabilities, WebdriverIO launches several test\r\n    // sessions. Within your capabilities you can overwrite the spec and exclude options in\r\n    // order to group specific specs to a specific capability.\r\n    //\r\n    // First, you can define how many instances should be started at the same time. Let's\r\n    // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\r\n    // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\r\n    // files and you set maxInstances to 10, all spec files will get tested at the same time\r\n    // and 30 processes will get spawned. The property handles how many capabilities\r\n    // from the same test should run tests.\r\n    //\r\n    maxInstances: 10,\r\n    //\r\n    // If you have trouble getting all important capabilities together, check out the\r\n    // Sauce Labs platform configurator - a great tool to configure your capabilities:\r\n    // https://saucelabs.com/platform/platform-configurator\r\n    //\r\n   \r\n\r\n    //capabilities: [{\r\n    //   'appium:platformName' : 'Android',\r\n    //   'appium:platformVersion' : '10.0',\r\n    //  'appium:deviceName' : 'Nexus S',\r\n    //  'appium:automationName' : 'UIAutomator2',\r\n    //'appium:app' : path.join(process.cwd(), 'app\\android\\ApiDemos-debug.apk')\r\n    // 'appium:app' : 'C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\\\\app\\\\android\\\\ApiDemos-debug.apk'\r\n    //  }],\r\n    // capabilities for local Appium web tests on an Android Emulator\r\n    ////platformName: 'Android',\r\n    //browserName: 'Chrome',\r\n    //'appium:deviceName': 'Android GoogleAPI Emulator',\r\n    // 'appium:platformVersion': '12.0',\r\n    //'appium:automationName': 'UiAutomator2'\r\n\r\n\r\n    //\r\n    // ===================\r\n    // Test Configurations\r\n    // ===================\r\n    // Define all options that are relevant for the WebdriverIO instance here\r\n    //\r\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\r\n    logLevel: 'info',\r\n    //\r\n    // Set specific log levels per logger\r\n    // loggers:\r\n    // - webdriver, webdriverio\r\n    // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\r\n    // - @wdio/mocha-framework, @wdio/jasmine-framework\r\n    // - @wdio/local-runner\r\n    // - @wdio/sumologic-reporter\r\n    // - @wdio/cli, @wdio/config, @wdio/utils\r\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\r\n    // logLevels: {\r\n    //     webdriver: 'info',\r\n    //     '@wdio/appium-service': 'info'\r\n    // },\r\n    //\r\n    // If you only want to run your tests until a specific amount of tests have failed use\r\n    // bail (default is 0 - don't bail, run all tests).\r\n    bail: 0,\r\n    //\r\n    // Set a base URL in order to shorten url command calls. If your `url` parameter starts\r\n    // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\r\n    // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\r\n    // gets prepended directly.\r\n    baseUrl: '',\r\n    //\r\n    // Default timeout for all waitFor* commands.\r\n    waitforTimeout: 10000,\r\n    //\r\n    // Default timeout in milliseconds for request\r\n    // if browser driver or grid doesn't send response\r\n    connectionRetryTimeout: 120000,\r\n    //\r\n    // Default request retries count\r\n    connectionRetryCount: 3,\r\n    //\r\n    // Test runner services\r\n    // Services take over a specific job you don't want to take care of. They enhance\r\n    // your test setup with almost no effort. Unlike plugins, they don't add new\r\n    // commands. Instead, they hook themselves up into the test process.\r\n    //services: ['appium'],\r\n\r\n    // Framework you want to run your specs with.\r\n    // The following are supported: Mocha, Jasmine, and Cucumber\r\n    // see also: https://webdriver.io/docs/frameworks\r\n    //\r\n    // Make sure you have the wdio adapter package for the specific framework installed\r\n    // before running any tests.\r\n    framework: 'mocha',\r\n    //\r\n    // The number of times to retry the entire specfile when it fails as a whole\r\n    // specFileRetries: 1,\r\n    //\r\n    // Delay in seconds between the spec file retry attempts\r\n    // specFileRetriesDelay: 0,\r\n    //\r\n    // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\r\n    // specFileRetriesDeferred: false,\r\n    //\r\n    // Test reporter for stdout.\r\n    // The only one supported by default is 'dot'\r\n    // see also: https://webdriver.io/docs/dot-reporter\r\n    reporters: ['spec', \r\n    ['allure', {\r\n        outputDir: 'allure-results',\r\n        disableWebdriverStepsReporting: false,\r\n        disableWebdriverScreenshotsReporting: false,\r\n    }]\r\n    \r\n],\r\n\r\n\r\n    //\r\n    // Options to be passed to Mocha.\r\n    // See the full list at http://mochajs.org/\r\n    mochaOpts: {\r\n        ui: 'bdd',\r\n        timeout: 60000\r\n    },\r\n    //\r\n    // =====\r\n    // Hooks\r\n    // =====\r\n    // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\r\n    // it and to build services around it. You can either apply a single function or an array of\r\n    // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\r\n    // resolved to continue.\r\n    /**\r\n     * Gets executed once before all workers get launched.\r\n     * @param {object} config wdio configuration object\r\n     * @param {Array.<Object>} capabilities list of capabilities details\r\n     */\r\n    // onPrepare: function (config, capabilities) {\r\n    //},\r\n    /**\r\n     * Gets executed before a worker process is spawned and can be used to initialise specific service\r\n     * for that worker as well as modify runtime environments in an async fashion.\r\n     * @param  {string} cid      capability id (e.g 0-0)\r\n     * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\r\n     * @param  {object} specs    specs to be run in the worker process\r\n     * @param  {object} args     object that will be merged with the main configuration once worker is initialized\r\n     * @param  {object} execArgv list of string arguments passed to the worker process\r\n     */\r\n    // onWorkerStart: function (cid, caps, specs, args, execArgv) {\r\n    // },\r\n    /**\r\n     * Gets executed just after a worker process has exited.\r\n     * @param  {string} cid      capability id (e.g 0-0)\r\n     * @param  {number} exitCode 0 - success, 1 - fail\r\n     * @param  {object} specs    specs to be run in the worker process\r\n     * @param  {number} retries  number of retries used\r\n     */\r\n    // onWorkerEnd: function (cid, exitCode, specs, retries) {\r\n    // },\r\n    /**\r\n     * Gets executed just before initialising the webdriver session and test framework. It allows you\r\n     * to manipulate configurations depending on the capability or spec.\r\n     * @param {object} config wdio configuration object\r\n     * @param {Array.<Object>} capabilities list of capabilities details\r\n     * @param {Array.<String>} specs List of spec file paths that are to be run\r\n     * @param {string} cid worker id (e.g. 0-0)\r\n     */\r\n    // beforeSession: function (config, capabilities, specs, cid) {\r\n    // },\r\n    /**\r\n     * Gets executed before test execution begins. At this point you can access to all global\r\n     * variables like `browser`. It is the perfect place to define custom commands.\r\n     * @param {Array.<Object>} capabilities list of capabilities details\r\n     * @param {Array.<String>} specs        List of spec file paths that are to be run\r\n     * @param {object}         browser      instance of created browser/device session\r\n     */\r\n    // before: function (capabilities, specs) {\r\n    // },\r\n    /**\r\n     * Runs before a WebdriverIO command gets executed.\r\n     * @param {string} commandName hook command name\r\n     * @param {Array} args arguments that command would receive\r\n     */\r\n    // beforeCommand: function (commandName, args) {\r\n    // },\r\n    /**\r\n     * Hook that gets executed before the suite starts\r\n     * @param {object} suite suite details\r\n     */\r\n    // beforeSuite: function (suite) {\r\n    // },\r\n    /**\r\n     * Function to be executed before a test (in Mocha/Jasmine) starts.\r\n     */\r\n    // beforeTest: function (test, context) {\r\n    // },\r\n    /**\r\n     * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\r\n     * beforeEach in Mocha)\r\n     */\r\n    // beforeHook: function (test, context) {\r\n    // },\r\n    /**\r\n     * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\r\n     * afterEach in Mocha)\r\n     */\r\n    // afterHook: function (test, context, { error, result, duration, passed, retries }) {\r\n    // },\r\n    /**\r\n     * Function to be executed after a test (in Mocha/Jasmine only)\r\n     * @param {object}  test             test object\r\n     * @param {object}  context          scope object the test was executed with\r\n     * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\r\n     * @param {*}       result.result    return object of test function\r\n     * @param {number}  result.duration  duration of test\r\n     * @param {boolean} result.passed    true if test has passed, otherwise false\r\n     * @param {object}  result.retries   information about spec related retries, e.g. `{ attempts: 0, limit: 0 }`\r\n     */\r\n     afterTest: async function(test, context, { error }) { //result, duration, passed, retries\r\n        if(error){\r\n            await driver.takeScreenshot();\r\n        }\r\n     },\r\n\r\n\r\n    /**\r\n     * Hook that gets executed after the suite has ended\r\n     * @param {object} suite suite details\r\n     */\r\n    // afterSuite: function (suite) {\r\n    // },\r\n    /**\r\n     * Runs after a WebdriverIO command gets executed\r\n     * @param {string} commandName hook command name\r\n     * @param {Array} args arguments that command would receive\r\n     * @param {number} result 0 - command success, 1 - command error\r\n     * @param {object} error error object if any\r\n     */\r\n    // afterCommand: function (commandName, args, result, error) {\r\n    // },\r\n    /**\r\n     * Gets executed after all tests are done. You still have access to all global variables from\r\n     * the test.\r\n     * @param {number} result 0 - test pass, 1 - test fail\r\n     * @param {Array.<Object>} capabilities list of capabilities details\r\n     * @param {Array.<String>} specs List of spec file paths that ran\r\n     */\r\n    // after: function (result, capabilities, specs) {\r\n    // },\r\n    /**\r\n     * Gets executed right after terminating the webdriver session.\r\n     * @param {object} config wdio configuration object\r\n     * @param {Array.<Object>} capabilities list of capabilities details\r\n     * @param {Array.<String>} specs List of spec file paths that ran\r\n     */\r\n    // afterSession: function (config, capabilities, specs) {\r\n    // },\r\n    /**\r\n     * Gets executed after all workers got shut down and the process is about to exit. An error\r\n     * thrown in the onComplete hook will result in the test run failing.\r\n     * @param {object} exitCode 0 - success, 1 - fail\r\n     * @param {object} config wdio configuration object\r\n     * @param {Array.<Object>} capabilities list of capabilities details\r\n     * @param {<Object>} results object containing test results\r\n     */\r\n    // onComplete: function(exitCode, config, capabilities, results) {\r\n    // },\r\n    /**\r\n    * Gets executed when a refresh happens.\r\n    * @param {string} oldSessionId session ID of the old session\r\n    * @param {string} newSessionId session ID of the new session\r\n    */\r\n    // onReload: function(oldSessionId, newSessionId) {\r\n    // }\r\n}\r\n"],"mappings":";;AAAA;;AAEAA,OAAO,CAACC,MAAM,GAAG;EACb;EACA;EACA;EACA;EACA;EACAC,MAAM,EAAE,OAAO;EAEf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACAC,OAAO,EAAE;IACL;EAAA,CACH;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,EAAE;EAChB;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,QAAQ,EAAE,MAAM;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,IAAI,EAAE,CAAC;EACP;EACA;EACA;EACA;EACA;EACAC,OAAO,EAAE,EAAE;EACX;EACA;EACAC,cAAc,EAAE,KAAK;EACrB;EACA;EACA;EACAC,sBAAsB,EAAE,MAAM;EAC9B;EACA;EACAC,oBAAoB,EAAE,CAAC;EACvB;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,OAAO;EAClB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,CAAC,MAAM,EAClB,CAAC,QAAQ,EAAE;IACPC,SAAS,EAAE,gBAAgB;IAC3BC,8BAA8B,EAAE,KAAK;IACrCC,oCAAoC,EAAE;EAC1C,CAAC,CAAC,CAEL;EAGG;EACA;EACA;EACAC,SAAS,EAAE;IACPC,EAAE,EAAE,KAAK;IACTC,OAAO,EAAE;EACb,CAAC;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACKC,SAAS,EAAE,eAAAA,CAAeC,IAAI,EAAEC,OAAO,EAAE;IAAEC;EAAM,CAAC,EAAE;IAAE;IACnD,IAAGA,KAAK,EAAC;MACL,MAAMC,MAAM,CAACC,cAAc,CAAC,CAAC;IACjC;EACH;;EAGD;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;AACJ,CAAC"}},"mtime":1699940534352},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\rajee\\\\Downloads\\\\Selenium(Test1To4)\\\\webdriverio-appium\\\\test\\\\specs\\\\android\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\rajee\\\\Downloads\\\\Selenium(Test1To4)\\\\webdriverio-appium\",\"filename\":\"C:\\\\Users\\\\rajee\\\\Downloads\\\\Selenium(Test1To4)\\\\webdriverio-appium\\\\test\\\\specs\\\\android\\\\edit-note-screen.spec.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\rajee\\\\Downloads\\\\Selenium(Test1To4)\\\\webdriverio-appium\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.23.2:test":{"value":{"code":"\"use strict\";\n\nvar _editNote = _interopRequireDefault(require(\"../../screenObjects/android/edit-note.screen\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n//const AddNoteScreen = require(\"../../screenObjects/android/add-note.screen\");\n//const EditNoteScreen = require(\"../../screenObjects/android/edit-note.screen\");\n//baabel\n\ndescribe('Delete Notes', () => {\n  it('delete note, verify trash can', async () => {\n    console.log(\"User in delete note function\");\n    await _editNote.default.skipTutorial();\n    await _editNote.default.saveAndverify(\"Fav TV Show\", \"Naruto\\nTom and Jerry\\nNoddy\");\n    await driver.back();\n    await _editNote.default.getTitle.click();\n    await _editNote.default.more.click();\n    await _editNote.default.delete.click();\n    await driver.acceptAlert();\n    //android.widget.Button[@text='OK']\n    await expect(_editNote.default.getTitle).not.toExist();\n    await _editNote.default.nav.click();\n    await _editNote.default.trashCan.click();\n    await expect(_editNote.default.getTitle).toExist();\n  });\n  it.only('acces webvie elements', async () => {\n    console.log('user in switch contect funcyion');\n    await _editNote.default.skipTutorial();\n    await _editNote.default.nav.click();\n    //click on the fb link\n    await $('//*[@text=\"Like us on Facebook\"]').click();\n    //get current context\n    console.log(await driver.getContext());\n    //get all the contexts\n    driver.pause(2000);\n    console.log(await driver.getContexts());\n    //switch to webview chrome context\n    //await driver.switchContext('WEBVIEW_chrome');\n    //asser thr cover image displayed\n    //await expect(await $('.img.coverPhoto')).toBeDisplayed();\n    //switch back to the native app\n    await driver.switchContext('NATIVE_APP');\n    await driver.back();\n    //await with app stuff\n    await expect(_editNote.default.trashCan).toBeDisplayed();\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZWRpdE5vdGUiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiZGVzY3JpYmUiLCJpdCIsImNvbnNvbGUiLCJsb2ciLCJFZGl0Tm90ZVNjcmVlbiIsInNraXBUdXRvcmlhbCIsInNhdmVBbmR2ZXJpZnkiLCJkcml2ZXIiLCJiYWNrIiwiZ2V0VGl0bGUiLCJjbGljayIsIm1vcmUiLCJkZWxldGUiLCJhY2NlcHRBbGVydCIsImV4cGVjdCIsIm5vdCIsInRvRXhpc3QiLCJuYXYiLCJ0cmFzaENhbiIsIm9ubHkiLCIkIiwiZ2V0Q29udGV4dCIsInBhdXNlIiwiZ2V0Q29udGV4dHMiLCJzd2l0Y2hDb250ZXh0IiwidG9CZURpc3BsYXllZCJdLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxyYWplZVxcRG93bmxvYWRzXFxTZWxlbml1bShUZXN0MVRvNClcXHdlYmRyaXZlcmlvLWFwcGl1bVxcdGVzdFxcc3BlY3NcXGFuZHJvaWRcXCIsInNvdXJjZXMiOlsiZWRpdC1ub3RlLXNjcmVlbi5zcGVjLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vY29uc3QgQWRkTm90ZVNjcmVlbiA9IHJlcXVpcmUoXCIuLi8uLi9zY3JlZW5PYmplY3RzL2FuZHJvaWQvYWRkLW5vdGUuc2NyZWVuXCIpO1xyXG4vL2NvbnN0IEVkaXROb3RlU2NyZWVuID0gcmVxdWlyZShcIi4uLy4uL3NjcmVlbk9iamVjdHMvYW5kcm9pZC9lZGl0LW5vdGUuc2NyZWVuXCIpO1xyXG5pbXBvcnQgRWRpdE5vdGVTY3JlZW4gZnJvbSAnLi4vLi4vc2NyZWVuT2JqZWN0cy9hbmRyb2lkL2VkaXQtbm90ZS5zY3JlZW4nOyAgIC8vYmFhYmVsXHJcblxyXG5kZXNjcmliZSgnRGVsZXRlIE5vdGVzJywgKCkgPT4ge1xyXG4gICBcclxuIGl0KCdkZWxldGUgbm90ZSwgdmVyaWZ5IHRyYXNoIGNhbicsIGFzeW5jICgpID0+IHtcclxuICAgIGNvbnNvbGUubG9nKFwiVXNlciBpbiBkZWxldGUgbm90ZSBmdW5jdGlvblwiKVxyXG4gICAgYXdhaXQgRWRpdE5vdGVTY3JlZW4uc2tpcFR1dG9yaWFsKCk7XHJcbiAgICBhd2FpdCBFZGl0Tm90ZVNjcmVlbi5zYXZlQW5kdmVyaWZ5KFwiRmF2IFRWIFNob3dcIiwgXCJOYXJ1dG9cXG5Ub20gYW5kIEplcnJ5XFxuTm9kZHlcIik7XHJcbiAgICBhd2FpdCBkcml2ZXIuYmFjaygpO1xyXG4gICAgYXdhaXQgRWRpdE5vdGVTY3JlZW4uZ2V0VGl0bGUuY2xpY2soKTtcclxuICAgIGF3YWl0IEVkaXROb3RlU2NyZWVuLm1vcmUuY2xpY2soKTtcclxuICAgIGF3YWl0IEVkaXROb3RlU2NyZWVuLmRlbGV0ZS5jbGljaygpO1xyXG4gICAgYXdhaXQgZHJpdmVyLmFjY2VwdEFsZXJ0KCk7XHJcbiAgICAvL2FuZHJvaWQud2lkZ2V0LkJ1dHRvbltAdGV4dD0nT0snXVxyXG4gICAgYXdhaXQgZXhwZWN0KEVkaXROb3RlU2NyZWVuLmdldFRpdGxlKS5ub3QudG9FeGlzdCgpO1xyXG4gICAgYXdhaXQgRWRpdE5vdGVTY3JlZW4ubmF2LmNsaWNrKCk7XHJcbiAgICBhd2FpdCBFZGl0Tm90ZVNjcmVlbi50cmFzaENhbi5jbGljaygpO1xyXG4gICAgYXdhaXQgZXhwZWN0KEVkaXROb3RlU2NyZWVuLmdldFRpdGxlKS50b0V4aXN0KCk7XHJcblxyXG4gfSlcclxuXHJcbiBpdC5vbmx5KCdhY2NlcyB3ZWJ2aWUgZWxlbWVudHMnLCBhc3luYygpID0+IHtcclxuY29uc29sZS5sb2coJ3VzZXIgaW4gc3dpdGNoIGNvbnRlY3QgZnVuY3lpb24nKVxyXG5hd2FpdCBFZGl0Tm90ZVNjcmVlbi5za2lwVHV0b3JpYWwoKTtcclxuYXdhaXQgRWRpdE5vdGVTY3JlZW4ubmF2LmNsaWNrKCk7XHJcbi8vY2xpY2sgb24gdGhlIGZiIGxpbmtcclxuYXdhaXQgJCgnLy8qW0B0ZXh0PVwiTGlrZSB1cyBvbiBGYWNlYm9va1wiXScpLmNsaWNrKCk7XHJcbi8vZ2V0IGN1cnJlbnQgY29udGV4dFxyXG5jb25zb2xlLmxvZyhhd2FpdCBkcml2ZXIuZ2V0Q29udGV4dCgpKTtcclxuLy9nZXQgYWxsIHRoZSBjb250ZXh0c1xyXG5kcml2ZXIucGF1c2UoMjAwMCk7XHJcbmNvbnNvbGUubG9nKGF3YWl0IGRyaXZlci5nZXRDb250ZXh0cygpKTtcclxuLy9zd2l0Y2ggdG8gd2VidmlldyBjaHJvbWUgY29udGV4dFxyXG4vL2F3YWl0IGRyaXZlci5zd2l0Y2hDb250ZXh0KCdXRUJWSUVXX2Nocm9tZScpO1xyXG4vL2Fzc2VyIHRociBjb3ZlciBpbWFnZSBkaXNwbGF5ZWRcclxuLy9hd2FpdCBleHBlY3QoYXdhaXQgJCgnLmltZy5jb3ZlclBob3RvJykpLnRvQmVEaXNwbGF5ZWQoKTtcclxuICAgLy9zd2l0Y2ggYmFjayB0byB0aGUgbmF0aXZlIGFwcFxyXG4gICBhd2FpdCBkcml2ZXIuc3dpdGNoQ29udGV4dCgnTkFUSVZFX0FQUCcpO1xyXG4gICBhd2FpdCBkcml2ZXIuYmFjaygpO1xyXG4gICAvL2F3YWl0IHdpdGggYXBwIHN0dWZmXHJcbiAgIGF3YWl0IGV4cGVjdChFZGl0Tm90ZVNjcmVlbi50cmFzaENhbikudG9CZURpc3BsYXllZCgpO1xyXG4gfSk7XHJcbn0pOyJdLCJtYXBwaW5ncyI6Ijs7QUFFQSxJQUFBQSxTQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFBMEUsU0FBQUQsdUJBQUFFLEdBQUEsV0FBQUEsR0FBQSxJQUFBQSxHQUFBLENBQUFDLFVBQUEsR0FBQUQsR0FBQSxLQUFBRSxPQUFBLEVBQUFGLEdBQUE7QUFGMUU7QUFDQTtBQUM2RTs7QUFFN0VHLFFBQVEsQ0FBQyxjQUFjLEVBQUUsTUFBTTtFQUU5QkMsRUFBRSxDQUFDLCtCQUErQixFQUFFLFlBQVk7SUFDN0NDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLDhCQUE4QixDQUFDO0lBQzNDLE1BQU1DLGlCQUFjLENBQUNDLFlBQVksQ0FBQyxDQUFDO0lBQ25DLE1BQU1ELGlCQUFjLENBQUNFLGFBQWEsQ0FBQyxhQUFhLEVBQUUsOEJBQThCLENBQUM7SUFDakYsTUFBTUMsTUFBTSxDQUFDQyxJQUFJLENBQUMsQ0FBQztJQUNuQixNQUFNSixpQkFBYyxDQUFDSyxRQUFRLENBQUNDLEtBQUssQ0FBQyxDQUFDO0lBQ3JDLE1BQU1OLGlCQUFjLENBQUNPLElBQUksQ0FBQ0QsS0FBSyxDQUFDLENBQUM7SUFDakMsTUFBTU4saUJBQWMsQ0FBQ1EsTUFBTSxDQUFDRixLQUFLLENBQUMsQ0FBQztJQUNuQyxNQUFNSCxNQUFNLENBQUNNLFdBQVcsQ0FBQyxDQUFDO0lBQzFCO0lBQ0EsTUFBTUMsTUFBTSxDQUFDVixpQkFBYyxDQUFDSyxRQUFRLENBQUMsQ0FBQ00sR0FBRyxDQUFDQyxPQUFPLENBQUMsQ0FBQztJQUNuRCxNQUFNWixpQkFBYyxDQUFDYSxHQUFHLENBQUNQLEtBQUssQ0FBQyxDQUFDO0lBQ2hDLE1BQU1OLGlCQUFjLENBQUNjLFFBQVEsQ0FBQ1IsS0FBSyxDQUFDLENBQUM7SUFDckMsTUFBTUksTUFBTSxDQUFDVixpQkFBYyxDQUFDSyxRQUFRLENBQUMsQ0FBQ08sT0FBTyxDQUFDLENBQUM7RUFFbEQsQ0FBQyxDQUFDO0VBRUZmLEVBQUUsQ0FBQ2tCLElBQUksQ0FBQyx1QkFBdUIsRUFBRSxZQUFXO0lBQzdDakIsT0FBTyxDQUFDQyxHQUFHLENBQUMsaUNBQWlDLENBQUM7SUFDOUMsTUFBTUMsaUJBQWMsQ0FBQ0MsWUFBWSxDQUFDLENBQUM7SUFDbkMsTUFBTUQsaUJBQWMsQ0FBQ2EsR0FBRyxDQUFDUCxLQUFLLENBQUMsQ0FBQztJQUNoQztJQUNBLE1BQU1VLENBQUMsQ0FBQyxrQ0FBa0MsQ0FBQyxDQUFDVixLQUFLLENBQUMsQ0FBQztJQUNuRDtJQUNBUixPQUFPLENBQUNDLEdBQUcsQ0FBQyxNQUFNSSxNQUFNLENBQUNjLFVBQVUsQ0FBQyxDQUFDLENBQUM7SUFDdEM7SUFDQWQsTUFBTSxDQUFDZSxLQUFLLENBQUMsSUFBSSxDQUFDO0lBQ2xCcEIsT0FBTyxDQUFDQyxHQUFHLENBQUMsTUFBTUksTUFBTSxDQUFDZ0IsV0FBVyxDQUFDLENBQUMsQ0FBQztJQUN2QztJQUNBO0lBQ0E7SUFDQTtJQUNHO0lBQ0EsTUFBTWhCLE1BQU0sQ0FBQ2lCLGFBQWEsQ0FBQyxZQUFZLENBQUM7SUFDeEMsTUFBTWpCLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDLENBQUM7SUFDbkI7SUFDQSxNQUFNTSxNQUFNLENBQUNWLGlCQUFjLENBQUNjLFFBQVEsQ0FBQyxDQUFDTyxhQUFhLENBQUMsQ0FBQztFQUN2RCxDQUFDLENBQUM7QUFDSCxDQUFDLENBQUMifQ==","map":{"version":3,"names":["_editNote","_interopRequireDefault","require","obj","__esModule","default","describe","it","console","log","EditNoteScreen","skipTutorial","saveAndverify","driver","back","getTitle","click","more","delete","acceptAlert","expect","not","toExist","nav","trashCan","only","$","getContext","pause","getContexts","switchContext","toBeDisplayed"],"sourceRoot":"C:\\Users\\rajee\\Downloads\\Selenium(Test1To4)\\webdriverio-appium\\test\\specs\\android\\","sources":["edit-note-screen.spec.js"],"sourcesContent":["//const AddNoteScreen = require(\"../../screenObjects/android/add-note.screen\");\r\n//const EditNoteScreen = require(\"../../screenObjects/android/edit-note.screen\");\r\nimport EditNoteScreen from '../../screenObjects/android/edit-note.screen';   //baabel\r\n\r\ndescribe('Delete Notes', () => {\r\n   \r\n it('delete note, verify trash can', async () => {\r\n    console.log(\"User in delete note function\")\r\n    await EditNoteScreen.skipTutorial();\r\n    await EditNoteScreen.saveAndverify(\"Fav TV Show\", \"Naruto\\nTom and Jerry\\nNoddy\");\r\n    await driver.back();\r\n    await EditNoteScreen.getTitle.click();\r\n    await EditNoteScreen.more.click();\r\n    await EditNoteScreen.delete.click();\r\n    await driver.acceptAlert();\r\n    //android.widget.Button[@text='OK']\r\n    await expect(EditNoteScreen.getTitle).not.toExist();\r\n    await EditNoteScreen.nav.click();\r\n    await EditNoteScreen.trashCan.click();\r\n    await expect(EditNoteScreen.getTitle).toExist();\r\n\r\n })\r\n\r\n it.only('acces webvie elements', async() => {\r\nconsole.log('user in switch contect funcyion')\r\nawait EditNoteScreen.skipTutorial();\r\nawait EditNoteScreen.nav.click();\r\n//click on the fb link\r\nawait $('//*[@text=\"Like us on Facebook\"]').click();\r\n//get current context\r\nconsole.log(await driver.getContext());\r\n//get all the contexts\r\ndriver.pause(2000);\r\nconsole.log(await driver.getContexts());\r\n//switch to webview chrome context\r\n//await driver.switchContext('WEBVIEW_chrome');\r\n//asser thr cover image displayed\r\n//await expect(await $('.img.coverPhoto')).toBeDisplayed();\r\n   //switch back to the native app\r\n   await driver.switchContext('NATIVE_APP');\r\n   await driver.back();\r\n   //await with app stuff\r\n   await expect(EditNoteScreen.trashCan).toBeDisplayed();\r\n });\r\n});"],"mappings":";;AAEA,IAAAA,SAAA,GAAAC,sBAAA,CAAAC,OAAA;AAA0E,SAAAD,uBAAAE,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAF1E;AACA;AAC6E;;AAE7EG,QAAQ,CAAC,cAAc,EAAE,MAAM;EAE9BC,EAAE,CAAC,+BAA+B,EAAE,YAAY;IAC7CC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC3C,MAAMC,iBAAc,CAACC,YAAY,CAAC,CAAC;IACnC,MAAMD,iBAAc,CAACE,aAAa,CAAC,aAAa,EAAE,8BAA8B,CAAC;IACjF,MAAMC,MAAM,CAACC,IAAI,CAAC,CAAC;IACnB,MAAMJ,iBAAc,CAACK,QAAQ,CAACC,KAAK,CAAC,CAAC;IACrC,MAAMN,iBAAc,CAACO,IAAI,CAACD,KAAK,CAAC,CAAC;IACjC,MAAMN,iBAAc,CAACQ,MAAM,CAACF,KAAK,CAAC,CAAC;IACnC,MAAMH,MAAM,CAACM,WAAW,CAAC,CAAC;IAC1B;IACA,MAAMC,MAAM,CAACV,iBAAc,CAACK,QAAQ,CAAC,CAACM,GAAG,CAACC,OAAO,CAAC,CAAC;IACnD,MAAMZ,iBAAc,CAACa,GAAG,CAACP,KAAK,CAAC,CAAC;IAChC,MAAMN,iBAAc,CAACc,QAAQ,CAACR,KAAK,CAAC,CAAC;IACrC,MAAMI,MAAM,CAACV,iBAAc,CAACK,QAAQ,CAAC,CAACO,OAAO,CAAC,CAAC;EAElD,CAAC,CAAC;EAEFf,EAAE,CAACkB,IAAI,CAAC,uBAAuB,EAAE,YAAW;IAC7CjB,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;IAC9C,MAAMC,iBAAc,CAACC,YAAY,CAAC,CAAC;IACnC,MAAMD,iBAAc,CAACa,GAAG,CAACP,KAAK,CAAC,CAAC;IAChC;IACA,MAAMU,CAAC,CAAC,kCAAkC,CAAC,CAACV,KAAK,CAAC,CAAC;IACnD;IACAR,OAAO,CAACC,GAAG,CAAC,MAAMI,MAAM,CAACc,UAAU,CAAC,CAAC,CAAC;IACtC;IACAd,MAAM,CAACe,KAAK,CAAC,IAAI,CAAC;IAClBpB,OAAO,CAACC,GAAG,CAAC,MAAMI,MAAM,CAACgB,WAAW,CAAC,CAAC,CAAC;IACvC;IACA;IACA;IACA;IACG;IACA,MAAMhB,MAAM,CAACiB,aAAa,CAAC,YAAY,CAAC;IACxC,MAAMjB,MAAM,CAACC,IAAI,CAAC,CAAC;IACnB;IACA,MAAMM,MAAM,CAACV,iBAAc,CAACc,QAAQ,CAAC,CAACO,aAAa,CAAC,CAAC;EACvD,CAAC,CAAC;AACH,CAAC,CAAC"}},"mtime":1699549039740},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\rajee\\\\Downloads\\\\Selenium(Test1To4)\\\\webdriverio-appium\\\\config\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\rajee\\\\Downloads\\\\Selenium(Test1To4)\\\\webdriverio-appium\\\\config\",\"filename\":\"C:\\\\Users\\\\rajee\\\\Downloads\\\\Selenium(Test1To4)\\\\webdriverio-appium\\\\config\\\\wdio.android.bs.conf.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\rajee\\\\Downloads\\\\Selenium(Test1To4)\\\\webdriverio-appium\\\\config\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.23.2:test":{"value":{"code":"const {\n  config\n} = require('./wdio.shared.conf.js');\nconfig.user = process.env.BROWSERSTACK_USER;\nconfig.key = process.env.BROWSERSTACK_KEY;\nconfig.specs = ['../test/specs/android/edit-note-screen.spec.js'\n//'../test/specs/hooks.spec.js'\n];\n\nconfig.capabilities = [{\n  platformName: 'android',\n  'appium:platformVersion': '9.0',\n  'appium:deviceName': 'Google Pixel 3',\n  'appium:automationName': 'UIAutomator2',\n  'appium:app': 'bs://aa4f99d69f7b9e24750e609d8f6ca4f068249c25',\n  //colornote.apk file\n  'appium:autoGrantPermissions': true\n}];\n\n//config.services = ['browserstack'];\nconfig.services = [['browserstack', {\n  args: {\n    relaxedSecurity: true\n  },\n  logPath: './'\n}]];\nexports.config = config;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb25maWciLCJyZXF1aXJlIiwidXNlciIsInByb2Nlc3MiLCJlbnYiLCJCUk9XU0VSU1RBQ0tfVVNFUiIsImtleSIsIkJST1dTRVJTVEFDS19LRVkiLCJzcGVjcyIsImNhcGFiaWxpdGllcyIsInBsYXRmb3JtTmFtZSIsInNlcnZpY2VzIiwiYXJncyIsInJlbGF4ZWRTZWN1cml0eSIsImxvZ1BhdGgiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHJhamVlXFxEb3dubG9hZHNcXFNlbGVuaXVtKFRlc3QxVG80KVxcd2ViZHJpdmVyaW8tYXBwaXVtXFxjb25maWdcXCIsInNvdXJjZXMiOlsid2Rpby5hbmRyb2lkLmJzLmNvbmYuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBjb25maWcgfSA9IHJlcXVpcmUoJy4vd2Rpby5zaGFyZWQuY29uZi5qcycpO1xyXG5cclxuY29uZmlnLnVzZXIgPSBwcm9jZXNzLmVudi5CUk9XU0VSU1RBQ0tfVVNFUjtcclxuY29uZmlnLmtleSA9IHByb2Nlc3MuZW52LkJST1dTRVJTVEFDS19LRVk7XHJcbmNvbmZpZy5zcGVjcyA9IFtcclxuICcuLi90ZXN0L3NwZWNzL2FuZHJvaWQvZWRpdC1ub3RlLXNjcmVlbi5zcGVjLmpzJ1xyXG4gLy8nLi4vdGVzdC9zcGVjcy9ob29rcy5zcGVjLmpzJ1xyXG5dO1xyXG5cclxuY29uZmlnLmNhcGFiaWxpdGllcyA9IFtcclxuICAgIHtcclxuICAgIHBsYXRmb3JtTmFtZTogJ2FuZHJvaWQnLFxyXG4gICAgJ2FwcGl1bTpwbGF0Zm9ybVZlcnNpb24nOiAnOS4wJyxcclxuICAgICdhcHBpdW06ZGV2aWNlTmFtZSc6ICdHb29nbGUgUGl4ZWwgMycsXHJcbiAgICAnYXBwaXVtOmF1dG9tYXRpb25OYW1lJzogJ1VJQXV0b21hdG9yMicsXHJcbiAgICAnYXBwaXVtOmFwcCc6ICdiczovL2FhNGY5OWQ2OWY3YjllMjQ3NTBlNjA5ZDhmNmNhNGYwNjgyNDljMjUnLCAvL2NvbG9ybm90ZS5hcGsgZmlsZVxyXG4gICAgJ2FwcGl1bTphdXRvR3JhbnRQZXJtaXNzaW9ucycgOiB0cnVlXHJcbn1dO1xyXG5cclxuLy9jb25maWcuc2VydmljZXMgPSBbJ2Jyb3dzZXJzdGFjayddO1xyXG5jb25maWcuc2VydmljZXMgPSBbWydicm93c2Vyc3RhY2snLCB7XHJcbmFyZ3M6e1xyXG4gICAgcmVsYXhlZFNlY3VyaXR5OiB0cnVlXHJcbn0sXHJcbmxvZ1BhdGg6ICcuLydcclxufVxyXG5cclxuXV07XHJcbmV4cG9ydHMuY29uZmlnID0gY29uZmlnO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBLE1BQU07RUFBRUE7QUFBTyxDQUFDLEdBQUdDLE9BQU8sQ0FBQyx1QkFBdUIsQ0FBQztBQUVuREQsTUFBTSxDQUFDRSxJQUFJLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDQyxpQkFBaUI7QUFDM0NMLE1BQU0sQ0FBQ00sR0FBRyxHQUFHSCxPQUFPLENBQUNDLEdBQUcsQ0FBQ0csZ0JBQWdCO0FBQ3pDUCxNQUFNLENBQUNRLEtBQUssR0FBRyxDQUNkO0FBQ0E7QUFBQSxDQUNBOztBQUVEUixNQUFNLENBQUNTLFlBQVksR0FBRyxDQUNsQjtFQUNBQyxZQUFZLEVBQUUsU0FBUztFQUN2Qix3QkFBd0IsRUFBRSxLQUFLO0VBQy9CLG1CQUFtQixFQUFFLGdCQUFnQjtFQUNyQyx1QkFBdUIsRUFBRSxjQUFjO0VBQ3ZDLFlBQVksRUFBRSwrQ0FBK0M7RUFBRTtFQUMvRCw2QkFBNkIsRUFBRztBQUNwQyxDQUFDLENBQUM7O0FBRUY7QUFDQVYsTUFBTSxDQUFDVyxRQUFRLEdBQUcsQ0FBQyxDQUFDLGNBQWMsRUFBRTtFQUNwQ0MsSUFBSSxFQUFDO0lBQ0RDLGVBQWUsRUFBRTtFQUNyQixDQUFDO0VBQ0RDLE9BQU8sRUFBRTtBQUNULENBQUMsQ0FFQSxDQUFDO0FBQ0ZDLE9BQU8sQ0FBQ2YsTUFBTSxHQUFHQSxNQUFNIn0=","map":{"version":3,"names":["config","require","user","process","env","BROWSERSTACK_USER","key","BROWSERSTACK_KEY","specs","capabilities","platformName","services","args","relaxedSecurity","logPath","exports"],"sourceRoot":"C:\\Users\\rajee\\Downloads\\Selenium(Test1To4)\\webdriverio-appium\\config\\","sources":["wdio.android.bs.conf.js"],"sourcesContent":["const { config } = require('./wdio.shared.conf.js');\r\n\r\nconfig.user = process.env.BROWSERSTACK_USER;\r\nconfig.key = process.env.BROWSERSTACK_KEY;\r\nconfig.specs = [\r\n '../test/specs/android/edit-note-screen.spec.js'\r\n //'../test/specs/hooks.spec.js'\r\n];\r\n\r\nconfig.capabilities = [\r\n    {\r\n    platformName: 'android',\r\n    'appium:platformVersion': '9.0',\r\n    'appium:deviceName': 'Google Pixel 3',\r\n    'appium:automationName': 'UIAutomator2',\r\n    'appium:app': 'bs://aa4f99d69f7b9e24750e609d8f6ca4f068249c25', //colornote.apk file\r\n    'appium:autoGrantPermissions' : true\r\n}];\r\n\r\n//config.services = ['browserstack'];\r\nconfig.services = [['browserstack', {\r\nargs:{\r\n    relaxedSecurity: true\r\n},\r\nlogPath: './'\r\n}\r\n\r\n]];\r\nexports.config = config;\r\n"],"mappings":"AAAA,MAAM;EAAEA;AAAO,CAAC,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AAEnDD,MAAM,CAACE,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAC3CL,MAAM,CAACM,GAAG,GAAGH,OAAO,CAACC,GAAG,CAACG,gBAAgB;AACzCP,MAAM,CAACQ,KAAK,GAAG,CACd;AACA;AAAA,CACA;;AAEDR,MAAM,CAACS,YAAY,GAAG,CAClB;EACAC,YAAY,EAAE,SAAS;EACvB,wBAAwB,EAAE,KAAK;EAC/B,mBAAmB,EAAE,gBAAgB;EACrC,uBAAuB,EAAE,cAAc;EACvC,YAAY,EAAE,+CAA+C;EAAE;EAC/D,6BAA6B,EAAG;AACpC,CAAC,CAAC;;AAEF;AACAV,MAAM,CAACW,QAAQ,GAAG,CAAC,CAAC,cAAc,EAAE;EACpCC,IAAI,EAAC;IACDC,eAAe,EAAE;EACrB,CAAC;EACDC,OAAO,EAAE;AACT,CAAC,CAEA,CAAC;AACFC,OAAO,CAACf,MAAM,GAAGA,MAAM"}},"mtime":1699547875688},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\rajee\\\\Downloads\\\\Selenium(Test1To4)\\\\webdriverio-appium\\\\config\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\rajee\\\\Downloads\\\\Selenium(Test1To4)\\\\webdriverio-appium\\\\config\",\"filename\":\"C:\\\\Users\\\\rajee\\\\Downloads\\\\Selenium(Test1To4)\\\\webdriverio-appium\\\\config\\\\wdio.shared.conf.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\rajee\\\\Downloads\\\\Selenium(Test1To4)\\\\webdriverio-appium\\\\config\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.23.2:test":{"value":{"code":"//const path = require('path');\n\nexports.config = {\n  //\n  // ====================\n  // Runner Configuration\n  // ====================\n  // WebdriverIO supports running e2e tests as well as unit and component tests.\n  runner: 'local',\n  //\n  // ==================\n  // Specify Test Files\n  // ==================\n  // Define which test specs should run. The pattern is relative to the directory\n  // of the configuration file being run.\n  //\n  // The specs are defined as an array of spec files (optionally using wildcards\n  // that will be expanded). The test for each spec file will be run in a separate\n  // worker process. In order to have a group of spec files run in the same worker\n  // process simply enclose them in an array within the specs array.\n  //\n  // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n  // then the current working directory is where your `package.json` resides, so `wdio`\n  // will be called from there.\n  //\n\n  // Patterns to exclude.\n  exclude: [\n    // 'path/to/excluded/files'\n  ],\n  //\n  // ============\n  // Capabilities\n  // ============\n  // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n  // time. Depending on the number of capabilities, WebdriverIO launches several test\n  // sessions. Within your capabilities you can overwrite the spec and exclude options in\n  // order to group specific specs to a specific capability.\n  //\n  // First, you can define how many instances should be started at the same time. Let's\n  // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n  // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n  // files and you set maxInstances to 10, all spec files will get tested at the same time\n  // and 30 processes will get spawned. The property handles how many capabilities\n  // from the same test should run tests.\n  //\n  maxInstances: 10,\n  //\n  // If you have trouble getting all important capabilities together, check out the\n  // Sauce Labs platform configurator - a great tool to configure your capabilities:\n  // https://saucelabs.com/platform/platform-configurator\n  //\n\n  //capabilities: [{\n  //   'appium:platformName' : 'Android',\n  //   'appium:platformVersion' : '10.0',\n  //  'appium:deviceName' : 'Nexus S',\n  //  'appium:automationName' : 'UIAutomator2',\n  //'appium:app' : path.join(process.cwd(), 'app\\android\\ApiDemos-debug.apk')\n  // 'appium:app' : 'C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\\\\app\\\\android\\\\ApiDemos-debug.apk'\n  //  }],\n  // capabilities for local Appium web tests on an Android Emulator\n  ////platformName: 'Android',\n  //browserName: 'Chrome',\n  //'appium:deviceName': 'Android GoogleAPI Emulator',\n  // 'appium:platformVersion': '12.0',\n  //'appium:automationName': 'UiAutomator2'\n\n  //\n  // ===================\n  // Test Configurations\n  // ===================\n  // Define all options that are relevant for the WebdriverIO instance here\n  //\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  logLevel: 'info',\n  //\n  // Set specific log levels per logger\n  // loggers:\n  // - webdriver, webdriverio\n  // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n  // - @wdio/mocha-framework, @wdio/jasmine-framework\n  // - @wdio/local-runner\n  // - @wdio/sumologic-reporter\n  // - @wdio/cli, @wdio/config, @wdio/utils\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  // logLevels: {\n  //     webdriver: 'info',\n  //     '@wdio/appium-service': 'info'\n  // },\n  //\n  // If you only want to run your tests until a specific amount of tests have failed use\n  // bail (default is 0 - don't bail, run all tests).\n  bail: 0,\n  //\n  // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n  // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n  // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n  // gets prepended directly.\n  baseUrl: '',\n  //\n  // Default timeout for all waitFor* commands.\n  waitforTimeout: 10000,\n  //\n  // Default timeout in milliseconds for request\n  // if browser driver or grid doesn't send response\n  connectionRetryTimeout: 120000,\n  //\n  // Default request retries count\n  connectionRetryCount: 3,\n  //\n  // Test runner services\n  // Services take over a specific job you don't want to take care of. They enhance\n  // your test setup with almost no effort. Unlike plugins, they don't add new\n  // commands. Instead, they hook themselves up into the test process.\n  //services: ['appium'],\n\n  // Framework you want to run your specs with.\n  // The following are supported: Mocha, Jasmine, and Cucumber\n  // see also: https://webdriver.io/docs/frameworks\n  //\n  // Make sure you have the wdio adapter package for the specific framework installed\n  // before running any tests.\n  framework: 'mocha',\n  //\n  // The number of times to retry the entire specfile when it fails as a whole\n  // specFileRetries: 1,\n  //\n  // Delay in seconds between the spec file retry attempts\n  // specFileRetriesDelay: 0,\n  //\n  // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n  // specFileRetriesDeferred: false,\n  //\n  // Test reporter for stdout.\n  // The only one supported by default is 'dot'\n  // see also: https://webdriver.io/docs/dot-reporter\n  reporters: ['spec', ['allure', {\n    outputDir: 'allure-results',\n    disableWebdriverStepsReporting: false,\n    disableWebdriverScreenshotsReporting: false\n  }]],\n  //\n  // Options to be passed to Mocha.\n  // See the full list at http://mochajs.org/\n  mochaOpts: {\n    ui: 'bdd',\n    timeout: 60000\n  },\n  //\n  // =====\n  // Hooks\n  // =====\n  // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n  // it and to build services around it. You can either apply a single function or an array of\n  // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n  // resolved to continue.\n  /**\r\n   * Gets executed once before all workers get launched.\r\n   * @param {object} config wdio configuration object\r\n   * @param {Array.<Object>} capabilities list of capabilities details\r\n   */\n  // onPrepare: function (config, capabilities) {\n  //},\n  /**\r\n   * Gets executed before a worker process is spawned and can be used to initialise specific service\r\n   * for that worker as well as modify runtime environments in an async fashion.\r\n   * @param  {string} cid      capability id (e.g 0-0)\r\n   * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\r\n   * @param  {object} specs    specs to be run in the worker process\r\n   * @param  {object} args     object that will be merged with the main configuration once worker is initialized\r\n   * @param  {object} execArgv list of string arguments passed to the worker process\r\n   */\n  // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n  // },\n  /**\r\n   * Gets executed just after a worker process has exited.\r\n   * @param  {string} cid      capability id (e.g 0-0)\r\n   * @param  {number} exitCode 0 - success, 1 - fail\r\n   * @param  {object} specs    specs to be run in the worker process\r\n   * @param  {number} retries  number of retries used\r\n   */\n  // onWorkerEnd: function (cid, exitCode, specs, retries) {\n  // },\n  /**\r\n   * Gets executed just before initialising the webdriver session and test framework. It allows you\r\n   * to manipulate configurations depending on the capability or spec.\r\n   * @param {object} config wdio configuration object\r\n   * @param {Array.<Object>} capabilities list of capabilities details\r\n   * @param {Array.<String>} specs List of spec file paths that are to be run\r\n   * @param {string} cid worker id (e.g. 0-0)\r\n   */\n  // beforeSession: function (config, capabilities, specs, cid) {\n  // },\n  /**\r\n   * Gets executed before test execution begins. At this point you can access to all global\r\n   * variables like `browser`. It is the perfect place to define custom commands.\r\n   * @param {Array.<Object>} capabilities list of capabilities details\r\n   * @param {Array.<String>} specs        List of spec file paths that are to be run\r\n   * @param {object}         browser      instance of created browser/device session\r\n   */\n  // before: function (capabilities, specs) {\n  // },\n  /**\r\n   * Runs before a WebdriverIO command gets executed.\r\n   * @param {string} commandName hook command name\r\n   * @param {Array} args arguments that command would receive\r\n   */\n  // beforeCommand: function (commandName, args) {\n  // },\n  /**\r\n   * Hook that gets executed before the suite starts\r\n   * @param {object} suite suite details\r\n   */\n  // beforeSuite: function (suite) {\n  // },\n  /**\r\n   * Function to be executed before a test (in Mocha/Jasmine) starts.\r\n   */\n  // beforeTest: function (test, context) {\n  // },\n  /**\r\n   * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\r\n   * beforeEach in Mocha)\r\n   */\n  // beforeHook: function (test, context) {\n  // },\n  /**\r\n   * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\r\n   * afterEach in Mocha)\r\n   */\n  // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n  // },\n  /**\r\n   * Function to be executed after a test (in Mocha/Jasmine only)\r\n   * @param {object}  test             test object\r\n   * @param {object}  context          scope object the test was executed with\r\n   * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\r\n   * @param {*}       result.result    return object of test function\r\n   * @param {number}  result.duration  duration of test\r\n   * @param {boolean} result.passed    true if test has passed, otherwise false\r\n   * @param {object}  result.retries   information about spec related retries, e.g. `{ attempts: 0, limit: 0 }`\r\n   */\n  afterTest: async function (test, context, {\n    error\n  }) {\n    //result, duration, passed, retries\n    if (error) {\n      await driver.takeScreenshot();\n    }\n  }\n\n  /**\r\n   * Hook that gets executed after the suite has ended\r\n   * @param {object} suite suite details\r\n   */\n  // afterSuite: function (suite) {\n  // },\n  /**\r\n   * Runs after a WebdriverIO command gets executed\r\n   * @param {string} commandName hook command name\r\n   * @param {Array} args arguments that command would receive\r\n   * @param {number} result 0 - command success, 1 - command error\r\n   * @param {object} error error object if any\r\n   */\n  // afterCommand: function (commandName, args, result, error) {\n  // },\n  /**\r\n   * Gets executed after all tests are done. You still have access to all global variables from\r\n   * the test.\r\n   * @param {number} result 0 - test pass, 1 - test fail\r\n   * @param {Array.<Object>} capabilities list of capabilities details\r\n   * @param {Array.<String>} specs List of spec file paths that ran\r\n   */\n  // after: function (result, capabilities, specs) {\n  // },\n  /**\r\n   * Gets executed right after terminating the webdriver session.\r\n   * @param {object} config wdio configuration object\r\n   * @param {Array.<Object>} capabilities list of capabilities details\r\n   * @param {Array.<String>} specs List of spec file paths that ran\r\n   */\n  // afterSession: function (config, capabilities, specs) {\n  // },\n  /**\r\n   * Gets executed after all workers got shut down and the process is about to exit. An error\r\n   * thrown in the onComplete hook will result in the test run failing.\r\n   * @param {object} exitCode 0 - success, 1 - fail\r\n   * @param {object} config wdio configuration object\r\n   * @param {Array.<Object>} capabilities list of capabilities details\r\n   * @param {<Object>} results object containing test results\r\n   */\n  // onComplete: function(exitCode, config, capabilities, results) {\n  // },\n  /**\r\n  * Gets executed when a refresh happens.\r\n  * @param {string} oldSessionId session ID of the old session\r\n  * @param {string} newSessionId session ID of the new session\r\n  */\n  // onReload: function(oldSessionId, newSessionId) {\n  // }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["exports","config","runner","exclude","maxInstances","logLevel","bail","baseUrl","waitforTimeout","connectionRetryTimeout","connectionRetryCount","framework","reporters","outputDir","disableWebdriverStepsReporting","disableWebdriverScreenshotsReporting","mochaOpts","ui","timeout","afterTest","test","context","error","driver","takeScreenshot"],"sourceRoot":"C:\\Users\\rajee\\Downloads\\Selenium(Test1To4)\\webdriverio-appium\\config\\","sources":["wdio.shared.conf.js"],"sourcesContent":["//const path = require('path');\r\n\r\nexports.config = {\r\n    //\r\n    // ====================\r\n    // Runner Configuration\r\n    // ====================\r\n    // WebdriverIO supports running e2e tests as well as unit and component tests.\r\n    runner: 'local',\r\n    \r\n    //\r\n    // ==================\r\n    // Specify Test Files\r\n    // ==================\r\n    // Define which test specs should run. The pattern is relative to the directory\r\n    // of the configuration file being run.\r\n    //\r\n    // The specs are defined as an array of spec files (optionally using wildcards\r\n    // that will be expanded). The test for each spec file will be run in a separate\r\n    // worker process. In order to have a group of spec files run in the same worker\r\n    // process simply enclose them in an array within the specs array.\r\n    //\r\n    // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\r\n    // then the current working directory is where your `package.json` resides, so `wdio`\r\n    // will be called from there.\r\n    //\r\n  \r\n    // Patterns to exclude.\r\n    exclude: [\r\n        // 'path/to/excluded/files'\r\n    ],\r\n    //\r\n    // ============\r\n    // Capabilities\r\n    // ============\r\n    // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\r\n    // time. Depending on the number of capabilities, WebdriverIO launches several test\r\n    // sessions. Within your capabilities you can overwrite the spec and exclude options in\r\n    // order to group specific specs to a specific capability.\r\n    //\r\n    // First, you can define how many instances should be started at the same time. Let's\r\n    // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\r\n    // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\r\n    // files and you set maxInstances to 10, all spec files will get tested at the same time\r\n    // and 30 processes will get spawned. The property handles how many capabilities\r\n    // from the same test should run tests.\r\n    //\r\n    maxInstances: 10,\r\n    //\r\n    // If you have trouble getting all important capabilities together, check out the\r\n    // Sauce Labs platform configurator - a great tool to configure your capabilities:\r\n    // https://saucelabs.com/platform/platform-configurator\r\n    //\r\n   \r\n\r\n    //capabilities: [{\r\n    //   'appium:platformName' : 'Android',\r\n    //   'appium:platformVersion' : '10.0',\r\n    //  'appium:deviceName' : 'Nexus S',\r\n    //  'appium:automationName' : 'UIAutomator2',\r\n    //'appium:app' : path.join(process.cwd(), 'app\\android\\ApiDemos-debug.apk')\r\n    // 'appium:app' : 'C:\\\\Users\\\\rajee\\\\Appium\\\\webdriver-appium-v8\\\\app\\\\android\\\\ApiDemos-debug.apk'\r\n    //  }],\r\n    // capabilities for local Appium web tests on an Android Emulator\r\n    ////platformName: 'Android',\r\n    //browserName: 'Chrome',\r\n    //'appium:deviceName': 'Android GoogleAPI Emulator',\r\n    // 'appium:platformVersion': '12.0',\r\n    //'appium:automationName': 'UiAutomator2'\r\n\r\n\r\n    //\r\n    // ===================\r\n    // Test Configurations\r\n    // ===================\r\n    // Define all options that are relevant for the WebdriverIO instance here\r\n    //\r\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\r\n    logLevel: 'info',\r\n    //\r\n    // Set specific log levels per logger\r\n    // loggers:\r\n    // - webdriver, webdriverio\r\n    // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\r\n    // - @wdio/mocha-framework, @wdio/jasmine-framework\r\n    // - @wdio/local-runner\r\n    // - @wdio/sumologic-reporter\r\n    // - @wdio/cli, @wdio/config, @wdio/utils\r\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\r\n    // logLevels: {\r\n    //     webdriver: 'info',\r\n    //     '@wdio/appium-service': 'info'\r\n    // },\r\n    //\r\n    // If you only want to run your tests until a specific amount of tests have failed use\r\n    // bail (default is 0 - don't bail, run all tests).\r\n    bail: 0,\r\n    //\r\n    // Set a base URL in order to shorten url command calls. If your `url` parameter starts\r\n    // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\r\n    // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\r\n    // gets prepended directly.\r\n    baseUrl: '',\r\n    //\r\n    // Default timeout for all waitFor* commands.\r\n    waitforTimeout: 10000,\r\n    //\r\n    // Default timeout in milliseconds for request\r\n    // if browser driver or grid doesn't send response\r\n    connectionRetryTimeout: 120000,\r\n    //\r\n    // Default request retries count\r\n    connectionRetryCount: 3,\r\n    //\r\n    // Test runner services\r\n    // Services take over a specific job you don't want to take care of. They enhance\r\n    // your test setup with almost no effort. Unlike plugins, they don't add new\r\n    // commands. Instead, they hook themselves up into the test process.\r\n    //services: ['appium'],\r\n\r\n    // Framework you want to run your specs with.\r\n    // The following are supported: Mocha, Jasmine, and Cucumber\r\n    // see also: https://webdriver.io/docs/frameworks\r\n    //\r\n    // Make sure you have the wdio adapter package for the specific framework installed\r\n    // before running any tests.\r\n    framework: 'mocha',\r\n    //\r\n    // The number of times to retry the entire specfile when it fails as a whole\r\n    // specFileRetries: 1,\r\n    //\r\n    // Delay in seconds between the spec file retry attempts\r\n    // specFileRetriesDelay: 0,\r\n    //\r\n    // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\r\n    // specFileRetriesDeferred: false,\r\n    //\r\n    // Test reporter for stdout.\r\n    // The only one supported by default is 'dot'\r\n    // see also: https://webdriver.io/docs/dot-reporter\r\n    reporters: ['spec', \r\n    ['allure', {\r\n        outputDir: 'allure-results',\r\n        disableWebdriverStepsReporting: false,\r\n        disableWebdriverScreenshotsReporting: false,\r\n    }]\r\n    \r\n],\r\n\r\n\r\n    //\r\n    // Options to be passed to Mocha.\r\n    // See the full list at http://mochajs.org/\r\n    mochaOpts: {\r\n        ui: 'bdd',\r\n        timeout: 60000\r\n    },\r\n    //\r\n    // =====\r\n    // Hooks\r\n    // =====\r\n    // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\r\n    // it and to build services around it. You can either apply a single function or an array of\r\n    // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\r\n    // resolved to continue.\r\n    /**\r\n     * Gets executed once before all workers get launched.\r\n     * @param {object} config wdio configuration object\r\n     * @param {Array.<Object>} capabilities list of capabilities details\r\n     */\r\n    // onPrepare: function (config, capabilities) {\r\n    //},\r\n    /**\r\n     * Gets executed before a worker process is spawned and can be used to initialise specific service\r\n     * for that worker as well as modify runtime environments in an async fashion.\r\n     * @param  {string} cid      capability id (e.g 0-0)\r\n     * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\r\n     * @param  {object} specs    specs to be run in the worker process\r\n     * @param  {object} args     object that will be merged with the main configuration once worker is initialized\r\n     * @param  {object} execArgv list of string arguments passed to the worker process\r\n     */\r\n    // onWorkerStart: function (cid, caps, specs, args, execArgv) {\r\n    // },\r\n    /**\r\n     * Gets executed just after a worker process has exited.\r\n     * @param  {string} cid      capability id (e.g 0-0)\r\n     * @param  {number} exitCode 0 - success, 1 - fail\r\n     * @param  {object} specs    specs to be run in the worker process\r\n     * @param  {number} retries  number of retries used\r\n     */\r\n    // onWorkerEnd: function (cid, exitCode, specs, retries) {\r\n    // },\r\n    /**\r\n     * Gets executed just before initialising the webdriver session and test framework. It allows you\r\n     * to manipulate configurations depending on the capability or spec.\r\n     * @param {object} config wdio configuration object\r\n     * @param {Array.<Object>} capabilities list of capabilities details\r\n     * @param {Array.<String>} specs List of spec file paths that are to be run\r\n     * @param {string} cid worker id (e.g. 0-0)\r\n     */\r\n    // beforeSession: function (config, capabilities, specs, cid) {\r\n    // },\r\n    /**\r\n     * Gets executed before test execution begins. At this point you can access to all global\r\n     * variables like `browser`. It is the perfect place to define custom commands.\r\n     * @param {Array.<Object>} capabilities list of capabilities details\r\n     * @param {Array.<String>} specs        List of spec file paths that are to be run\r\n     * @param {object}         browser      instance of created browser/device session\r\n     */\r\n    // before: function (capabilities, specs) {\r\n    // },\r\n    /**\r\n     * Runs before a WebdriverIO command gets executed.\r\n     * @param {string} commandName hook command name\r\n     * @param {Array} args arguments that command would receive\r\n     */\r\n    // beforeCommand: function (commandName, args) {\r\n    // },\r\n    /**\r\n     * Hook that gets executed before the suite starts\r\n     * @param {object} suite suite details\r\n     */\r\n    // beforeSuite: function (suite) {\r\n    // },\r\n    /**\r\n     * Function to be executed before a test (in Mocha/Jasmine) starts.\r\n     */\r\n    // beforeTest: function (test, context) {\r\n    // },\r\n    /**\r\n     * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\r\n     * beforeEach in Mocha)\r\n     */\r\n    // beforeHook: function (test, context) {\r\n    // },\r\n    /**\r\n     * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\r\n     * afterEach in Mocha)\r\n     */\r\n    // afterHook: function (test, context, { error, result, duration, passed, retries }) {\r\n    // },\r\n    /**\r\n     * Function to be executed after a test (in Mocha/Jasmine only)\r\n     * @param {object}  test             test object\r\n     * @param {object}  context          scope object the test was executed with\r\n     * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\r\n     * @param {*}       result.result    return object of test function\r\n     * @param {number}  result.duration  duration of test\r\n     * @param {boolean} result.passed    true if test has passed, otherwise false\r\n     * @param {object}  result.retries   information about spec related retries, e.g. `{ attempts: 0, limit: 0 }`\r\n     */\r\n     afterTest: async function(test, context, { error }) { //result, duration, passed, retries\r\n        if(error){\r\n            await driver.takeScreenshot();\r\n        }\r\n     },\r\n\r\n\r\n    /**\r\n     * Hook that gets executed after the suite has ended\r\n     * @param {object} suite suite details\r\n     */\r\n    // afterSuite: function (suite) {\r\n    // },\r\n    /**\r\n     * Runs after a WebdriverIO command gets executed\r\n     * @param {string} commandName hook command name\r\n     * @param {Array} args arguments that command would receive\r\n     * @param {number} result 0 - command success, 1 - command error\r\n     * @param {object} error error object if any\r\n     */\r\n    // afterCommand: function (commandName, args, result, error) {\r\n    // },\r\n    /**\r\n     * Gets executed after all tests are done. You still have access to all global variables from\r\n     * the test.\r\n     * @param {number} result 0 - test pass, 1 - test fail\r\n     * @param {Array.<Object>} capabilities list of capabilities details\r\n     * @param {Array.<String>} specs List of spec file paths that ran\r\n     */\r\n    // after: function (result, capabilities, specs) {\r\n    // },\r\n    /**\r\n     * Gets executed right after terminating the webdriver session.\r\n     * @param {object} config wdio configuration object\r\n     * @param {Array.<Object>} capabilities list of capabilities details\r\n     * @param {Array.<String>} specs List of spec file paths that ran\r\n     */\r\n    // afterSession: function (config, capabilities, specs) {\r\n    // },\r\n    /**\r\n     * Gets executed after all workers got shut down and the process is about to exit. An error\r\n     * thrown in the onComplete hook will result in the test run failing.\r\n     * @param {object} exitCode 0 - success, 1 - fail\r\n     * @param {object} config wdio configuration object\r\n     * @param {Array.<Object>} capabilities list of capabilities details\r\n     * @param {<Object>} results object containing test results\r\n     */\r\n    // onComplete: function(exitCode, config, capabilities, results) {\r\n    // },\r\n    /**\r\n    * Gets executed when a refresh happens.\r\n    * @param {string} oldSessionId session ID of the old session\r\n    * @param {string} newSessionId session ID of the new session\r\n    */\r\n    // onReload: function(oldSessionId, newSessionId) {\r\n    // }\r\n}\r\n"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,MAAM,GAAG;EACb;EACA;EACA;EACA;EACA;EACAC,MAAM,EAAE,OAAO;EAEf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACAC,OAAO,EAAE;IACL;EAAA,CACH;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,EAAE;EAChB;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,QAAQ,EAAE,MAAM;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,IAAI,EAAE,CAAC;EACP;EACA;EACA;EACA;EACA;EACAC,OAAO,EAAE,EAAE;EACX;EACA;EACAC,cAAc,EAAE,KAAK;EACrB;EACA;EACA;EACAC,sBAAsB,EAAE,MAAM;EAC9B;EACA;EACAC,oBAAoB,EAAE,CAAC;EACvB;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,OAAO;EAClB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,CAAC,MAAM,EAClB,CAAC,QAAQ,EAAE;IACPC,SAAS,EAAE,gBAAgB;IAC3BC,8BAA8B,EAAE,KAAK;IACrCC,oCAAoC,EAAE;EAC1C,CAAC,CAAC,CAEL;EAGG;EACA;EACA;EACAC,SAAS,EAAE;IACPC,EAAE,EAAE,KAAK;IACTC,OAAO,EAAE;EACb,CAAC;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACKC,SAAS,EAAE,eAAAA,CAAeC,IAAI,EAAEC,OAAO,EAAE;IAAEC;EAAM,CAAC,EAAE;IAAE;IACnD,IAAGA,KAAK,EAAC;MACL,MAAMC,MAAM,CAACC,cAAc,CAAC,CAAC;IACjC;EACH;;EAGD;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;AACJ,CAAC"}},"mtime":1699940534352}}